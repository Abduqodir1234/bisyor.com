{"version":3,"sources":["components/signin-form/style.tsx","components/signin-form/index.tsx","containers/signin/style.tsx","containers/signin/index.tsx","pages/signin.tsx"],"names":["styled","div","StyledSignInWrap","StyledTitle","h3","themeGet","StyledDesc","p","StyledLabelWrap","StyledDivider","StyledBottomText","SigninForm","useForm","register","handleSubmit","errors","formState","action","onSubmit","data","alert","JSON","stringify","noValidate","mb","display","htmlFor","type","id","placeholder","feedbackText","email","message","state","hasKey","showState","required","pattern","value","path","fontSize","password","minLength","maxLength","color","fullwidth","variant","mt","rest","device","large","StyledSignin","AuthContainer","SignIn","fullHeight"],"mappings":"k9CAE0BA,IAAOC,IAAV,KAAhB,IAKMC,EAAmBF,IAAOC,IAAV,KAKhBE,EAAcH,IAAOI,GAAV,IACXC,YAAS,gBAITC,EAAaN,IAAOO,EAAV,IAEVF,YAAS,iBAITG,EAAkBR,IAAOC,IAAV,KAMfQ,EAAgBT,IAAOC,IAAV,IAKbI,YAAS,gBAGHA,YAAS,iBASAA,YAAS,iBAUxBK,EAAmBV,IAAOC,IAAV,KCkDdU,EAxFQ,WAAO,IAAD,MAKrBC,cAHAC,EAFqB,EAErBA,SACAC,EAHqB,EAGrBA,aACaC,EAJQ,EAIrBC,UAAaD,OAMjB,OACI,eAACb,EAAD,WACI,cAACC,EAAD,sBACA,cAACG,EAAD,uDACA,uBAAMW,OAAO,IAAIC,SAAUJ,GAPlB,SAACK,GACdC,MAAMC,KAAKC,UAAUH,EAAM,UAM4BI,YAAU,EAA7D,UACI,eAAC,IAAD,CAAWC,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,QAAxC,2BAGA,cAAC,IAAD,aACIC,KAAK,QACLC,GAAG,QACHC,YAAY,wBACZC,aAAY,OAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAQgB,aAAV,aAAE,EAAeC,QAC7BC,MAAOC,YAAOnB,EAAQ,SAAW,QAAU,UAC3CoB,YAAaD,YAAOnB,EAAQ,UACxBF,EAAS,QAAS,CAClBuB,SAAU,oBACVC,QAAS,CACLC,MAAO,4CACPN,QAAS,gCAKzB,eAAC,IAAD,CAAWR,GAAG,OAAd,UACI,eAAChB,EAAD,WACI,cAAC,IAAD,CAAOiB,QAAQ,QAAQD,GAAG,MAAME,QAAQ,WAAxC,sBAGA,cAAC,IAAD,CAAQa,KAAK,mBAAmBC,SAAS,OAAzC,iCAIJ,cAAC,IAAD,aACIZ,GAAG,WACHD,KAAK,WACLE,YAAY,sBACZC,aAAY,OAAEf,QAAF,IAAEA,GAAF,UAAEA,EAAQ0B,gBAAV,aAAE,EAAkBT,QAChCC,MAAOC,YAAOnB,EAAQ,YAAc,QAAU,UAC9CoB,YAAaD,YAAOnB,EAAQ,aACxBF,EAAS,WAAY,CACrBuB,SAAU,uBACVM,UAAW,CACPJ,MAAO,EACPN,QAAS,uBAEbW,UAAW,CACPL,MAAO,GACPN,QAAS,+BAKzB,cAAC,IAAD,CAAQL,KAAK,SAASiB,MAAM,SAASC,WAAS,EAA9C,qBAGA,cAACpC,EAAD,iBACA,cAAC,IAAD,CAAQqC,QAAQ,WAAWF,MAAM,WAAWC,WAAS,EAArD,mCAGA,cAAC,IAAD,CACIC,QAAQ,WACRF,MAAM,UACNG,GAAG,SACHF,WAAS,EAJb,kCAQA,eAACnC,EAAD,oCACgC,IAC5B,cAAC,IAAD,CAAQ6B,KAAK,UAAb,yC,muBChGOvC,aAAO,gBAAMgD,EAAN,2BAAiB,cAAC,IAAD,eAAWA,MAAnChD,CAAH,KAOOA,aAAO,gBAAMgD,EAAN,2BAAiB,cAAC,IAAD,eAAeA,MAAvChD,CAAH,IAGtBiD,IAAOC,OAKclD,IAAOC,IAAV,KAIKD,IAAOC,IAAV,KAnBnB,IA2BMkD,EAAenD,IAAOC,IAAV,KCXVmD,EARW,WACtB,OACQ,cAACD,EAAD,UACI,cAAC,EAAD,O,SCGDE,UAXU,WACrB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,IACA,cAAC,IAAD,CAASC,YAAU,EAAnB,SACI,cAAC,EAAD","file":"static/js/10.17c9f86c.chunk.js","sourcesContent":["import styled, { themeGet } from \"@doar/shared/styled\";\r\n\r\nexport const StyledWrap = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\n\r\nexport const StyledSignInWrap = styled.div`\r\n    width: 350px;\r\n`;\r\n\r\n\r\nexport const StyledTitle = styled.h3`\r\n    color: ${themeGet(\"colors.text\")};\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nexport const StyledDesc = styled.p`\r\n    font-size: 16px;\r\n    color: ${themeGet(\"colors.text3\")};\r\n    margin-bottom: 40px;\r\n`;\r\n\r\nexport const StyledLabelWrap = styled.div`\r\n    margin-bottom: 5px;\r\n    justify-content: space-between;\r\n    display: flex;\r\n`;\r\n\r\nexport const StyledDivider = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    text-transform: uppercase;\r\n    color: ${themeGet(\"colors.text3\")};\r\n    font-size: 10px;\r\n    font-weight: 500;\r\n    font-family: ${themeGet(\"fonts.interui\")};\r\n    letter-spacing: 0.5px;\r\n    margin: 15px 0;\r\n    &:after,\r\n    &:before {\r\n        content: \"\";\r\n        display: block;\r\n        flex: 1;\r\n        height: 1px;\r\n        background-color: ${themeGet(\"colors.light\")};\r\n    }\r\n    &:before {\r\n        margin-right: 10px;\r\n    }\r\n    &:after {\r\n        margin-left: 10px;\r\n    }\r\n`;\r\n\r\nexport const StyledBottomText = styled.div`\r\n    margin-top: 20px;\r\n    text-align: center;\r\n    font-size: 13px;\r\n`;\r\n","import { FC } from \"react\";\r\nimport { FormGroup, Label, Input, Anchor, Button } from \"@doar/components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { hasKey } from \"@doar/shared/methods\";\r\nimport {\r\n    StyledTitle,\r\n    StyledDesc,\r\n    StyledLabelWrap,\r\n    StyledDivider,\r\n    StyledBottomText,\r\n    StyledSignInWrap,\r\n} from \"./style\";\r\n\r\ninterface IFormValues {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nconst SigninForm: FC = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const onSubmit = (data: IFormValues) => {\r\n        alert(JSON.stringify(data, null));\r\n    };\r\n    return (\r\n        <StyledSignInWrap>\r\n            <StyledTitle>Sign In</StyledTitle>\r\n            <StyledDesc>Welcome back! Please signin to continue.</StyledDesc>\r\n            <form action=\"#\" onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <FormGroup mb=\"20px\">\r\n                    <Label display=\"block\" mb=\"5px\" htmlFor=\"email\">\r\n                        Email address\r\n                    </Label>\r\n                    <Input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"yourname@yourmail.com\"\r\n                        feedbackText={errors?.email?.message}\r\n                        state={hasKey(errors, \"email\") ? \"error\" : \"success\"}\r\n                        showState={!!hasKey(errors, \"email\")}\r\n                        {...register(\"email\", {\r\n                            required: \"Email is required\",\r\n                            pattern: {\r\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                message: \"invalid email address\",\r\n                            },\r\n                        })}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup mb=\"20px\">\r\n                    <StyledLabelWrap>\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"password\">\r\n                            Password\r\n                        </Label>\r\n                        <Anchor path=\"/forgot-password\" fontSize=\"13px\">\r\n                            Forgot password?\r\n                        </Anchor>\r\n                    </StyledLabelWrap>\r\n                    <Input\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your password\"\r\n                        feedbackText={errors?.password?.message}\r\n                        state={hasKey(errors, \"password\") ? \"error\" : \"success\"}\r\n                        showState={!!hasKey(errors, \"password\")}\r\n                        {...register(\"password\", {\r\n                            required: \"Password is required\",\r\n                            minLength: {\r\n                                value: 6,\r\n                                message: \"Minimum length is 6\",\r\n                            },\r\n                            maxLength: {\r\n                                value: 10,\r\n                                message: \"Minimum length is 10\",\r\n                            },\r\n                        })}\r\n                    />\r\n                </FormGroup>\r\n                <Button type=\"submit\" color=\"brand2\" fullwidth>\r\n                    Sign In\r\n                </Button>\r\n                <StyledDivider>or</StyledDivider>\r\n                <Button variant=\"outlined\" color=\"facebook\" fullwidth>\r\n                    Sign In With Facebook\r\n                </Button>\r\n                <Button\r\n                    variant=\"outlined\"\r\n                    color=\"twitter\"\r\n                    mt=\"0.5rem\"\r\n                    fullwidth\r\n                >\r\n                    Sign In With Twitter\r\n                </Button>\r\n                <StyledBottomText>\r\n                    Don&apos;t have an account?{\" \"}\r\n                    <Anchor path=\"/signup\">Create an Account</Anchor>\r\n                </StyledBottomText>\r\n            </form>\r\n        </StyledSignInWrap>\r\n    );\r\n};\r\n\r\nexport default SigninForm;\r\n","import styled, { device } from \"@doar/shared/styled\";\r\nimport { Media, MediaBody } from \"@doar/components\";\r\n\r\nexport const StyledMedia = styled(({ ...rest }) => <Media {...rest} />)`\r\n    position: relative;\r\n    height: 100%;\r\n    align-items: stretch;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const StyledMediaBody = styled(({ ...rest }) => <MediaBody {...rest} />)`\r\n    align-items: center;\r\n    display: none;\r\n    ${device.large} {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nexport const StyledImage = styled.div`\r\n    width: 600px;\r\n`;\r\n\r\nexport const StyledImgText = styled.div`\r\n    font-size: 12px;\r\n    text-align: center;\r\n    left: 0px;\r\n    bottom: -10px;\r\n    position: absolute;\r\n`;\r\n\r\nexport const StyledSignin = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n","import { FC } from \"react\";\r\nimport loginImage from \"@doar/shared/images/img15.png\";\r\nimport SigninForm from \"../../components/signin-form\";\r\nimport {\r\n    StyledMedia,\r\n    StyledMediaBody,\r\n    StyledImage,\r\n    StyledImgText,\r\n    StyledSignin,\r\n} from \"./style\";\r\n\r\nconst AuthContainer: FC = () => {\r\n    return (\r\n            <StyledSignin>\r\n                <SigninForm />\r\n            </StyledSignin>\r\n    );\r\n};\r\n\r\nexport default AuthContainer;\r\n","import React from \"react\";\r\nimport Layout from \"../layouts\";\r\nimport Content from \"../layouts/content\";\r\nimport AuthContainer from \"../containers/signin\";\r\nimport SEO from \"../components/seo\";\r\n\r\nconst SignIn: React.FC = () => {\r\n    return (\r\n        <Layout>\r\n            <SEO />\r\n            <Content fullHeight >\r\n                <AuthContainer />\r\n            </Content>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n"],"sourceRoot":""}