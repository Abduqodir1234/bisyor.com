{"version":3,"sources":["components/seo.tsx","../../shared/data/menu.ts","components/header/dropdown-item/style.tsx","components/header/dropdown-item/index.tsx","components/header/header-dropdown-elements/style.tsx","components/header/message-dropdown/index.tsx","components/header/notification-dropdown/index.tsx","components/header/profile-dropdown/style.tsx","components/header/profile-dropdown/index.tsx","components/header/nav-search/style.tsx","components/header/nav-search/index.tsx","components/logo/style.tsx","components/logo/index.tsx","layouts/header/style.tsx","layouts/header/index.tsx","layouts/footer/style.tsx","layouts/footer/index.tsx","layouts/index.tsx","components/scrollbar/style.tsx","components/scrollbar/index.tsx","containers/apps/chat/wrapper/style.tsx","containers/apps/chat/wrapper/index.tsx","containers/apps/chat/nav-left/style.tsx","containers/apps/chat/nav-left/index.tsx","containers/apps/chat/sidebar/style.tsx","components/apps/chat/sidebar-header/style.tsx","components/apps/chat/sidebar-header/index.tsx","components/apps/chat/label/style.tsx","components/apps/chat/label/index.tsx","components/apps/chat/modal-create-channel/style.tsx","components/apps/chat/modal-create-channel/index.tsx","components/apps/chat/sidebar-channels/style.tsx","components/apps/chat/sidebar-channels/index.tsx","components/apps/chat/sidebar-messages/style.tsx","components/apps/chat/sidebar-messages/item.tsx","components/apps/chat/sidebar-messages/index.tsx","components/apps/chat/sidebar-footer/style.tsx","components/apps/chat/sidebar-footer/index.tsx","containers/apps/chat/sidebar/index.tsx","components/apps/chat/modal-invite-people/style.tsx","components/apps/chat/modal-invite-people/index.tsx","components/apps/chat/channel-nav/style.tsx","components/apps/chat/channel-nav/index.tsx","components/apps/chat/direct-nav/style.tsx","components/apps/chat/direct-nav/index.tsx","components/apps/chat/search-form/style.tsx","components/apps/chat/search-form/index.tsx","components/apps/chat/settings-nav/style.tsx","components/apps/chat/settings-nav/index.tsx","components/apps/chat/chat-group/style.tsx","components/apps/chat/chat-group/divider.tsx","components/apps/chat/chat-group/item.tsx","components/apps/chat/chat-group/index.tsx","components/apps/chat/chat-form/style.tsx","components/apps/chat/chat-form/index.tsx","components/apps/chat/member-list/style.tsx","components/apps/chat/member-list/item.tsx","components/apps/chat/member-list/index.tsx","components/apps/chat/direct-title/style.tsx","components/apps/chat/direct-title/index.tsx","containers/apps/chat/main/style.tsx","containers/apps/chat/main/index.tsx","pages/apps/chat.tsx"],"names":["SEO","title","titleTemplate","description","charSet","name","content","defaultProps","menus","id","label","url","Icon","PieChart","Package","submenu","Upload","List","Layers","StyledMediaBody","styled","rest","StyledStrong","strong","themeGet","props","theme","css","StyledText","p","tinycolor","colors","text","setAlpha","toRgbString","StyledSpan","span","DropdownItem","size","shape","status","StyledDropMenu","device","small","large","displayName","StyledDropHeader","div","StyledDropItem","hexTorgb","light","lighten","toString","StyledDropFooter","darken","StyledBadge","MessageDropdown","direction","variant","className","path","to","NotificationDropdown","StyledAvatar","StyledAuthorName","h6","StyledAuthorRole","mt","space","StyledDivider","ProfileDropdown","StyledSearch","vulcan","$isOpen","StyledSearchHeader","StyledSearchBtn","StyledSearchClose","StyledSearchBody","StyledSearchTitle","StyledNavList","ul","StyledNavListItem","li","StyledNavBtn","a","StyledNavDevider","hr","NavSearch","isOpen","onClose","type","placeholder","customStyle","fontSize","color","onClick","href","StyledLogo","Logo","StyledHeader","header","StyledNavbarWrap","xlarge","StyledNavbarMenu","nav","StyledNavbarHeader","StyledNavbarBody","StyledNavbarTitle","StyleNavbarRight","StyledNavbarElement","mb","ml","mr","layout","StyledMenuBtn","$hasSidebar","$sidebarOpen","$bodyOpen","StyledSidebarBtn","Header","hasSidebar","sidebarLayout","dispatch","useAppDispatch","useAppSelector","state","ui","sidebar","isBody","useState","searchOpen","setSearchOpen","searchHandler","useCallback","prev","menuOpen","setMenuOpen","sidebarHandler","_","toggleSidebar","bodyHandler","toggleBody","menuHandler","undefined","useEffect","strokeWidth","e","stopPropagation","width","menuData","StyledFooter","footer","StyledFooterLeft","medium","StyledFooterRight","StyledFooterNav","StyledFotterNavLink","Footer","Date","getFullYear","target","rel","Layout","children","hideFooter","StyledWrap","top","bottom","position","ScrollBar","StyledWrapper","Wrapper","StyledNavLeft","$sidebar","StyledNav","StyledNavLink","$active","NavLeft","data-tip","place","effect","StyledSidebar","StyledBody","StyledMedia","SidebarHeader","as","fontWeight","lineHeight","StyledLabel","pl","Label","StyledClose","StyledTitle","ModalCreateChannel","show","StyledBtn","button","StyledLink","SidebarChannels","chatType","chatUI","setShow","activeId","setActiveId","handleModal","toggleChannel","channel","handleClick","preventDefault","dataset","data-channel","StyledList","StyledItem","Item","bg","image","lastMsgTime","unseenMsg","togglePerson","person","src","alt","substring","display","SidebarMessages","targetId","classList","contains","closest","StyledLinks","SidebarFooter","Sidebar","StyledModal","ModalInvitePeople","readonly","linkCss","StyledButton","ChannelNav","data-for","DirectNav","StyledForm","form","StyledInput","SearchForm","SettingsNav","StyledGroup","StyledItemBody","Divider","time","dangerouslySetInnerHTML","__html","ChatGroup","StyldFile","StyledImage","ChatForm","htmlFor","hidden","MemberList","StyledName","DirectTitle","StyledMain","StyledHeaderRight","$showSidebar","StyledBodyInner","Main","rightSidebar","window","matchMedia","matches","Chat"],"mappings":"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","file":"static/js/26.0bfa0356.chunk.js","sourcesContent":["import { FC } from \"react\";\nimport { Helmet } from \"react-helmet\";\n\ninterface IProps {\n    title?: string;\n    titleTemplate?: string;\n    description?: string;\n}\n\nconst SEO: FC<IProps> = ({ title, titleTemplate, description }) => {\n    return (\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>\n                {title} - {titleTemplate}\n            </title>\n            <meta name=\"description\" content={description} />\n        </Helmet>\n    );\n};\n\nSEO.defaultProps = {\n    title: \"Doar\",\n    titleTemplate: \"Responsive React Admin Template\",\n    description: \"Responsive React Admin Template\",\n};\n\nexport default SEO;\n","import {\n    BarChart2,\n    Calendar,\n    MessageSquare,\n    Users,\n    FileText,\n    Mail,\n    LogIn,\n    UserPlus,\n    UserCheck,\n    ShieldOff,\n    User,\n    File,\n    PieChart,\n    Package,\n    Layers,\n    Box,\n    Archive,\n    Upload,\n    List,\n} from \"react-feather\";\n\nconst menus = [\n    {\n        id: 1,\n        label: \"Home\",\n        url: \"/\",\n        Icon: PieChart,\n        // submenu: [\n        //     {\n        //         id: 11,\n        //         label: \"Sales Monitoring\",\n        //         url: \"/\",\n        //         Icon: BarChart2,\n        //     },\n        //     {\n        //         id: 12,\n        //         label: \"Website Analytics\",\n        //         url: \"/dashboard-two\",\n        //         Icon: BarChart2,\n        //     },\n        //     {\n        //         id: 13,\n        //         label: \"Cryptocurrency\",\n        //         url: \"/dashboard-three\",\n        //         Icon: BarChart2,\n        //     },\n        //     {\n        //         id: 14,\n        //         label: \"Helpdesk Management\",\n        //         url: \"/dashboard-four\",\n        //         Icon: BarChart2,\n        //     },\n        // ],\n    },\n    {\n        id: 2,\n        label: \"Products\",\n        url: \"/\",\n        Icon: Package,\n        submenu: [\n            {\n                id: 21,\n                label: \"Add Products\",\n                url: \"/apps/calendar\",\n                Icon: Upload,\n            },\n            {\n                id: 22,\n                label: \"Product List\",\n                url: \"/apps/chat\",\n                Icon: List,\n            },\n            // {\n            //     id: 23,\n            //     label: \"Contacts\",\n            //     url: \"/apps/contacts\",\n            //     Icon: Users,\n            // },\n            // {\n            //     id: 25,\n            //     label: \"File Manager\",\n            //     url: \"/apps/file-manager\",\n            //     Icon: FileText,\n            // },\n            // {\n            //     id: 26,\n            //     label: \"Mail\",\n            //     url: \"/apps/mail\",\n            //     Icon: Mail,\n            // },\n        ],\n    },\n    {\n        id: 3,\n        label: \"Orders\",\n        url: \"/\",\n        Icon: Layers,\n        // megamenu: [\n        //     {\n        //         id: 31,\n        //         title: \"Orders\",\n        //         // submenu: [\n        //         //     {\n        //         //         id: 311,\n        //         //         label: \"Orders List\",\n        //         //         url: \"/signin\",\n        //         //         Icon: LogIn,\n        //         //     },\n        //         //     {\n        //         //         id: 312,\n        //         //         label: \"Sign Up\",\n        //         //         url: \"/signup\",\n        //         //         Icon: UserPlus,\n        //         //     },\n        //         //     {\n        //         //         id: 313,\n        //         //         label: \"Verify Account\",\n        //         //         url: \"/verify-account\",\n        //         //         Icon: UserCheck,\n        //         //     },\n        //         //     {\n        //         //         id: 314,\n        //         //         label: \"Forgot Password\",\n        //         //         url: \"/forgot-password\",\n        //         //         Icon: ShieldOff,\n        //         //     },\n        //         // ],\n        //     },\n        //     {\n        //         id: 32,\n        //         title: \"Error Pages\",\n        //         submenu: [\n        //             {\n        //                 id: 321,\n        //                 label: \"404 Page Not Found\",\n        //                 url: \"/error-404\",\n        //                 Icon: File,\n        //             },\n        //             {\n        //                 id: 322,\n        //                 label: \"500 Internal Server\",\n        //                 url: \"/error-500\",\n        //                 Icon: File,\n        //             },\n        //             {\n        //                 id: 323,\n        //                 label: \"503 Service Unavailable\",\n        //                 url: \"/error-503\",\n        //                 Icon: File,\n        //             },\n        //             {\n        //                 id: 324,\n        //                 label: \"505 Forbidden\",\n        //                 url: \"/error-505\",\n        //                 Icon: File,\n        //             },\n        //         ],\n        //     },\n        //     {\n        //         id: 33,\n        //         title: \"User Pages\",\n        //         submenu: [\n        //             {\n        //                 id: 331,\n        //                 label: \"View Profile\",\n        //                 url: \"/profile-view\",\n        //                 Icon: User,\n        //             },\n        //             {\n        //                 id: 332,\n        //                 label: \"Connections\",\n        //                 url: \"/connections\",\n        //                 Icon: Users,\n        //             },\n        //             {\n        //                 id: 333,\n        //                 label: \"Groups\",\n        //                 url: \"/groups\",\n        //                 Icon: Users,\n        //             },\n        //             {\n        //                 id: 334,\n        //                 label: \"Events\",\n        //                 url: \"/events\",\n        //                 Icon: Calendar,\n        //             },\n        //         ],\n        //     },\n        //     {\n        //         id: 34,\n        //         title: \"Other Pages\",\n        //         submenu: [\n        //             {\n        //                 id: 341,\n        //                 label: \"Timeline\",\n        //                 url: \"/timeline\",\n        //                 Icon: FileText,\n        //             },\n        //             {\n        //                 id: 342,\n        //                 label: \"Pricing\",\n        //                 url: \"/pricing\",\n        //                 Icon: FileText,\n        //             },\n        //             {\n        //                 id: 343,\n        //                 label: \"Help Center\",\n        //                 url: \"/help-center\",\n        //                 Icon: FileText,\n        //             },\n        //             {\n        //                 id: 344,\n        //                 label: \"Invoice\",\n        //                 url: \"/invoice\",\n        //                 Icon: FileText,\n        //             },\n        //         ],\n        //     },\n        // ],\n    },\n    // {\n    //     id: 4,\n    //     label: \"Components\",\n    //     url:\n    //         \"https://doar-react-components.netlify.app/?path=/docs/introduction--page\",\n    //     Icon: Box,\n    // },\n    // {\n    //     id: 5,\n    //     label: \"Collections\",\n    //     url: \"#!\",\n    //     Icon: Archive,\n    // },\n];\n\nexport default menus;\n","/* eslint-disable react/react-in-jsx-scope */\nimport styled, { themeGet, css, tinycolor } from \"@doar/shared/styled\";\nimport { MediaBody } from \"@doar/components\";\n\nexport const StyledMediaBody = styled(({ ...rest }) => <MediaBody {...rest} />)`\n    margin-left: 15px;\n    font-size: 13px;\n`;\n\nexport const StyledStrong = styled.strong`\n    font-weight: 500;\n    color: ${themeGet(\"colors.text2\")};\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.white\")};\n        `}\n`;\n\nexport const StyledText = styled.p`\n    margin-bottom: 2px;\n    color: ${(props) =>\n        props &&\n        css`${tinycolor(props.theme.colors.text)\n            .setAlpha(0.85)\n            .toRgbString()}}`};\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n        `}\n`;\n\nexport const StyledSpan = styled.span`\n    color: ${themeGet(\"colors.text3\")};\n    font-size: 11px;\n    font-family: ${themeGet(\"fonts.interUi\")};\n`;\n","import React from \"react\";\nimport { Media, MediaLeft, Avatar, AvatarInitial } from \"@doar/components\";\nimport { StyledMediaBody, StyledStrong, StyledText, StyledSpan } from \"./style\";\n\nconst DropdownItem: React.FC = () => {\n    return (\n        <Media>\n            <MediaLeft>\n                <Avatar size=\"sm\" shape=\"circle\" status=\"online\">\n                    <AvatarInitial>df</AvatarInitial>\n                </Avatar>\n            </MediaLeft>\n            <StyledMediaBody>\n                <StyledStrong>Socrates Itumay</StyledStrong>\n                <StyledText>nam libero tempore cum so...</StyledText>\n                <StyledSpan>Mar 15 12:32pm</StyledSpan>\n            </StyledMediaBody>\n        </Media>\n    );\n};\n\nexport default DropdownItem;\n","import styled, { device, themeGet, css, tinycolor } from \"@doar/shared/styled\";\nimport { hexTorgb } from \"@doar/shared/methods\";\nimport { DropdownMenu, Anchor } from \"@doar/components\";\n\nexport const DropmenuCSS = css`\n    padding: 0;\n    margin-right: -20px;\n    box-shadow: none;\n    right: 0;\n    left: auto;\n    border-top-width: 0;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n`;\n\nexport const StyledDropMenu = styled(({ ...rest }) => (\n    <DropdownMenu {...rest} />\n))`\n    width: 300px;\n    padding: 0;\n    margin-right: -20px;\n    box-shadow: none;\n    right: 0;\n    left: auto;\n    border-top-width: 0;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    margin-top: 17.5px;\n    margin-right: -75px;\n    ${device.small} {\n        margin-right: -20px;\n    }\n    ${device.large} {\n        margin-top: 19.5px;\n    }\n    &:before {\n        content: \"\";\n        position: absolute;\n        top: -10px;\n        left: 25px;\n        border-bottom: 10px solid ${themeGet(\"colors.border\")};\n        border-left: 10px solid transparent;\n        border-right: 10px solid transparent;\n        left: auto;\n        right: 72px;\n        ${device.small} {\n            right: 20px;\n        }\n    }\n    &:after {\n        content: \"\";\n        position: absolute;\n        top: -8.5px;\n        left: 26px;\n        border-bottom: 9px solid #fff;\n        border-left: 9px solid transparent;\n        border-right: 9px solid transparent;\n        left: auto;\n        right: 73px;\n        ${device.small} {\n            right: 21px;\n        }\n    }\n    ${(props) =>\n        props.theme.name === \"cool\" &&\n        css`\n            &:before {\n                opacity: 0;\n            }\n            margin-top: 18.5px;\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            &::before {\n                opacity: 0;\n            }\n            &::after {\n                border-bottom-color: ${themeGet(\"colors.darklighten5\")};\n            }\n            margin-top: 16.5px;\n            ${device.large} {\n                margin-top: 19px;\n            }\n        `}\n`;\n\nStyledDropMenu.displayName = \"DropdownMenu\";\n\nexport const StyledDropHeader = styled.div`\n    display: block;\n    white-space: nowrap;\n    padding: 12px 15px;\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 600;\n    letter-spacing: 0.5px;\n    color: ${themeGet(\"colors.text2\")};\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    margin-bottom: 5px;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.white\")};\n        `}\n`;\n\nexport const StyledDropItem = styled((props) => <Anchor {...props} />)`\n    transition: none;\n    border-radius: 0.25rem;\n    white-space: normal;\n    padding: 8px 10px;\n    margin: 0 5px;\n    width: auto;\n    display: block;\n    &:hover,\n    &:focus {\n        background-color: ${(props) => hexTorgb(props.theme.colors.light, 0.5)};\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            .avatar:after {\n                box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n            }\n            &:hover,\n            &:focus {\n                background-color: ${tinycolor(themeGet(\"colors.gray900\")(props))\n                    .lighten(5)\n                    .toString()};\n\n                .avatar::after {\n                    box-shadow: 0 0 0 2px\n                        ${tinycolor(themeGet(\"colors.gray900\")(props))\n                            .lighten(5)\n                            .toString()};\n                }\n            }\n        `}\n`;\n\nexport const StyledDropFooter = styled.div`\n    margin-top: 5px;\n    border-top: 1px solid ${themeGet(\"colors.border\")};\n    padding: 10px;\n    text-align: center;\n    font-size: 10px;\n    font-weight: 500;\n    letter-spacing: 0.5px;\n    text-transform: uppercase;\n    a {\n        color: ${themeGet(\"colors.text3\")};\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            border-color: ${tinycolor(themeGet(\"colors.gray100\")(props))\n                .darken(70)\n                .toString()};\n            &:hover,\n            &:focus {\n                a {\n                    color: ${themeGet(\"colors.primary\")};\n                }\n            }\n        `}\n`;\n\nexport const StyledBadge = styled.span`\n    display: flex;\n    width: 15px;\n    height: 15px;\n    justify-content: center;\n    position: absolute;\n    top: -5px;\n    right: -2px;\n    background-color: ${themeGet(\"colors.danger\")};\n    color: #fff;\n    font-size: 8px;\n    font-weight: 400;\n    font-family: sans-serif;\n    line-height: 2;\n    border-radius: 100%;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MessageSquare } from \"react-feather\";\nimport { DropdownToggle, Dropdown } from \"@doar/components\";\nimport Notification from \"../dropdown-item\";\nimport {\n    StyledDropMenu,\n    StyledDropHeader,\n    StyledDropItem,\n    StyledDropFooter,\n    StyledBadge,\n} from \"../header-dropdown-elements\";\n\nconst MessageDropdown: React.FC = () => {\n    return (\n        <Dropdown direction=\"down\">\n            <DropdownToggle variant=\"texted\">\n                <MessageSquare className=\"header-icon\" />\n                <StyledBadge>5</StyledBadge>\n            </DropdownToggle>\n            <StyledDropMenu>\n                <StyledDropHeader>View all Messages</StyledDropHeader>\n                <StyledDropItem path=\"/apps/chat\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropItem path=\"/apps/chat\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropItem path=\"/apps/chat\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropItem path=\"/apps/chat\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropFooter>\n                    <Link to=\"/apps/chat\">View all Messages</Link>\n                </StyledDropFooter>\n            </StyledDropMenu>\n        </Dropdown>\n    );\n};\n\nexport default MessageDropdown;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Bell } from \"react-feather\";\nimport { DropdownToggle, Dropdown } from \"@doar/components\";\nimport Notification from \"../dropdown-item\";\nimport {\n    StyledDropMenu,\n    StyledDropHeader,\n    StyledDropItem,\n    StyledDropFooter,\n    StyledBadge,\n} from \"../header-dropdown-elements\";\n\nconst NotificationDropdown: React.FC = () => {\n    return (\n        <Dropdown direction=\"down\">\n            <DropdownToggle variant=\"texted\">\n                <Bell className=\"header-icon\" />\n                <StyledBadge>2</StyledBadge>\n            </DropdownToggle>\n            <StyledDropMenu>\n                <StyledDropHeader>NOTIFICATIONS</StyledDropHeader>\n                <StyledDropItem path=\"/profile-view\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropItem path=\"/profile-view\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropItem path=\"/profile-view\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropItem path=\"/profile-view\">\n                    <Notification />\n                </StyledDropItem>\n                <StyledDropFooter>\n                    <Link to=\"/profile-view\">View all Notifications</Link>\n                </StyledDropFooter>\n            </StyledDropMenu>\n        </Dropdown>\n    );\n};\n\nexport default NotificationDropdown;\n","import styled, {\n    device,\n    themeGet,\n    css,\n    space,\n    tinycolor,\n} from \"@doar/shared/styled\";\nimport { DropdownMenu, Anchor, Avatar } from \"@doar/components\";\n\nexport const StyledDropMenu = styled(({ ...rest }) => (\n    <DropdownMenu {...rest} />\n))`\n    border-top-width: 0;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n    border-color: ${themeGet(\"colors.border\")};\n    width: 230px;\n    padding: 25px;\n    margin-top: 11.5px;\n    box-shadow: none;\n    border-bottom-right-radius: 0.25rem;\n    border-bottom-left-radius: 0.25rem;\n    margin-right: -10px;\n    right: 0;\n    left: auto;\n    ${device.large} {\n        margin-top: 14.5px;\n    }\n    &:before {\n        content: \"\";\n        position: absolute;\n        top: -10px;\n        left: 25px;\n        border-bottom: 10px solid ${themeGet(\"colors.border\")};\n        border-left: 10px solid transparent;\n        border-right: 10px solid transparent;\n        left: auto;\n        right: 20px;\n        ${device.small} {\n            right: 20px;\n        }\n    }\n    &:after {\n        content: \"\";\n        position: absolute;\n        top: -8.5px;\n        left: 26px;\n        border-bottom: 9px solid #fff;\n        border-left: 9px solid transparent;\n        border-right: 9px solid transparent;\n        left: auto;\n        right: 21px;\n        ${device.small} {\n            right: 21px;\n        }\n    }\n    ${(props) =>\n        props.theme.name === \"cool\" &&\n        css`\n            margin-top: 13.5px;\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            &::before {\n                opacity: 0;\n            }\n            &::after {\n                border-bottom-color: ${themeGet(\"colors.darklighten5\")};\n            }\n            margin-top: 14px;\n        `}\n`;\n\nexport const StyledAvatar = styled(({ ...rest }) => <Avatar {...rest} />)`\n    transition: all 0.3s;\n    &:hover {\n        border: 2px solid ${themeGet(\"colors.gray300\")};\n        ${({ theme }) =>\n            theme.name === \"dark\" &&\n            css`\n                border-color: ${themeGet(\"colors.gray800\")};\n            `}\n    }\n`;\n\nStyledDropMenu.displayName = \"DropdownMenu\";\n\nexport const StyledAuthorName = styled.h6`\n    font-weight: 600;\n    margin-bottom: 5px;\n    margin-top: 15px;\n`;\n\nexport const StyledAuthorRole = styled.p`\n    font-size: 12px;\n    color: ${themeGet(\"colors.text3\")};\n    margin-bottom: 25px;\n`;\n\nexport const StyledDropItem = styled(({ mt, ...rest }) => <Anchor {...rest} />)`\n    padding: 0;\n    display: flex;\n    align-items: center;\n    color: ${themeGet(\"colors.text2\")};\n    border-radius: 0.25rem;\n    transition: all 0.2s ease-in-out;\n    white-space: nowrap;\n    background-color: transparent;\n    border: 0;\n    clear: both;\n    font-weight: 400;\n    width: 100%;\n    font-size: 13px;\n    svg {\n        width: 16px;\n        height: 16px;\n        margin-right: 15px;\n    }\n    ${({ theme }) =>\n        theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n        `}\n    ${space}\n`;\n\nexport const StyledDivider = styled.div`\n    height: 0;\n    overflow: hidden;\n    border-top: 1px solid ${themeGet(\"colors.gray200\")};\n    margin: 15px 0;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            border-color: ${tinycolor(themeGet(\"colors.white\")(props))\n                .setAlpha(0.06)\n                .toRgbString()};\n        `}\n`;\n","import React from \"react\";\nimport {\n    Edit3,\n    User,\n    HelpCircle,\n    LifeBuoy,\n    Settings,\n    LogOut,\n} from \"react-feather\";\nimport {\n    DropdownToggle,\n    Dropdown,\n    Avatar,\n    AvatarInitial,\n} from \"@doar/components\";\nimport {\n    StyledDropMenu,\n    StyledAuthorName,\n    StyledAuthorRole,\n    StyledDropItem,\n    StyledDivider,\n    StyledAvatar,\n} from \"./style\";\n\nconst ProfileDropdown: React.FC = () => {\n    return (\n        <Dropdown direction=\"down\" className=\"dropdown-profile\">\n            <DropdownToggle variant=\"texted\">\n                <StyledAvatar size=\"sm\" shape=\"circle\">\n                    <AvatarInitial>df</AvatarInitial>\n                </StyledAvatar>\n            </DropdownToggle>\n            <StyledDropMenu>\n                <Avatar size=\"lg\" shape=\"circle\">\n                    <AvatarInitial>df</AvatarInitial>\n                </Avatar>\n                <StyledAuthorName>Katherine Pechon</StyledAuthorName>\n                <StyledAuthorRole>Administrator</StyledAuthorRole>\n                <StyledDropItem path=\"/profile-view\">\n                    <Edit3 size=\"24\" />\n                    Edit Profile\n                </StyledDropItem>\n                <StyledDropItem path=\"/profile-view\" mt=\"10px\">\n                    <User size=\"24\" />\n                    View Profile\n                </StyledDropItem>\n                <StyledDivider />\n                <StyledDropItem\n                    path=\"https://hasthemes.com/contact-us/\"\n                    mt=\"10px\"\n                >\n                    <HelpCircle size=\"24\" />\n                    Help Center\n                </StyledDropItem>\n                <StyledDropItem path=\"/\" mt=\"10px\">\n                    <LifeBuoy size=\"24\" />\n                    Forum\n                </StyledDropItem>\n                <StyledDropItem path=\"/profile-view\" mt=\"10px\">\n                    <Settings size=\"24\" />\n                    Account Settings\n                </StyledDropItem>\n                <StyledDropItem path=\"/profile-view\" mt=\"10px\">\n                    <Settings size=\"24\" />\n                    Privacy Settings\n                </StyledDropItem>\n                <StyledDropItem path=\"/signin\" mt=\"10px\">\n                    <LogOut size=\"24\" />\n                    Sign Out\n                </StyledDropItem>\n            </StyledDropMenu>\n        </Dropdown>\n    );\n};\n\nexport default ProfileDropdown;\n","import styled, { css, device, themeGet } from \"@doar/shared/styled\";\nimport { Button, Input } from \"@doar/components\";\nimport { hexTorgb } from \"@doar/shared/methods\";\n\ninterface INavSearch {\n    $isOpen: boolean;\n}\n\nexport const StyledSearch = styled.div<INavSearch>`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n    background-color: ${(props) => hexTorgb(props.theme.colors.vulcan, 0.7)};\n    z-index: 99999;\n    visibility: hidden;\n    opacity: 0;\n    transition: all 0.2s ease-in-out;\n    ${({ $isOpen }) =>\n        $isOpen === true &&\n        css`\n            visibility: visible;\n            opacity: 1;\n        `}\n`;\n\nexport const StyledSearchHeader = styled.div`\n    height: 55px;\n    background-color: #fff;\n    padding: 0 15px;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    ${device.small} {\n        padding: 0 20px;\n        height: 60px;\n    }\n    ${device.large} {\n        padding: 0 25px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.gray900\")};\n            border-bottom-width: 0;\n        `}\n`;\n\nexport const StyledSearchInput = styled(({ ...rest }) => <Input {...rest} />)`\n    padding: 0;\n    font-size: 14px;\n    font-weight: 500;\n    color: ${themeGet(\"colors.text\")};\n    border-width: 0;\n    background-color: transparent;\n    &::placeholder {\n        font-weight: 400;\n        ${device.large} {\n            font-size: 16px;\n        }\n    }\n    &:-ms-input-placeholder {\n        font-weight: 400;\n        ${device.large} {\n            font-size: 16px;\n        }\n    }\n    &::-ms-input-placeholder {\n        font-weight: 400;\n        ${device.large} {\n            font-size: 16px;\n        }\n    }\n    ${device.large} {\n        font-size: 16px;\n    }\n    &:focus {\n        box-shadow: none;\n        color: ${themeGet(\"colors.text\")};\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: #fff;\n            &::placeholder {\n                color: #fff;\n            }\n        `}\n`;\n\nexport const StyledSearchBtn = styled(({ ...rest }) => <Button {...rest} />)`\n    svg {\n        width: 20px;\n        height: 20px;\n        stroke-width: 2.8px;\n        margin-top: -2px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            &:hover,\n            &:focus {\n                color: #fff;\n            }\n        `}\n`;\n\nexport const StyledSearchClose = styled(({ ...rest }) => <Button {...rest} />)`\n    color: ${themeGet(\"colors.text3\")};\n    margin-left: 5px;\n    &:hover {\n        color: ${themeGet(\"colors.text\")};\n    }\n    ${device.large} {\n        margin-left: 10px;\n    }\n`;\n\nexport const StyledSearchBody = styled.div`\n    padding: 15px 15px 20px;\n    background-color: #fff;\n    font-size: 13px;\n    ${device.large} {\n        padding: 25px 25px 30px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken2\")};\n            a {\n                color: ${themeGet(\"colors.gray500\")};\n                border-color: ${themeGet(\"colors.gray700\")};\n                &:hover,\n                &:focus {\n                    background-color: ${themeGet(\"colors.primary\")};\n                    color: #fff;\n                    border-color: transparent;\n                }\n            }\n        `}\n`;\n\nexport const StyledSearchTitle = styled.h6`\n    font-size: 10px;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    font-weight: 500;\n    color: ${themeGet(\"colors.text3\")};\n    margin-bottom: 10px;\n`;\n\nexport const StyledNavList = styled.ul`\n    padding-left: 0;\n    list-style: none;\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 0;\n    ${device.large} {\n        flex-direction: row;\n    }\n`;\n\nexport const StyledNavListItem = styled.li`\n    &:not(:first-of-type) {\n        margin-top: 2px;\n        ${device.large} {\n            margin-top: 0;\n            margin-left: 5px;\n        }\n    }\n`;\n\nexport const StyledNavBtn = styled.a`\n    padding: 5px 10px;\n    display: block;\n    color: ${themeGet(\"colors.text2\")};\n    border-radius: 0.25rem;\n    ${device.large} {\n        border: 1px solid ${themeGet(\"colors.border\")};\n    }\n    &:hover,\n    &:focus {\n        background-color: ${themeGet(\"colors.light\")};\n        ${device.large} {\n            background-color: ${themeGet(\"colors.text4\")};\n            border-color: transparent;\n        }\n    }\n`;\n\nexport const StyledNavDevider = styled.hr`\n    margin-top: 30px;\n    margin-bottom: 30px;\n    border-width: 0;\n    border-color: ${themeGet(\"colors.border\")};\n`;\n","import { FC } from \"react\";\nimport { Search, X } from \"react-feather\";\nimport { Input } from \"@doar/components\";\nimport {\n    StyledSearch,\n    StyledSearchHeader,\n    StyledSearchBtn,\n    StyledSearchClose,\n    StyledSearchBody,\n    StyledSearchTitle,\n    StyledNavList,\n    StyledNavBtn,\n    StyledNavDevider,\n    StyledNavListItem,\n} from \"./style\";\n\ninterface IProps {\n    isOpen: boolean;\n    onClose: () => void;\n}\n\nconst NavSearch: FC<IProps> = ({ isOpen, onClose }) => {\n    return (\n        <StyledSearch $isOpen={isOpen}>\n            <StyledSearchHeader>\n                <Input\n                    type=\"search\"\n                    id=\"nav-search\"\n                    name=\"nav-search\"\n                    placeholder=\"Type and hit enter to search...\"\n                    customStyle=\"noborder\"\n                    fontSize={[\"14px\", null, null, \"16px\"]}\n                />\n                <StyledSearchBtn variant=\"texted\" color=\"light\">\n                    <Search />\n                </StyledSearchBtn>\n                <StyledSearchClose variant=\"texted\" onClick={onClose}>\n                    <X />\n                </StyledSearchClose>\n            </StyledSearchHeader>\n            <StyledSearchBody>\n                <StyledSearchTitle>Recent Searches</StyledSearchTitle>\n                <StyledNavList>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">modern dashboard</StyledNavBtn>\n                    </StyledNavListItem>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">calendar app</StyledNavBtn>\n                    </StyledNavListItem>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">modal examples</StyledNavBtn>\n                    </StyledNavListItem>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">avatar</StyledNavBtn>\n                    </StyledNavListItem>\n                </StyledNavList>\n                <StyledNavDevider />\n                <StyledSearchTitle>Search Suggestions</StyledSearchTitle>\n                <StyledNavList>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">cryptocurrency</StyledNavBtn>\n                    </StyledNavListItem>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">button groups</StyledNavBtn>\n                    </StyledNavListItem>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">form elements</StyledNavBtn>\n                    </StyledNavListItem>\n                    <StyledNavListItem>\n                        <StyledNavBtn href=\"#\">contact app</StyledNavBtn>\n                    </StyledNavListItem>\n                </StyledNavList>\n            </StyledSearchBody>\n        </StyledSearch>\n    );\n};\n\nexport default NavSearch;\n","import styled, { device, themeGet, css } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledLogo = styled(({ ...rest }) => <Anchor {...rest} />)`\n    font-weight: 700;\n    font-size: 22px;\n    letter-spacing: -1px;\n    color: inherit;\n    display: flex;\n    align-items: center;\n    position: relative;\n    color: ${themeGet(\"colors.gulf\")};\n    margin-top: -4px;\n    span {\n        display: inline-block;\n        font-weight: 400;\n        color: ${themeGet(\"colors.primary\")};\n    }\n    ${device.small} {\n        font-size: 22px;\n    }\n    ${device.large} {\n        font-size: 24px;\n    }\n    ${({ theme }) =>\n        theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.white\")};\n        `}\n`;\n","import { FC } from \"react\";\nimport { StyledLogo } from \"./style\";\n\nconst Logo: FC = () => {\n    return (\n        <StyledLogo path=\"/\">\n            Bis<span>yor</span>\n        </StyledLogo>\n    );\n};\n\nexport default Logo;\n","import styled, {\n    device,\n    themeGet,\n    layout,\n    space,\n    css,\n    tinycolor,\n} from \"@doar/shared/styled\";\nimport { Button } from \"@doar/components\";\n\nexport const StyledHeader = styled.header`\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.5rem 1rem;\n    align-items: stretch;\n    height: 55px;\n    padding: 0;\n    justify-content: flex-start;\n    background-color: #fff;\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    ${device.large} {\n        height: 60px;\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        z-index: 1000;\n    }\n    ${(props) =>\n        props.theme.name === \"cool\" &&\n        css`\n            border-bottom-color: ${tinycolor(themeGet(\"colors.skinUi01\")(props))\n                .lighten(45)\n                .toString()};\n            box-shadow: 0 0 25px\n                ${tinycolor(themeGet(\"colors.skinUi01\")(props))\n                    .setAlpha(0.1)\n                    .toRgbString()};\n        `};\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.gray900\")};\n            border-bottom-width: 0;\n        `};\n`;\n\nexport const StyledLogo = styled.div`\n    padding-top: 0.33594rem;\n    padding-bottom: 0.33594rem;\n    margin-right: 1rem;\n    font-size: 1.09375rem;\n    line-height: inherit;\n    white-space: nowrap;\n    display: flex;\n    align-items: center;\n    padding-left: 15px;\n    margin-right: 0;\n    order: 1;\n    ${device.large} {\n        width: 240px;\n        padding: 0 0 0 20px;\n    }\n`;\n\ninterface INavbar {\n    $isOpen?: boolean;\n}\n\nexport const StyledNavbarWrap = styled.div<INavbar>`\n    order: 3;\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(15, 21, 32, 0.7);\n    overflow: hidden;\n    z-index: 1060;\n    visibility: hidden;\n    opacity: 0;\n    transition: all 0.4s;\n    will-change: visibility, opacity;\n    ${({ $isOpen }) =>\n        $isOpen === true &&\n        css`\n            visibility: visible;\n            opacity: 1;\n        `}\n    ${device.xlarge} {\n        padding: 0 30px;\n    }\n    ${device.large} {\n        width: auto;\n        padding: 0 25px;\n        position: relative;\n        top: auto;\n        left: auto;\n        bottom: auto;\n        overflow: visible;\n        display: flex;\n        justify-content: center;\n        order: 2;\n        transform: none;\n        z-index: auto;\n        flex: 1;\n        visibility: visible;\n        opacity: 1;\n        background: transparent;\n    }\n`;\n\nexport const StyledNavbarMenu = styled.nav<INavbar>`\n    width: 260px;\n    height: 100%;\n    background-color: #fff;\n    transition: all 0.4s;\n    will-change: transform;\n    transform: translateX(-260px);\n    z-index: 99999;\n    position: relative;\n    ${({ $isOpen }) =>\n        $isOpen === true &&\n        css`\n            transform: translateX(0);\n        `}\n    ${device.large} {\n        background-color: transparent;\n        width: 100%;\n        max-width: 780px;\n        margin-top: -3px;\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        flex-direction: row;\n        transform: translateX(0);\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darklighten5\")};\n            ${device.large} {\n                background-color: transparent;\n            }\n        `}\n`;\n\nexport const StyledNavbarHeader = styled.div`\n    height: 55px;\n    padding: 0 15px 0 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    ${device.large} {\n        display: none;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.gray900\")};\n            border-bottom-width: 0;\n\n            a:last-child {\n                &:hover,\n                &:focus {\n                    color: ${themeGet(\"colors.white\")};\n                }\n            }\n        `}\n`;\n\nexport const StyledNavbarBody = styled.div`\n    padding: 25px 0;\n    ${device.large} {\n        padding: 0;\n        width: 100%;\n    }\n`;\n\nexport const StyledNavbarTitle = styled.h6`\n    font-size: 10px;\n    font-weight: 600;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    letter-spacing: 0.7px;\n    color: ${themeGet(\"colors.text3\")};\n    text-transform: uppercase;\n    display: block;\n    margin-bottom: 15px;\n    padding-left: 20px;\n    ${device.large} {\n        display: none;\n    }\n`;\n\nexport const StyleNavbarRight = styled.div`\n    padding: 0 15px;\n    margin-left: auto;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    order: 2;\n    ${device.xlarge} {\n        width: 240px;\n    }\n    ${device.large} {\n        order: 3;\n        padding: 0 20px 0 0;\n    }\n`;\n\nexport const StyledNavbarElement = styled(({ mt, mb, ml, mr, ...props }) => (\n    <div {...props} />\n))`\n    ${space};\n    ${layout};\n    .header-icon {\n        width: 16px;\n        height: 16px;\n        stroke-width: 3px;\n        color: ${themeGet(\"colors.text\")};\n        ${device.small} {\n            width: 20px;\n            height: 20px;\n            stroke-width: 2.25px;\n        }\n        ${({ theme }) =>\n            theme.name === \"dark\" &&\n            css`\n                color: ${themeGet(\"colors.gray300\")};\n                &:hover,\n                &:focus {\n                    color: ${themeGet(\"colors.white\")};\n                }\n            `}\n    }\n`;\n\ninterface IMenuBtn {\n    $hasSidebar?: boolean;\n    $sidebarOpen?: boolean;\n    $bodyOpen?: boolean;\n}\n\nexport const StyledMenuBtn = styled(({ ...rest }) => (\n    <Button {...rest} />\n))<IMenuBtn>`\n    margin-left: 18px;\n    svg {\n        color: ${themeGet(\"colors.text3\")};\n    }\n    ${({ $hasSidebar }) =>\n        $hasSidebar === true &&\n        css`\n            display: none;\n        `}\n    ${({ $sidebarOpen, $bodyOpen }) =>\n        $sidebarOpen === true &&\n        !$bodyOpen &&\n        css`\n            display: block;\n        `}\n\t${({ $bodyOpen, $sidebarOpen }) =>\n        $bodyOpen === true &&\n        $sidebarOpen === true &&\n        css`\n            display: none;\n        `}\n\t${device.large} {\n        display: none;\n    }\n    ${({ theme }) =>\n        theme.name === \"dark\" &&\n        css`\n            &:hover {\n                color: ${themeGet(\"colors.white\")};\n            }\n        `}\n`;\n\nexport const StyledSidebarBtn = styled(({ ...rest }) => (\n    <Button {...rest} />\n))<IMenuBtn>`\n    margin-left: 18px;\n    svg {\n        color: ${themeGet(\"colors.text3\")};\n    }\n    ${device.small} {\n        margin-left: 20px;\n    }\n    ${device.large} {\n        display: none;\n    }\n    ${({ $sidebarOpen, $bodyOpen }) =>\n        $sidebarOpen === true &&\n        !$bodyOpen &&\n        css`\n            display: none;\n        `}\n    ${({ $bodyOpen, $sidebarOpen }) =>\n        $bodyOpen === true &&\n        $sidebarOpen === true &&\n        css`\n            display: block;\n        `}\n    ${({ theme }) =>\n        theme.name === \"dark\" &&\n        css`\n            &:hover {\n                color: ${themeGet(\"colors.white\")};\n            }\n        `}\n`;\n","import { FC, useState, useCallback, useEffect } from \"react\";\nimport { Search, Menu, X, ArrowLeft } from \"react-feather\";\nimport { Navbar, Button } from \"@doar/components\";\nimport { menuData } from \"@doar/shared/data\";\nimport MessageDropdown from \"../../components/header/message-dropdown\";\nimport NotificationDropdown from \"../../components/header/notification-dropdown\";\nimport ProfileDropdown from \"../../components/header/profile-dropdown\";\nimport NavSearch from \"../../components/header/nav-search\";\nimport Logo from \"../../components/logo\";\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks\";\nimport { toggleSidebar, toggleBody } from \"../../redux/slices/ui\";\nimport {\n    StyledHeader,\n    StyledLogo,\n    StyledNavbarWrap,\n    StyledNavbarMenu,\n    StyleNavbarRight,\n    StyledNavbarElement,\n    StyledNavbarHeader,\n    StyledNavbarBody,\n    StyledNavbarTitle,\n    StyledMenuBtn,\n    StyledSidebarBtn,\n} from \"./style\";\n\ninterface IProps {\n    hasSidebar?: boolean;\n    sidebarLayout?: 1 | 2;\n}\n\nconst Header: FC<IProps> = ({ hasSidebar, sidebarLayout }) => {\n    const dispatch = useAppDispatch();\n    const { sidebar, isBody } = useAppSelector((state) => state.ui);\n    const [searchOpen, setSearchOpen] = useState(false);\n    const searchHandler = useCallback(() => {\n        setSearchOpen((prev) => !prev);\n    }, []);\n\n    const [menuOpen, setMenuOpen] = useState(false);\n    const sidebarHandler = useCallback(\n        (_, isOpen?: \"open\") => {\n            dispatch(toggleSidebar({ isOpen }));\n        },\n        [dispatch]\n    );\n\n    const bodyHandler = useCallback(() => {\n        dispatch(toggleBody());\n        dispatch(toggleSidebar({ isOpen: \"open\" }));\n    }, [dispatch]);\n\n    const menuHandler = useCallback(() => {\n        setMenuOpen((prev) => !prev);\n        if (menuOpen) {\n            sidebarHandler(undefined, \"open\");\n        }\n    }, [menuOpen, sidebarHandler]);\n\n    useEffect(() => {\n        return () => {\n            sidebarHandler(undefined, \"open\");\n            bodyHandler();\n        };\n    }, [sidebarHandler, bodyHandler]);\n\n    return (\n        <>\n            <StyledHeader>\n                {hasSidebar && sidebarLayout === 1 && (\n                    <>\n                        <StyledMenuBtn\n                            variant=\"texted\"\n                            onClick={menuHandler}\n                            $hasSidebar={hasSidebar}\n                            $sidebarOpen={sidebar}\n                            $bodyOpen={isBody}\n                            className=\"menu-btn\"\n                        >\n                            <Menu size={20} strokeWidth=\"2.5px\" />\n                        </StyledMenuBtn>\n                        <StyledSidebarBtn\n                            variant=\"texted\"\n                            onClick={!isBody ? sidebarHandler : bodyHandler}\n                            $sidebarOpen={sidebar}\n                            $bodyOpen={isBody}\n                            className=\"sidebar-btn\"\n                        >\n                            <ArrowLeft size={20} strokeWidth=\"2.5px\" />\n                        </StyledSidebarBtn>\n                    </>\n                )}\n                {hasSidebar && sidebarLayout === 2 && (\n                    <>\n                        <StyledMenuBtn\n                            variant=\"texted\"\n                            onClick={menuHandler}\n                            $hasSidebar={hasSidebar}\n                            $sidebarOpen={!sidebar}\n                        >\n                            <Menu size={20} strokeWidth=\"2.5px\" />\n                        </StyledMenuBtn>\n                        <StyledSidebarBtn\n                            variant=\"texted\"\n                            onClick={sidebarHandler}\n                            $sidebarOpen={!sidebar}\n                        >\n                            <ArrowLeft size={20} strokeWidth=\"2.5px\" />\n                        </StyledSidebarBtn>\n                    </>\n                )}\n                {!hasSidebar && (\n                    <StyledMenuBtn\n                        variant=\"texted\"\n                        onClick={menuHandler}\n                        $hasSidebar={hasSidebar}\n                        $sidebarOpen={!sidebar}\n                    >\n                        <Menu size={20} strokeWidth=\"2.5px\" />\n                    </StyledMenuBtn>\n                )}\n                <StyledLogo>\n                    <Logo />\n                </StyledLogo>\n                <StyledNavbarWrap $isOpen={menuOpen} onClick={menuHandler}>\n                    <StyledNavbarMenu\n                        $isOpen={menuOpen}\n                        onClick={(e) => e.stopPropagation()}\n                    >\n                        <StyledNavbarHeader>\n                            <Logo />\n                            <Button variant=\"texted\" onClick={menuHandler}>\n                                <X\n                                    color=\"#7987a1\"\n                                    width={20}\n                                    strokeWidth=\"2.5px\"\n                                />\n                            </Button>\n                        </StyledNavbarHeader>\n                        <StyledNavbarBody>\n                            <StyledNavbarTitle>\n                                MAIN NAVIGATION\n                            </StyledNavbarTitle>\n                            <Navbar menus={menuData} />\n                        </StyledNavbarBody>\n                    </StyledNavbarMenu>\n                </StyledNavbarWrap>\n                <StyleNavbarRight>\n                    <StyledNavbarElement>\n                        <Button\n                            variant=\"texted\"\n                            onClick={searchHandler}\n                            className=\"search-btn\"\n                        >\n                            <Search className=\"header-icon\" />\n                        </Button>\n                    </StyledNavbarElement>\n                    <StyledNavbarElement ml={[\"8px\", \"15px\"]}>\n                        <MessageDropdown />\n                    </StyledNavbarElement>\n                    <StyledNavbarElement ml={[\"8px\", \"15px\"]}>\n                        <NotificationDropdown />\n                    </StyledNavbarElement>\n                    <StyledNavbarElement ml={[\"15px\", \"20px\", \"30px\"]}>\n                        <ProfileDropdown />\n                    </StyledNavbarElement>\n                </StyleNavbarRight>\n            </StyledHeader>\n            <NavSearch isOpen={searchOpen} onClose={searchHandler} />\n        </>\n    );\n};\n\nHeader.defaultProps = {\n    sidebarLayout: 1,\n};\n\nexport default Header;\n","/* eslint-disable react/react-in-jsx-scope */\nimport styled, { themeGet, device, tinycolor, css } from \"@doar/shared\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledFooter = styled.footer`\n    font-size: 10px;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    letter-spacing: 0.3px;\n    padding: 15px 25px;\n    background-color: ${themeGet(\"colors.gray50\")};\n    color: ${themeGet(\"colors.gray950\")};\n    border-top: 1px solid ${themeGet(\"colors.border\")};\n    text-transform: uppercase;\n    ${device.large} {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        flex-direction: row-reverse;\n    }\n    ${(props) =>\n        props.theme.name === \"cool\" &&\n        css`\n            border-top-color: transparent;\n            box-shadow: 0 0 25px\n                ${tinycolor(themeGet(\"colors.skinUi01\")(props))\n                    .setAlpha(0.1)\n                    .toRgbString()};\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.gray900\")};\n            border-top-width: 0;\n\n            a {\n                color: ${themeGet(\"colors.gray500\")};\n                &:hover,\n                &:focus {\n                    color: #fff;\n                }\n            }\n        `}\n`;\n\nexport const StyledFooterLeft = styled.div`\n    margin-top: 10px;\n    ${device.medium} {\n        margin-top: 0;\n    }\n    a {\n        padding: 0;\n        color: ${themeGet(\"colors.text2\")};\n    }\n    .copright-link {\n        display: inline-flex;\n        a {\n            margin-left: 2px;\n        }\n    }\n    svg {\n        width: 16px;\n        height: 16px;\n        color: ${themeGet(\"colors.danger\")};\n        margin: 0 5px;\n    }\n`;\n\nexport const StyledFooterRight = styled.div``;\n\nexport const StyledFooterNav = styled.nav`\n    display: flex;\n    flex-wrap: wrap;\n    padding-left: 0;\n    margin-bottom: 0;\n    list-style: none;\n`;\n\nexport const StyledFotterNavLink = styled(({ ...rest }) => (\n    <Anchor {...rest} />\n))`\n    padding: 0;\n    color: ${themeGet(\"colors.text2\")};\n    display: block;\n    &:not(:first-of-type) {\n        margin-left: 25px;\n    }\n    &:hover {\n        color: ${themeGet(\"colors.primary\")};\n    }\n`;\n","import React from \"react\";\nimport { Heart } from \"react-feather\";\nimport {\n    StyledFooter,\n    StyledFooterLeft,\n    StyledFooterRight,\n    StyledFooterNav,\n    StyledFotterNavLink,\n} from \"./style\";\n\nconst Footer: React.FC = () => {\n    return (\n        <StyledFooter>\n            <StyledFooterRight>\n                <StyledFooterNav>\n                    <StyledFotterNavLink path=\"https://themeforest.net/licenses/standard\">\n                        Licenses\n                    </StyledFotterNavLink>\n                    <StyledFotterNavLink path=\"/\">\n                        Change Log\n                    </StyledFotterNavLink>\n                    <StyledFotterNavLink path=\"https://hasthemes.com/contact-us/\">\n                        Get Help\n                    </StyledFotterNavLink>\n                </StyledFooterNav>\n            </StyledFooterRight>\n            <StyledFooterLeft>\n                <span>&copy; Doar {new Date().getFullYear()} </span>\n                <span className=\"copright-link\">\n                    MADE WITH <Heart size=\"24\" /> BY{\"  \"}\n                    <a\n                        href=\"https://themeforest.net/user/bootxperts/portfolio\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        BootXperts\n                    </a>\n                </span>\n            </StyledFooterLeft>\n        </StyledFooter>\n    );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\n\ninterface IProps {\n    hasSidebar?: boolean;\n    hideFooter?: boolean;\n    sidebarLayout?: 1 | 2;\n}\n\nconst Layout: React.FC<IProps> = ({\n    children,\n    hasSidebar,\n    hideFooter,\n    sidebarLayout,\n}) => {\n    return (\n        <>\n            <Header hasSidebar={hasSidebar} sidebarLayout={sidebarLayout} />\n            {children}\n            {!hideFooter && <Footer />}\n        </>\n    );\n};\n\nLayout.defaultProps = {\n    hideFooter: false,\n};\n\nexport default Layout;\n","import styled, { PositionProps, position, css } from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled(({ top, bottom, ...rest }) => (\n    <div {...rest} />\n))<PositionProps>`\n    height: 100%;\n    position: relative;\n    ${({ bottom }) =>\n        !!bottom &&\n        css`\n            height: calc(100% - ${bottom});\n        `}\n    .ps {\n        overflow: hidden;\n    }\n    .ps > .ps__rail-y {\n        width: 3px;\n        background-color: rgba(72, 83, 114, 0.06);\n        z-index: 10;\n        position: absolute;\n        left: auto !important;\n        right: 0;\n        opacity: 0;\n        margin: 1px;\n        transition: opacity 0.2s;\n    }\n    @media (prefers-reduced-motion: reduce) {\n        .ps > .ps__rail-y {\n            transition: none;\n        }\n    }\n    .ps > .ps__rail-y > .ps__thumb-y {\n        position: absolute;\n        border-radius: 0;\n        width: 3px;\n        left: 0;\n        background-color: #97a3b9;\n    }\n    .ps.ps--active-y:hover > .ps__rail-y,\n    .ps.ps--active-y:focus > .ps__rail-y {\n        opacity: 1;\n    }\n\n    .scrollbar-sm > .ps__rail-y {\n        width: 1px;\n    }\n    .scrollbar-sm > .ps__rail-y > .ps__thumb-y {\n        width: 1px;\n    }\n\n    .scrollbar-lg > .ps__rail-y {\n        width: 6px;\n    }\n    .scrollbar-lg > .ps__rail-y > .ps__thumb-y {\n        width: 6px;\n    }\n    .scrollbar-container {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: auto;\n        ${position};\n    }\n`;\n","import { FC } from \"react\";\nimport { PositionProps } from \"@doar/shared/styled\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { StyledWrap } from \"./style\";\n\nconst ScrollBar: FC<PositionProps> = ({ children, ...rest }) => {\n    return (\n        <StyledWrap {...rest}>\n            <PerfectScrollbar>{children}</PerfectScrollbar>\n        </StyledWrap>\n    );\n};\n\nexport default ScrollBar;\n","import styled, { device, themeGet } from \"@doar/shared/styled\";\n\nexport const StyledWrapper = styled.div`\n    background-color: ${themeGet(\"colors.lilac\")};\n    position: fixed;\n    top: 55px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    ${device.large} {\n        top: 60px;\n    }\n`;\n","import { FC } from \"react\";\nimport { StyledWrapper } from \"./style\";\n\nconst Wrapper: FC = ({ children }) => {\n    return <StyledWrapper className=\"wrapper\">{children}</StyledWrapper>;\n};\n\nexport default Wrapper;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledNavLeft = styled.div<{ $sidebar?: boolean }>`\n    background-color: #fff;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    border-right: 1px solid ${themeGet(\"colors.border\")};\n    width: 60px;\n    padding: 15px 10px;\n    transition: all 0.3s;\n    ${({ $sidebar }) =>\n        $sidebar &&\n        css`\n            @media (max-width: 991px) {\n                transform: translateX(-100vw);\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken3\")};\n        `}\n`;\n\nexport const StyledNav = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n`;\n\ninterface ILinkProps {\n    $active?: boolean;\n}\n\nexport const StyledNavLink = styled(({ ...rest }) => (\n    <Anchor {...rest} />\n))<ILinkProps>`\n    padding: 0;\n    height: 40px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${themeGet(\"colors.text2\")};\n    border-radius: 0.25rem;\n    transition: all 0.2s ease-in-out;\n    &:not(:first-of-type) {\n        margin-top: 10px;\n    }\n    svg {\n        width: 20px;\n        height: 20px;\n        fill: rgba(27, 46, 75, 0.1);\n    }\n    ${({ $active }) =>\n        !!$active &&\n        css`\n            color: ${themeGet(\"colors.primary\")};\n            svg {\n                fill: rgba(1, 104, 250, 0.2);\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        !props.$active &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            &:hover,\n            &:focus {\n                color: #fff;\n            }\n        `}\n`;\n","import { FC } from \"react\";\nimport { Users, MessageSquare, Phone, AtSign, HelpCircle } from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport { useAppSelector } from \"../../../../redux/hooks\";\nimport { StyledNavLeft, StyledNav, StyledNavLink } from \"./style\";\n\nconst NavLeft: FC = () => {\n    const { sidebar } = useAppSelector((state) => state.ui);\n    return (\n        <StyledNavLeft className=\"nav-left\" $sidebar={sidebar}>\n            <StyledNav>\n                <StyledNavLink path=\"#!\" data-tip=\"Contacts\">\n                    <Users />\n                </StyledNavLink>\n                <ReactTooltip place=\"right\" effect=\"solid\" />\n                <StyledNavLink path=\"#!\" $active data-tip=\"Messages\">\n                    <MessageSquare />\n                </StyledNavLink>\n                <ReactTooltip place=\"right\" effect=\"solid\" />\n                <StyledNavLink path=\"#!\" data-tip=\"Phone Calls\">\n                    <Phone />\n                </StyledNavLink>\n                <ReactTooltip place=\"right\" effect=\"solid\" />\n                <StyledNavLink path=\"#!\" data-tip=\"Mentions\">\n                    <AtSign />\n                </StyledNavLink>\n                <ReactTooltip place=\"right\" effect=\"solid\" />\n                <StyledNavLink path=\"#!\" data-tip=\"Help\">\n                    <HelpCircle />\n                </StyledNavLink>\n                <ReactTooltip place=\"right\" effect=\"solid\" />\n            </StyledNav>\n        </StyledNavLeft>\n    );\n};\n\nexport default NavLeft;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\n\nexport const StyledSidebar = styled.div<{ $sidebar?: boolean }>`\n    background-color: #fff;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 60px;\n    right: 0;\n    transition: all 0.3s;\n    @media (min-width: 480px) {\n        width: 250px;\n        border-right: 1px solid ${themeGet(\"colors.border\")};\n    }\n    ${({ $sidebar }) =>\n        $sidebar &&\n        css`\n            @media (max-width: 991px) {\n                transform: translateX(-100vw);\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken5\")};\n        `}\n`;\n\nexport const StyledHeader = styled.div`\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    height: 60px;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken3\")};\n        `}\n`;\nexport const StyledBody = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n`;\nexport const StyledFooter = styled.div`\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 60px;\n    border-top: 1px solid ${themeGet(\"colors.border\")};\n    padding-left: 20px;\n    padding-right: 15px;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken3\")};\n        `}\n`;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\nimport { Dropdown } from \"@doar/components\";\n\nexport const StyledWrap = styled(({ ...rest }) => <Dropdown {...rest} />)`\n    .dropdown {\n        &-toggle {\n            height: 60px;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            padding-left: 20px;\n            padding-right: 15px;\n            position: relative;\n            z-index: 5;\n            width: 100%;\n        }\n        &-menu {\n            box-shadow: none;\n            width: 100%;\n            max-width: 255px;\n            border-width: 0 0 1px 1px;\n            border-color: ${themeGet(\"colors.border\")};\n            padding: 10px;\n            margin: 60px -5px 0 -1px;\n            border-radius: 0;\n            transform: none !important;\n            &:before {\n                content: \"\";\n                position: absolute;\n                top: -10px;\n                right: 15px;\n                border-bottom: 10px solid rgba(192, 204, 218, 0.53);\n                border-left: 10px solid transparent;\n                border-right: 10px solid transparent;\n            }\n            &:after {\n                content: \"\";\n                position: absolute;\n                top: -8.5px;\n                right: 16px;\n                border-bottom: 9px solid #fff;\n                border-left: 9px solid transparent;\n                border-right: 9px solid transparent;\n            }\n            @media (min-width: 480px) {\n                border-width: 0 0 1px;\n                width: 100%;\n                max-width: none;\n                margin: 0;\n            }\n        }\n        &-item {\n            display: flex;\n            align-items: center;\n            padding: 4px 10px;\n            border-radius: 0.25rem;\n            svg {\n                width: 16px;\n                margin-right: 10px;\n            }\n        }\n        &-divider {\n            margin: 5px 10px;\n        }\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            .dropdown {\n                &-toggle {\n                    & > span {\n                        color: ${themeGet(\"colors.gray800\")};\n                    }\n                    &:hover,\n                    &:focus {\n                        > span {\n                            color: ${themeGet(\"colors.gray300\")};\n                        }\n                    }\n                }\n                &-menu {\n                    background-color: ${themeGet(\"colors.darkdarken2\")};\n\n                    &::before {\n                        border-bottom-color: rgba(255, 255, 255, 0.08);\n                    }\n                    &::after {\n                        border-bottom-color: ${themeGet(\"colors.darkdarken2\")};\n                    }\n                }\n                &-item {\n                    color: ${themeGet(\"colors.gray500\")};\n                    &:hover,\n                    &:focus {\n                        color: #fff;\n                        background-color: ${themeGet(\"colors.darklighten2\")};\n                    }\n                }\n            }\n        `}\n`;\n\nStyledWrap.displayName = \"Dropdown\";\n\nexport const StyledMedia = styled.div`\n    display: flex;\n    align-items: center;\n`;\n","import { FC } from \"react\";\nimport {\n    ChevronDown,\n    UserPlus,\n    PlusSquare,\n    Server,\n    Bell,\n    Zap,\n    Edit3,\n    ShieldOff,\n} from \"react-feather\";\nimport {\n    Avatar,\n    AvatarInitial,\n    Text,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    DropdownDivider,\n} from \"@doar/components\";\nimport { StyledWrap, StyledMedia } from \"./style\";\n\nconst SidebarHeader: FC = () => {\n    return (\n        <StyledWrap direction=\"down\">\n            <DropdownToggle variant=\"texted\" className=\"dropdown-toggle\">\n                <StyledMedia>\n                    <Avatar size=\"sm\" mr=\"8px\">\n                        <AvatarInitial>T</AvatarInitial>\n                    </Avatar>\n                    <Text as=\"span\" color=\"text\" fontWeight={600}>\n                        TeamName\n                    </Text>\n                </StyledMedia>\n                <Text as=\"span\" color=\"text3\" lineHeight={1}>\n                    <ChevronDown size={18} />\n                </Text>\n            </DropdownToggle>\n            <DropdownMenu>\n                <DropdownItem path=\"#!\">\n                    <UserPlus /> Invite People\n                </DropdownItem>\n                <DropdownItem path=\"#!\">\n                    <PlusSquare /> Create Channel\n                </DropdownItem>\n                <DropdownItem path=\"#!\">\n                    <Server /> Server Settings\n                </DropdownItem>\n                <DropdownItem path=\"#!\">\n                    <Bell /> Notification Settings\n                </DropdownItem>\n                <DropdownItem path=\"#!\">\n                    <Zap /> Privacy Settings\n                </DropdownItem>\n                <DropdownDivider />\n                <DropdownItem path=\"#!\">\n                    <Edit3 /> Edit Team Details\n                </DropdownItem>\n                <DropdownItem path=\"#!\">\n                    <ShieldOff /> Hide Muted Channels\n                </DropdownItem>\n            </DropdownMenu>\n        </StyledWrap>\n    );\n};\n\nexport default SidebarHeader;\n","/* eslint-disable jsx-a11y/heading-has-content */\nimport styled, { space, SpaceProps, themeGet } from \"@doar/shared/styled\";\n\nexport const StyledLabel = styled(({ mb, pl, ...rest }) => (\n    <h6 {...rest} />\n))<SpaceProps>`\n    font-size: 10px;\n    letter-spacing: 0.5px;\n    text-transform: uppercase;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    font-weight: 500;\n    color: ${themeGet(\"colors.text3\")};\n    margin-bottom: 0;\n    ${space}\n`;\n","import { FC } from \"react\";\nimport { SpaceProps } from \"@doar/shared/styled\";\nimport { StyledLabel } from \"./style\";\n\ntype IProps = SpaceProps;\n\nconst Label: FC<IProps> = ({ children, ...rest }) => {\n    return <StyledLabel {...rest}>{children}</StyledLabel>;\n};\n\nexport default Label;\n","import styled from \"@doar/shared/styled\";\nimport { ModalClose, ModalFooter } from \"@doar/components\";\n\nexport const StyledClose = styled(({ ...rest }) => <ModalClose {...rest} />)`\n    font-weight: 300;\n    font-size: 28px;\n    line-height: 0.87;\n    position: absolute;\n    top: 15px;\n    right: 15px;\n`;\n\nexport const StyledTitle = styled.h6`\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    font-weight: 600;\n    margin-bottom: 20px;\n`;\n\nexport const StyledFooter = styled(({ ...rest }) => <ModalFooter {...rest} />)`\n    padding-bottom: 20px;\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-top: 0px;\n    border-top: 0;\n`;\n","import { FC } from \"react\";\nimport { X } from \"react-feather\";\nimport { Modal, ModalBody, Input, Button } from \"@doar/components\";\nimport { StyledClose, StyledTitle, StyledFooter } from \"./style\";\n\ninterface IProps {\n    show: boolean;\n    onClose: () => void;\n}\n\nconst ModalCreateChannel: FC<IProps> = ({ show, onClose }) => {\n    return (\n        <Modal show={show} onClose={onClose} size=\"sm\">\n            <ModalBody p=\"20px\">\n                <StyledClose onClose={onClose}>\n                    <X size={20} />\n                </StyledClose>\n                <StyledTitle>Create Channel</StyledTitle>\n                <Input\n                    type=\"text\"\n                    name=\"create-channel\"\n                    id=\"create-channel\"\n                    placeholder=\"Channel name\"\n                />\n            </ModalBody>\n            <StyledFooter>\n                <Button color=\"secondary\" fontSize=\"13px\" onClick={onClose}>\n                    Cancel\n                </Button>\n                <Button fontSize=\"13px\">Create</Button>\n            </StyledFooter>\n        </Modal>\n    );\n};\n\nexport default ModalCreateChannel;\n","import styled, { css, device, themeGet } from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    padding-left: 10px;\n    padding-right: 10px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    flex: 1 1 auto;\n`;\n\nexport const StyledHeader = styled.div`\n    padding-left: 10px;\n    padding-right: 10px;\n    margin-bottom: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport const StyledBtn = styled.button`\n    color: ${themeGet(\"colors.text3\")};\n    background: transparent;\n    padding: 0;\n    border: none;\n`;\n\nexport const StyledNav = styled.nav`\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    margin-bottom: 20px;\n`;\n\ninterface ILinkProps {\n    $active?: boolean;\n}\n\nexport const StyledLink = styled(({ ...rest }) => (\n    <button type=\"button\" {...rest} />\n))<ILinkProps>`\n    display: flex;\n    align-items: center;\n    position: relative;\n    padding: 5px 10px;\n    font-weight: 500;\n    color: ${themeGet(\"colors.text2\")};\n    border-radius: 0.25rem;\n    background-color: transparent;\n    border: none;\n    &:not(:first-of-type) {\n        margin-top: 2px;\n    }\n    &:hover,\n    &:focus {\n        background-color: ${themeGet(\"colors.whisper\")};\n    }\n    ${device.large} {\n        ${({ $active }) =>\n            !!$active &&\n            css`\n                color: ${themeGet(\"colors.primary\")};\n                background-color: ${themeGet(\"colors.catskill\")};\n            `}\n        ${(props) =>\n            props.theme.name === \"dark\" &&\n            !!props.$active &&\n            css`\n                background-color: ${themeGet(\"colors.darklighten2\")};\n            `}\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            &:hover,\n            &:focus {\n                background-color: ${themeGet(\"colors.gray900\")};\n                color: #fff;\n            }\n        `}\n`;\n","import { FC, useState, useEffect, MouseEvent } from \"react\";\nimport { PlusCircle } from \"react-feather\";\nimport { Badge } from \"@doar/components\";\nimport Label from \"../label\";\nimport ModalCreateChannel from \"../modal-create-channel\";\nimport { useAppDispatch, useAppSelector } from \"../../../../redux/hooks\";\nimport { toggleChannel } from \"../../../../redux/slices/chat-ui\";\nimport { toggleSidebar } from \"../../../../redux/slices/ui\";\nimport {\n    StyledWrap,\n    StyledHeader,\n    StyledBtn,\n    StyledNav,\n    StyledLink,\n} from \"./style\";\n\nconst SidebarChannels: FC = () => {\n    const dispatch = useAppDispatch();\n    const { chatType } = useAppSelector((state) => state.chatUI);\n    const [show, setShow] = useState(false);\n    const [activeId, setActiveId] = useState(\"\");\n    const handleModal = () => {\n        setShow((prev) => !prev);\n    };\n    useEffect(() => {\n        dispatch(toggleChannel({ channel: \"general\" }));\n        setActiveId(\"channel-1\");\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    const handleClick = (e: MouseEvent<HTMLAnchorElement>) => {\n        e.preventDefault();\n        const target = e.target as HTMLElement;\n        const { channel } = target.dataset;\n        setActiveId(target.id);\n        dispatch(toggleSidebar({ isOpen: undefined }));\n        if (!channel) return;\n        dispatch(toggleChannel({ channel }));\n    };\n\n    return (\n        <>\n            <StyledWrap>\n                <StyledHeader>\n                    <Label>All Channels</Label>\n                    <StyledBtn onClick={handleModal}>\n                        <PlusCircle size={14} />\n                    </StyledBtn>\n                </StyledHeader>\n                <StyledNav>\n                    <StyledLink\n                        id=\"channel-1\"\n                        path=\"#!\"\n                        $active={\n                            activeId === \"channel-1\" && chatType === \"channel\"\n                        }\n                        onClick={handleClick}\n                        data-channel=\"general\"\n                    >\n                        # general\n                    </StyledLink>\n                    <StyledLink\n                        id=\"channel-2\"\n                        path=\"#!\"\n                        $active={\n                            activeId === \"channel-2\" && chatType === \"channel\"\n                        }\n                        onClick={handleClick}\n                        data-channel=\"engineering\"\n                    >\n                        # engineering\n                    </StyledLink>\n                    <StyledLink\n                        id=\"channel-3\"\n                        path=\"#!\"\n                        $active={\n                            activeId === \"channel-3\" && chatType === \"channel\"\n                        }\n                        onClick={handleClick}\n                        data-channel=\"products\"\n                    >\n                        # products\n                        <Badge color=\"danger\" shape=\"circle\" ml=\"auto\">\n                            2\n                        </Badge>\n                    </StyledLink>\n                </StyledNav>\n            </StyledWrap>\n            <ModalCreateChannel show={show} onClose={handleModal} />\n        </>\n    );\n};\n\nexport default SidebarChannels;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\nimport { Media } from \"@doar/components\";\n\nexport const StyledWrap = styled.div`\n    padding-top: 20px;\n    padding-bottom: 20px;\n    padding-left: 10px;\n    padding-right: 10px;\n    border-top: 1px solid ${themeGet(\"colors.border\")};\n    flex: 1 1 auto;\n`;\n\nexport const StyledList = styled.div``;\n\ninterface IProps {\n    $active: boolean;\n}\n\nexport const StyledItem = styled(({ ...rest }) => <Media {...rest} />)<IProps>`\n    padding: 8px 10px;\n    color: ${themeGet(\"colors.text2\")};\n    border-radius: 0.25rem;\n    cursor: pointer;\n    align-items: center;\n    &:hover,\n    &:focus {\n        background-color: ${themeGet(\"colors.whisper\")};\n    }\n    ${({ $active }) =>\n        !!$active &&\n        css`\n            background-color: ${themeGet(\"colors.light\")};\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            .avatar:after {\n                box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n            }\n            &:hover {\n                background-color: ${themeGet(\"colors.gray900\")};\n                .avatar:after {\n                    box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n                }\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        !!props.$active &&\n        css`\n            background-color: ${themeGet(\"colors.gray900\")};\n            .avatar::after {\n                box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n            }\n        `}\n`;\n","import { FC, MouseEvent } from \"react\";\nimport {\n    Avatar,\n    AvatarInitial,\n    MediaBody,\n    Heading,\n    Text,\n    Badge,\n} from \"@doar/components\";\nimport { useAppDispatch, useAppSelector } from \"../../../../redux/hooks\";\nimport { togglePerson } from \"../../../../redux/slices/chat-ui\";\nimport { toggleSidebar } from \"../../../../redux/slices/ui\";\nimport { StyledItem } from \"./style\";\n\ninterface IProps {\n    id: string;\n    status: \"online\" | \"offline\";\n    image?: string;\n    bg?: string;\n    name: string;\n    lastMsgTime: string;\n    unseenMsg?: number;\n    activeId: string;\n    onClick: (e: MouseEvent<HTMLDivElement>) => void;\n}\n\nconst Item: FC<IProps> = ({\n    id,\n    status,\n    bg,\n    image,\n    name,\n    lastMsgTime,\n    unseenMsg,\n    activeId,\n    onClick,\n}) => {\n    const dispatch = useAppDispatch();\n    const { chatType } = useAppSelector((state) => state.chatUI);\n\n    const handleClick = (e: MouseEvent<HTMLDivElement>) => {\n        onClick(e);\n        dispatch(toggleSidebar({ isOpen: undefined }));\n        dispatch(togglePerson({ person: { image, bg, status, name } }));\n    };\n    return (\n        <StyledItem\n            id={id}\n            $active={activeId === id && chatType === \"direct\"}\n            onClick={handleClick}\n        >\n            <Avatar size=\"sm\" status={status}>\n                {image && <img src={image} alt={name} />}\n                {!image && (\n                    <AvatarInitial bg={bg}>\n                        {name.substring(0, 1)}\n                    </AvatarInitial>\n                )}\n            </Avatar>\n            <MediaBody ml=\"10px\">\n                <Heading mb=\"0px\">{name}</Heading>\n                <Text as=\"small\" display=\"block\" color=\"text4\">\n                    {lastMsgTime}\n                </Text>\n            </MediaBody>\n            {unseenMsg && (\n                <Badge color=\"danger\" shape=\"circle\">\n                    {unseenMsg}\n                </Badge>\n            )}\n        </StyledItem>\n    );\n};\n\nItem.defaultProps = {\n    bg: \"dark\",\n};\n\nexport default Item;\n","import { FC, useState, MouseEvent } from \"react\";\nimport Label from \"../label\";\nimport Item from \"./item\";\nimport { StyledWrap, StyledList } from \"./style\";\n\nconst SidebarMessages: FC = () => {\n    const [activeId, setActiveId] = useState(\"\");\n    const handleClick = (e: MouseEvent<HTMLDivElement>) => {\n        const target = e.target as HTMLElement;\n        let targetId = activeId;\n        if (!target.classList.contains(\"media\")) {\n            const id = target.closest(\".media\")?.id;\n            targetId = id || activeId;\n        } else {\n            targetId = target.id || activeId;\n        }\n        setActiveId(targetId);\n    };\n\n    return (\n        <StyledWrap>\n            <Label mb=\"10px\" pl=\"10px\">\n                Direct Messages\n            </Label>\n            <StyledList>\n                <Item\n                    id=\"message-1\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    name=\"dfbot\"\n                    lastMsgTime=\"5 mins ago\"\n                />\n                <Item\n                    id=\"message-2\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"gray700\"\n                    name=\"situmay\"\n                    lastMsgTime=\"1 hour ago\"\n                />\n                <Item\n                    id=\"message-3\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"offline\"\n                    name=\"situmay\"\n                    bg=\"gray600\"\n                    lastMsgTime=\"1 hour ago\"\n                    unseenMsg={3}\n                />\n                <Item\n                    id=\"message-4\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"offline\"\n                    bg=\"primary\"\n                    name=\"acantones\"\n                    lastMsgTime=\"2 hours ago\"\n                />\n                <Item\n                    id=\"message-5\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"offline\"\n                    bg=\"secondary\"\n                    name=\"rlabares\"\n                    lastMsgTime=\"2 hours ago\"\n                />\n                <Item\n                    id=\"message-6\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"success\"\n                    name=\"h.owen\"\n                    lastMsgTime=\"3 hours ago\"\n                />\n                <Item\n                    id=\"message-7\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"info\"\n                    name=\"k.billie\"\n                    lastMsgTime=\"3 hours ago\"\n                />\n                <Item\n                    id=\"message-8\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"teal\"\n                    name=\"m.audrey\"\n                    lastMsgTime=\"3 hours ago\"\n                />\n                <Item\n                    id=\"message-9\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"indigo\"\n                    name=\"macasindil\"\n                    lastMsgTime=\"4 hours ago\"\n                />\n                <Item\n                    id=\"message-10\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"pink\"\n                    name=\"e.ocaba\"\n                    lastMsgTime=\"4 hours ago\"\n                />\n                <Item\n                    id=\"message-11\"\n                    activeId={activeId}\n                    onClick={handleClick}\n                    status=\"online\"\n                    bg=\"cyan\"\n                    name=\"avendula\"\n                    lastMsgTime=\"5 hours ago\"\n                />\n            </StyledList>\n        </StyledWrap>\n    );\n};\n\nexport default SidebarMessages;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledWrap = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledLinks = styled.div`\n    align-items: center;\n    display: flex;\n`;\n\nexport const StyledLink = styled(({ ...rest }) => <Anchor {...rest} />)`\n    padding: 3px 6px;\n    color: ${themeGet(\"colors.text3\")};\n    border-radius: 0.25rem;\n    line-height: 1;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            &:hover,\n            &:focus {\n                color: #fff;\n            }\n        `}\n`;\n","import { FC } from \"react\";\nimport { Mic, Settings } from \"react-feather\";\nimport { Avatar, AvatarInitial, Heading } from \"@doar/components\";\nimport { StyledWrap, StyledLinks, StyledLink } from \"./style\";\n\nconst SidebarFooter: FC = () => {\n    return (\n        <>\n            <StyledWrap>\n                <Avatar size=\"sm\" status=\"online\">\n                    <AvatarInitial bg=\"dark\">d</AvatarInitial>\n                </Avatar>\n                <Heading fontWeight={600} mb=\"0px\" ml=\"8px\">\n                    Katherine\n                </Heading>\n            </StyledWrap>\n            <StyledLinks>\n                <StyledLink path=\"#!\">\n                    <Mic size={18} />\n                </StyledLink>\n                <StyledLink path=\"#!\">\n                    <Settings size={18} />\n                </StyledLink>\n            </StyledLinks>\n        </>\n    );\n};\n\nexport default SidebarFooter;\n","import { FC } from \"react\";\nimport { StyledSidebar, StyledHeader, StyledBody, StyledFooter } from \"./style\";\nimport Scrollbar from \"../../../../components/scrollbar\";\nimport SidebarHeader from \"../../../../components/apps/chat/sidebar-header\";\nimport SidebarChannels from \"../../../../components/apps/chat/sidebar-channels\";\nimport SidebarMessages from \"../../../../components/apps/chat/sidebar-messages\";\nimport SidebarFooter from \"../../../../components/apps/chat/sidebar-footer\";\nimport { useAppSelector } from \"../../../../redux/hooks\";\n\nconst Sidebar: FC = () => {\n    const { sidebar } = useAppSelector((state) => state.ui);\n    return (\n        <StyledSidebar className=\"sidebar\" $sidebar={sidebar}>\n            <StyledHeader>\n                <SidebarHeader />\n            </StyledHeader>\n            <Scrollbar bottom=\"60px\">\n                <StyledBody>\n                    <SidebarChannels />\n                    <SidebarMessages />\n                </StyledBody>\n            </Scrollbar>\n            <StyledFooter>\n                <SidebarFooter />\n            </StyledFooter>\n        </StyledSidebar>\n    );\n};\n\nexport default Sidebar;\n","import styled, { device, themeGet } from \"@doar/shared/styled\";\nimport { ModalClose, ModalFooter, Modal } from \"@doar/components\";\n\nexport const StyledModal = styled(({ ...rest }) => <Modal {...rest} />)`\n    .form-control {\n        background-color: transparent;\n        color: ${themeGet(\"colors.gray300\")};\n        border-color: ${themeGet(\"colors.gray700\")};\n    }\n    .input-group .btn {\n        border-color: ${themeGet(\"colors.gray700\")};\n    }\n`;\n\nexport const StyledClose = styled(({ ...rest }) => <ModalClose {...rest} />)`\n    position: absolute;\n    top: 20px;\n    right: 20px;\n`;\n\nexport const StyledTitle = styled.h6`\n    margin-bottom: 5px;\n    font-size: 18px;\n    ${device.small} {\n        font-size: 20px;\n    }\n`;\n\nexport const StyledFooter = styled(({ ...rest }) => <ModalFooter {...rest} />)`\n    padding-bottom: 20px;\n    padding-left: 20px;\n    padding-right: 20px;\n    padding-top: 0px;\n    border-top: 0;\n`;\n\nexport const StyledText = styled.p`\n    color: ${themeGet(\"colors.text3\")};\n    margin-bottom: 20px;\n`;\n","import { FC } from \"react\";\nimport { X } from \"react-feather\";\nimport {\n    ModalBody,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    Button,\n} from \"@doar/components\";\nimport { StyledModal, StyledClose, StyledTitle, StyledText } from \"./style\";\n\ninterface IProps {\n    show: boolean;\n    onClose: () => void;\n}\n\nconst ModalInvitePeople: FC<IProps> = ({ show, onClose }) => {\n    return (\n        <StyledModal show={show} onClose={onClose}>\n            <ModalBody p={[\"20px\", \"30px\"]}>\n                <StyledClose onClose={onClose}>\n                    <X size={20} />\n                </StyledClose>\n                <StyledTitle>Invite People</StyledTitle>\n                <StyledText>\n                    Share this link to your friend to grant access and join to\n                    this channel\n                </StyledText>\n                <InputGroup mb=\"5px\">\n                    <Input\n                        type=\"text\"\n                        name=\"create-channel\"\n                        id=\"create-channel\"\n                        placeholder=\"https://www.example.com\"\n                        readonly\n                    />\n                    <InputGroupAddon>\n                        <Button variant=\"outlined\" color=\"light\">\n                            Copy\n                        </Button>\n                    </InputGroupAddon>\n                </InputGroup>\n            </ModalBody>\n        </StyledModal>\n    );\n};\n\nexport default ModalInvitePeople;\n","import styled, { css, device, themeGet } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledNav = styled.nav`\n    display: flex;\n    align-items: center;\n`;\n\ninterface ILinkProps {\n    $active?: boolean;\n}\n\nconst linkCss = css<ILinkProps>`\n    color: ${themeGet(\"colors.text3\")};\n    padding: 2px;\n    border-radius: 0.25rem;\n    display: flex;\n    align-items: center;\n    &:not(:first-of-type) {\n        margin-left: 2px;\n    }\n    ${device.small} {\n        padding: 2px 5px;\n    }\n    ${({ $active }) =>\n        !!$active &&\n        css`\n            color: ${themeGet(\"colors.text2\")};\n        `}\n    span {\n        margin-left: 5px;\n        font-weight: 500;\n    }\n    svg {\n        width: 20px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        !!props.$active &&\n        css`\n            color: ${themeGet(\"colors.primary\")};\n        `}\n`;\n\nexport const StyledLink = styled(({ ...rest }) => (\n    <Anchor {...rest} />\n))<ILinkProps>`\n    ${linkCss};\n`;\n\nexport const StyledButton = styled(({ ...rest }) => (\n    <button type=\"button\" {...rest} />\n))<ILinkProps>`\n    border: none;\n    background: transparent;\n    ${linkCss};\n`;\n","import { FC, useState } from \"react\";\nimport { UserPlus, Users } from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport ModalInvitePeople from \"../modal-invite-people\";\nimport { useAppDispatch } from \"../../../../redux/hooks\";\nimport { toggleSidebar } from \"../../../../redux/slices/chat-ui\";\nimport { StyledNav, StyledButton } from \"./style\";\n\nconst ChannelNav: FC = () => {\n    const dispatch = useAppDispatch();\n    const [show, setShow] = useState(false);\n    const handleModal = () => {\n        setShow((prev) => !prev);\n    };\n    const handleSidebar = () => {\n        dispatch(toggleSidebar());\n    };\n\n    return (\n        <>\n            <StyledNav>\n                <StyledButton\n                    onClick={handleModal}\n                    data-tip=\"Invite People\"\n                    data-for=\"tooltip-invite\"\n                >\n                    <UserPlus />\n                </StyledButton>\n                <ReactTooltip place=\"left\" effect=\"solid\" id=\"tooltip-invite\" />\n                <StyledButton\n                    $active\n                    onClick={handleSidebar}\n                    data-tip=\"Member List\"\n                    data-for=\"tooltip-mlist\"\n                >\n                    <Users />\n                    <span>25</span>\n                </StyledButton>\n                <ReactTooltip place=\"left\" effect=\"solid\" id=\"tooltip-mlist\" />\n            </StyledNav>\n            <ModalInvitePeople show={show} onClose={handleModal} />\n        </>\n    );\n};\n\nexport default ChannelNav;\n","import styled, { css, device, themeGet } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledNav = styled.nav`\n    display: flex;\n    align-items: center;\n`;\n\ninterface ILinkProps {\n    $active?: boolean;\n}\n\nexport const StyledLink = styled(({ ...rest }) => (\n    <Anchor {...rest} />\n))<ILinkProps>`\n    color: ${themeGet(\"colors.text3\")};\n    padding: 2px;\n    border-radius: 0.25rem;\n    display: flex;\n    align-items: center;\n    &:not(:first-of-type) {\n        margin-left: 2px;\n    }\n    ${device.small} {\n        padding: 2px 5px;\n    }\n    ${({ $active }) =>\n        !!$active &&\n        css`\n            color: ${themeGet(\"colors.text2\")};\n        `}\n    span {\n        margin-left: 5px;\n        font-weight: 500;\n    }\n    svg {\n        width: 20px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        !!props.$active &&\n        css`\n            color: ${themeGet(\"colors.primary\")};\n        `}\n`;\n","import { FC } from \"react\";\nimport { Phone, Info, Flag, Star } from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport { StyledNav, StyledLink } from \"./style\";\n\nconst DirectNav: FC = () => {\n    return (\n        <StyledNav>\n            <StyledLink\n                path=\"#!\"\n                data-for=\"tooltip-phone\"\n                data-tip=\"Phone Calls\"\n            >\n                <Phone />\n            </StyledLink>\n            <ReactTooltip place=\"left\" effect=\"solid\" id=\"tooltip-phone\" />\n            <StyledLink\n                path=\"#!\"\n                data-for=\"tooltip-details\"\n                data-tip=\"User details\"\n            >\n                <Info />\n            </StyledLink>\n            <ReactTooltip place=\"left\" effect=\"solid\" id=\"tooltip-details\" />\n            <StyledLink\n                path=\"#!\"\n                data-for=\"tooltip-fav\"\n                data-tip=\"Add to favourites\"\n            >\n                <Star />\n            </StyledLink>\n            <ReactTooltip place=\"left\" effect=\"solid\" id=\"tooltip-fav\" />\n            <StyledLink path=\"#!\" data-for=\"tooltip-flag\" data-tip=\"Flag User\">\n                <Flag />\n            </StyledLink>\n            <ReactTooltip place=\"left\" effect=\"solid\" id=\"tooltip-flag\" />\n        </StyledNav>\n    );\n};\n\nexport default DirectNav;\n","import styled, { themeGet, device, css } from \"@doar/shared/styled\";\nimport { Input, Button } from \"@doar/components\";\n\nexport const StyledForm = styled.form`\n    display: none;\n    ${device.small} {\n        margin-right: 10px;\n        flex: 1;\n        display: flex;\n        align-items: center;\n        margin-left: 15px;\n        height: 34px;\n    }\n    input {\n        &:hover,\n        &:focus,\n        &:active {\n            box-shadow: none;\n            border-color: ${themeGet(\"colors.primary\")};\n            & + button {\n                border-color: ${themeGet(\"colors.primary\")};\n            }\n            ${(props) =>\n                props.theme.name === \"dark\" &&\n                css`\n                    border-color: ${themeGet(\"colors.gray800\")};\n                    & + button {\n                        border-color: ${themeGet(\"colors.gray800\")};\n                    }\n                `}\n        }\n    }\n`;\n\nexport const StyledInput = styled(({ ...rest }) => <Input {...rest} />)`\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    border-right-width: 0;\n    font-size: inherit;\n    width: 150px;\n    height: 100%;\n    min-height: 0;\n    background-color: transparent;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            border-color: rgba(255, 255, 255, 0.08);\n        `}\n`;\n\nexport const StyledButton = styled(({ ...rest }) => <Button {...rest} />)`\n    display: flex;\n    align-items: center;\n    border: 1px solid ${themeGet(\"colors.text4\")};\n    border-left-width: 0;\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    color: ${themeGet(\"colors.text3\")};\n    min-height: 0;\n    padding: 0 10px;\n    height: 100%;\n    svg {\n        width: 18px;\n        height: 18px;\n        stroke-width: 2.5px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            border-color: rgba(255, 255, 255, 0.08);\n            &:hover,\n            &:focus {\n                color: #fff;\n            }\n        `}\n`;\n","import { FC } from \"react\";\nimport { Search } from \"react-feather\";\nimport { StyledForm, StyledInput, StyledButton } from \"./style\";\n\nconst SearchForm: FC = () => {\n    return (\n        <StyledForm>\n            <StyledInput\n                id=\"chat-search\"\n                name=\"chat-search\"\n                placeholder=\"Search\"\n            />\n            <StyledButton type=\"submit\" variant=\"texted\">\n                <Search />\n            </StyledButton>\n        </StyledForm>\n    );\n};\n\nexport default SearchForm;\n","import styled, { css, device, themeGet } from \"@doar/shared/styled\";\nimport { Anchor } from \"@doar/components\";\n\nexport const StyledNav = styled.nav`\n    display: flex;\n    align-items: center;\n`;\n\ninterface ILinkProps {\n    $active?: boolean;\n}\n\nexport const StyledLink = styled(({ ...rest }) => (\n    <Anchor {...rest} />\n))<ILinkProps>`\n    color: ${themeGet(\"colors.text3\")};\n    padding: 2px;\n    border-radius: 0.25rem;\n    display: flex;\n    align-items: center;\n    &:not(:first-of-type) {\n        margin-left: 2px;\n    }\n    ${device.small} {\n        padding: 2px 5px;\n    }\n    ${({ $active }) =>\n        !!$active &&\n        css`\n            color: ${themeGet(\"colors.text2\")};\n        `}\n    span {\n        margin-left: 5px;\n        font-weight: 500;\n    }\n    svg {\n        width: 20px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        !!props.$active &&\n        css`\n            color: ${themeGet(\"colors.primary\")};\n        `}\n`;\n","import { FC } from \"react\";\nimport { MoreVertical } from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport { StyledNav, StyledLink } from \"./style\";\n\nconst SettingsNav: FC = () => {\n    return (\n        <StyledNav>\n            <StyledLink path=\"#!\" data-tip=\"Channel Settings\">\n                <MoreVertical />\n            </StyledLink>\n            <ReactTooltip place=\"left\" effect=\"solid\" />\n        </StyledNav>\n    );\n};\n\nexport default SettingsNav;\n","import styled, { themeGet, css } from \"@doar/shared/styled\";\nimport { MediaBody } from \"@doar/components\";\n\nexport const StyledGroup = styled.div`\n    min-height: 100%;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    .media {\n        & + .media {\n            margin-top: 20px;\n        }\n    }\n`;\n\nexport const StyledDivider = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    margin: 20px 0;\n    color: ${themeGet(\"colors.text3\")};\n    font-size: 10px;\n    font-family: ${themeGet(\"fonts.interUi\")};\n    font-weight: 500;\n    letter-spacing: 0.5px;\n    text-transform: uppercase;\n    &:first-of-type {\n        margin-top: 0;\n    }\n    &:before,\n    &:after {\n        content: \"\";\n        display: block;\n        flex: 1;\n        height: 1px;\n        background-color: ${themeGet(\"colors.light\")};\n    }\n    &:before {\n        margin-right: 10px;\n    }\n    &:after {\n        margin-left: 10px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            &::before,\n            &::after {\n                background-color: rgba(255, 255, 255, 0.06);\n            }\n        `}\n`;\n\nexport const StyledItemBody = styled(({ ...rest }) => <MediaBody {...rest} />)`\n    margin-left: 20px;\n    h6 {\n        font-size: 14px;\n        font-weight: 600;\n        small {\n            color: ${themeGet(\"colors.text3\")};\n        }\n    }\n    p {\n        margin-bottom: 5px;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray700\")};\n        `}\n`;\n","import { FC } from \"react\";\nimport { StyledDivider } from \"./style\";\n\nconst Divider: FC = ({ children }) => {\n    return <StyledDivider>{children}</StyledDivider>;\n};\n\nexport default Divider;\n","/* eslint-disable react/no-danger */\nimport { FC } from \"react\";\nimport { Media, Avatar, AvatarInitial } from \"@doar/components\";\nimport { StyledItemBody } from \"./style\";\n\ninterface IProps {\n    status: \"online\" | \"offline\";\n    image?: string;\n    bg?: string;\n    name: string;\n    time: string;\n    content: string;\n}\n\nconst Item: FC<IProps> = ({ status, image, bg, name, time, content }) => {\n    return (\n        <Media>\n            <Avatar size=\"sm\" status={status}>\n                {image && <img src={image} alt={name} />}\n                {!image && (\n                    <AvatarInitial bg={bg}>\n                        {name.substring(0, 1)}\n                    </AvatarInitial>\n                )}\n            </Avatar>\n            <StyledItemBody>\n                <h6>\n                    {name} <small>{time}</small>\n                </h6>\n                <div dangerouslySetInnerHTML={{ __html: content }} />\n            </StyledItemBody>\n        </Media>\n    );\n};\n\nItem.defaultProps = {\n    bg: \"dark\",\n};\n\nexport default Item;\n","import { FC } from \"react\";\nimport Divider from \"./divider\";\nimport Item from \"./item\";\nimport { StyledGroup } from \"./style\";\n\nconst ChatGroup: FC = () => {\n    return (\n        <StyledGroup>\n            <Divider>February 20, 2019</Divider>\n            <Item\n                status=\"online\"\n                name=\"katherine\"\n                time=\"Today at 1:30am\"\n                content=\"<p>Hello everyone, this is my first message to this channel</p><p>anybody here?</p>\"\n            />\n            <Divider>February 21, 2019</Divider>\n            <Item\n                status=\"online\"\n                name=\"katherine\"\n                time=\"Yesterday at 4:10am\"\n                content=\"<p>I'm back once again!!</p><p>It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.</p><p>There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable.</p>\"\n            />\n            <Item\n                status=\"offline\"\n                name=\"situmay\"\n                time=\"Yesterday at 4:15am\"\n                content=\"<p>Excepteur sint occaecat cupidatat non proident</p><p>Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse...</p>\"\n            />\n            <Divider>February 22, 2019</Divider>\n            <Item\n                status=\"online\"\n                bg=\"gray600\"\n                name=\"rlabares\"\n                time=\"Yesterday at 4:10am\"\n                content=\"<p>Nam libero tempore, cum soluta nobis</p>\"\n            />\n            <Item\n                status=\"offline\"\n                name=\"situmay\"\n                time=\"today at 4:15am\"\n                content=\"<p>I'm back once again!!</p><p>Et harum quidem rerum facilis est et expedita distinctio.</p><p>Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus.</p>\"\n            />\n        </StyledGroup>\n    );\n};\n\nexport default ChatGroup;\n","import styled, { css, themeGet } from \"@doar/shared/styled\";\nimport { Input } from \"@doar/components\";\n\nexport const StyledForm = styled.form`\n    height: 100%;\n    display: flex;\n    justify-content: space-between;\n`;\n\nexport const StyldFile = styled.label`\n    width: 70px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: ${themeGet(\"colors.text3\")};\n    border-right: 1px solid ${themeGet(\"colors.border\")};\n    cursor: pointer;\n    &:hover,\n    &:focus {\n        color: ${themeGet(\"colors.text2\")};\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            &:hover,\n            &:focus {\n                color: #fff;\n            }\n        `}\n`;\n\nexport const StyledInput = styled(({ ...rest }) => <Input {...rest} />)`\n    font-size: inherit;\n    border: 0;\n    box-shadow: none !important;\n    background-color: transparent;\n    align-self: center;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray300\")};\n            &:placeholder {\n                color: ${themeGet(\"colors.gray800\")};\n            }\n        `}\n`;\n\nexport const StyledNav = styled.nav`\n    display: flex;\n    align-items: center;\n    border-left: 1px solid ${themeGet(\"colors.border\")};\n    padding: 10px 20px;\n    svg {\n        width: 20px;\n        color: ${themeGet(\"colors.text3\")};\n        &:hover {\n            color: ${themeGet(\"colors.cornflower\")};\n        }\n    }\n`;\n\nexport const StyledImage = styled.label`\n    padding: 2px 5px;\n    border-radius: 0.25rem;\n    cursor: pointer;\n    line-height: 1;\n`;\n\nexport const StyledBtn = styled.button`\n    padding: 2px 5px;\n    border-radius: 0.25rem;\n    cursor: pointer;\n    background: transparent;\n    border: none;\n    margin-left: 2px;\n    line-height: 1;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            &:hover,\n            &:focus {\n                color: #fff;\n            }\n        `}\n`;\n","import { FC } from \"react\";\nimport { Plus, Image, Gift, Smile } from \"react-feather\";\nimport ReactTooltip from \"react-tooltip\";\nimport {\n    StyledForm,\n    StyldFile,\n    StyledInput,\n    StyledNav,\n    StyledImage,\n    StyledBtn,\n} from \"./style\";\n\nconst ChatForm: FC = () => {\n    return (\n        <StyledForm>\n            <>\n                <StyldFile\n                    htmlFor=\"add-file\"\n                    data-tip=\"Add File\"\n                    data-for=\"tooltip-gif\"\n                >\n                    <Plus />\n                </StyldFile>\n                <input type=\"file\" id=\"add-file\" name=\"add-file\" hidden />\n                <ReactTooltip place=\"top\" effect=\"solid\" id=\"tooltip-gif\" />\n            </>\n\n            <StyledInput\n                type=\"text\"\n                id=\"message\"\n                name=\"message\"\n                placeholder=\"Message\"\n            />\n            <StyledNav>\n                <>\n                    <StyledImage\n                        htmlFor=\"add-image\"\n                        data-tip=\"Add Gif\"\n                        data-for=\"tooltip-gif\"\n                    >\n                        <Image />\n                    </StyledImage>\n                    <input type=\"file\" id=\"add-image\" name=\"add-image\" hidden />\n                    <ReactTooltip place=\"top\" effect=\"solid\" id=\"tooltip-gif\" />\n                </>\n                <StyledBtn data-for=\"tooltip-gift\" data-tip=\"Add Gift\">\n                    <Gift />\n                </StyledBtn>\n                <ReactTooltip place=\"top\" effect=\"solid\" id=\"tooltip-gift\" />\n                <StyledBtn data-for=\"tooltip-smily\" data-tip=\"Add Smiley\">\n                    <Smile />\n                </StyledBtn>\n                <ReactTooltip place=\"top\" effect=\"solid\" id=\"tooltip-smily\" />\n            </StyledNav>\n        </StyledForm>\n    );\n};\n\nexport default ChatForm;\n","import styled, { themeGet, css } from \"@doar/shared/styled\";\nimport { Media } from \"@doar/components\";\n\nexport const StyledWrap = styled.div`\n    padding-left: 10px;\n    padding-right: 10px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    width: 100%;\n    height: 100%;\n`;\n\nexport const StyledList = styled.div`\n    margin-top: 10px;\n`;\n\nexport const StyledItem = styled(({ ...rest }) => <Media {...rest} />)`\n    padding: 6px 10px;\n    align-items: center;\n    color: ${themeGet(\"colors.text2\")};\n    border-radius: 0.25rem;\n    cursor: pointer;\n    &:not(:first-of-type) {\n        margin-top: 2px;\n    }\n    &:focus,\n    &:hover {\n        background-color: ${themeGet(\"colors.whisper\")};\n        ${(props) =>\n            props.theme.name === \"dark\" &&\n            css`\n                background-color: ${themeGet(\"colors.darklighten5\")};\n            `}\n    }\n`;\n","import { FC } from \"react\";\nimport { Avatar, AvatarInitial, MediaBody, Heading } from \"@doar/components\";\nimport { StyledItem } from \"./style\";\n\ninterface IProps {\n    status: \"online\" | \"offline\";\n    image?: string;\n    bg?: string;\n    name: string;\n}\n\nconst Item: FC<IProps> = ({ status, image, bg, name }) => {\n    return (\n        <StyledItem>\n            <Avatar size=\"sm\" status={status}>\n                {image && <img src={image} alt={name} />}\n                {!image && (\n                    <AvatarInitial bg={bg}>\n                        {name.substring(0, 1)}\n                    </AvatarInitial>\n                )}\n            </Avatar>\n            <MediaBody ml=\"10px\">\n                <Heading mb=\"0px\">{name}</Heading>\n            </MediaBody>\n        </StyledItem>\n    );\n};\n\nItem.defaultProps = {\n    bg: \"dark\",\n};\n\nexport default Item;\n","import { FC } from \"react\";\nimport Label from \"../label\";\nimport Item from \"./item\";\nimport { StyledWrap, StyledList } from \"./style\";\n\nconst MemberList: FC = () => {\n    return (\n        <StyledWrap>\n            <Label pl=\"10px\">Members List</Label>\n            <StyledList>\n                <Item status=\"online\" bg=\"gray500\" name=\"dfbot\" />\n                <Item status=\"online\" bg=\"primary\" name=\"situmay\" />\n                <Item status=\"offline\" bg=\"secondary\" name=\"acantones\" />\n                <Item status=\"offline\" bg=\"success\" name=\"rlabares\" />\n                <Item status=\"online\" bg=\"teal\" name=\"h.owen\" />\n                <Item status=\"online\" bg=\"info\" name=\"k.billie\" />\n                <Item status=\"online\" bg=\"indigo\" name=\"m.audrey\" />\n                <Item status=\"online\" bg=\"gray500\" name=\"macasindil\" />\n                <Item status=\"online\" bg=\"gray600\" name=\"e.ocaba\" />\n                <Item status=\"online\" bg=\"gray800\" name=\"avendula\" />\n            </StyledList>\n        </StyledWrap>\n    );\n};\n\nexport default MemberList;\n","import styled from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledName = styled.h6`\n    margin-left: 10px;\n    margin-bottom: 0px;\n`;\n","import { FC } from \"react\";\nimport { Avatar, AvatarInitial } from \"@doar/components\";\nimport { useAppSelector } from \"../../../../redux/hooks\";\nimport { StyledWrap, StyledName } from \"./style\";\n\nconst DirectTitle: FC = () => {\n    const { person } = useAppSelector((state) => state.chatUI);\n    return (\n        <StyledWrap>\n            <Avatar size=\"sm\">\n                {person?.image && (\n                    <img src={person?.image} alt={person?.name} />\n                )}\n                <AvatarInitial bg={person?.bg}>\n                    {person?.name.substring(0, 1)}\n                </AvatarInitial>\n            </Avatar>\n            <StyledName>@{person?.name}</StyledName>\n        </StyledWrap>\n    );\n};\n\nexport default DirectTitle;\n","import styled, { device, css, themeGet, tinycolor } from \"@doar/shared/styled\";\n\nexport const StyledMain = styled.div<{ $sidebar?: boolean }>`\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    visibility: hidden;\n    opacity: 0;\n    transform: translateX(100vw);\n    transition: all 0.3s;\n    ${device.small} {\n        transform: translateX(310px);\n    }\n    ${device.large} {\n        opacity: 1;\n        left: 310px;\n        transform: none;\n        visibility: visible;\n    }\n    ${({ $sidebar }) =>\n        $sidebar &&\n        css`\n            @media (max-width: 991.98px) {\n                opacity: 1;\n                visibility: visible;\n                transform: translateX(0);\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken5\")};\n        `}\n`;\n\nexport const StyledHeader = styled.div`\n    background-color: #fff;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    border-bottom: 1px solid ${themeGet(\"colors.border\")};\n    height: 60px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px 15px 10px 20px;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken3\")};\n        `}\n`;\n\nexport const StyledHeaderRight = styled.div`\n    display: flex;\n`;\n\nexport const StyledBody = styled.div<{ $showSidebar?: boolean }>`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 60px;\n    bottom: 60px;\n    ${({ $showSidebar }) =>\n        !!$showSidebar &&\n        css`\n            ${device.medium} {\n                margin-right: 230px;\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n            .avatar:after {\n                box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n            }\n        `}\n`;\n\nexport const StyledBodyInner = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n\nexport const StyledFooter = styled.div`\n    background-color: #fff;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    border-top: 1px solid ${themeGet(\"colors.border\")};\n    height: 60px;\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${tinycolor(themeGet(\"colors.gray900\")(props))\n                .darken(3)\n                .toString()};\n        `}\n`;\n\nexport const StyledSidebar = styled.div<{ $showSidebar?: boolean }>`\n    background-color: #fff;\n    width: 230px;\n    position: absolute;\n    top: 60px;\n    bottom: 60px;\n    right: 0;\n    display: none;\n    border-left: 1px solid ${themeGet(\"colors.border\")};\n    ${({ $showSidebar }) =>\n        !!$showSidebar &&\n        css`\n            display: block;\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${tinycolor(themeGet(\"colors.gray900\")(props))\n                .darken(3)\n                .toString()};\n            .avatar:after {\n                box-shadow: 0 0 0 2px ${themeGet(\"colors.gray900\")};\n            }\n        `}\n`;\n","import { FC, useEffect } from \"react\";\nimport { Heading } from \"@doar/components\";\nimport ScrollBar from \"../../../../components/scrollbar\";\nimport ChannelNav from \"../../../../components/apps/chat/channel-nav\";\nimport DirectNav from \"../../../../components/apps/chat/direct-nav\";\nimport SearchForm from \"../../../../components/apps/chat/search-form\";\nimport SettingsNav from \"../../../../components/apps/chat/settings-nav\";\nimport ChatGroup from \"../../../../components/apps/chat/chat-group\";\nimport ChatForm from \"../../../../components/apps/chat/chat-form\";\nimport MemberList from \"../../../../components/apps/chat/member-list\";\nimport DirectTitle from \"../../../../components/apps/chat/direct-title\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport { toggleSidebar } from \"../../../../redux/slices/chat-ui\";\nimport {\n    StyledMain,\n    StyledHeader,\n    StyledHeaderRight,\n    StyledBody,\n    StyledBodyInner,\n    StyledFooter,\n    StyledSidebar,\n} from \"./style\";\n\nconst Main: FC = () => {\n    const dispatch = useAppDispatch();\n    const { channel, chatType, rightSidebar } = useAppSelector(\n        (state) => state.chatUI\n    );\n    const { sidebar } = useAppSelector((state) => state.ui);\n\n    useEffect(() => {\n        if (window.matchMedia(\"(max-width: 991px)\").matches) {\n            dispatch(toggleSidebar());\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return (\n        <StyledMain className=\"content\" $sidebar={sidebar}>\n            <StyledHeader>\n                {chatType === \"channel\" && (\n                    <Heading mb=\"0px\">#{channel}</Heading>\n                )}\n                {chatType === \"direct\" && <DirectTitle />}\n                <StyledHeaderRight>\n                    {chatType === \"channel\" && <ChannelNav />}\n                    {chatType === \"direct\" && <DirectNav />}\n                    <SearchForm />\n                    <SettingsNav />\n                </StyledHeaderRight>\n            </StyledHeader>\n            <StyledBody $showSidebar={rightSidebar}>\n                <ScrollBar>\n                    <StyledBodyInner>\n                        <ChatGroup />\n                    </StyledBodyInner>\n                </ScrollBar>\n            </StyledBody>\n            <StyledFooter>\n                <ChatForm />\n            </StyledFooter>\n            <StyledSidebar $showSidebar={rightSidebar}>\n                <ScrollBar>\n                    <MemberList />\n                </ScrollBar>\n            </StyledSidebar>\n        </StyledMain>\n    );\n};\n\nexport default Main;\n","import { FC } from \"react\";\nimport Layout from \"../../layouts\";\nimport Wrapper from \"../../containers/apps/chat/wrapper\";\nimport NavLeft from \"../../containers/apps/chat/nav-left\";\nimport Sidebar from \"../../containers/apps/chat/sidebar\";\nimport Main from \"../../containers/apps/chat/main\";\nimport SEO from \"../../components/seo\";\n\nconst Chat: FC = () => {\n    return (\n        <Layout hasSidebar hideFooter sidebarLayout={2}>\n            <SEO />\n            <Wrapper>\n                <NavLeft />\n                <Sidebar />\n                <Main />\n            </Wrapper>\n        </Layout>\n    );\n};\n\nexport default Chat;\n"],"sourceRoot":""}