{"version":3,"sources":["components/signup-form/style.tsx","layouts/content/style.tsx","layouts/content/index.tsx","components/StyledTitleComponent/style.tsx","components/StyledTitleComponent/index.tsx","components/Dropzone/style.tsx","../../../node_modules/react-feather/dist/icons/upload-cloud.js","components/Dropzone/index.tsx","components/product_forms/form1.tsx","components/product_list/create.tsx","pages/product/create.tsx"],"names":["StyledWrap2","styled","div","props","pb","StyledWrap","Container","size","justify","align","InvisibleInput","input","Row","md","sm","lg","xl","StyledTitle","h3","themeGet","StyledDesc","p","StyledDivider","StyledBottomText","conentCSS","css","device","large","xlarge","$justify","$fullHeight","$align","borderBottom","borderBottomWidth","theme","name","space","borderStyle","StyledContent","px","py","m","mx","my","mt","rest","Content","children","className","fullHeight","justifyCenter","restProps","pl","pr","StyledTitleComponentContainer","StyledTitleComponent","title","backText","buttonColor","buttonUrl","history","useHistory","onClick","push","goBack","mr","type","color","defaultColor","StyledDropzoneImages","img","DropzoneContainer","button","height","DropzoneText","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","UploadCloud","forwardRef","_ref","ref","_ref$color","_ref$size","React","createElement","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","d","propTypes","PropTypes","string","oneOfType","number","displayName","Dropzone","photoRef","many","setimages","current","click","multiple","accept","onChange","e","prevState","files","Form1","errors","register","images","fileUploadRef","useRef","console","log","mb","display","htmlFor","id","placeholder","feedbackText","message","state","hasKey","showState","required","category","hidden","value","undefined","price","price_currency","selected","weight","amount","description","map","one","src","URL","createObjectURL","CreateproductContainer","useParams","useState","useForm","handleSubmit","formState","action","onSubmit","data","JSON","stringify","noValidate","CreateProduct"],"mappings":"0kFAsBO,IAAMA,EAAcC,IAAOC,IAAV,KAGF,SAAAC,GAAK,OAAEA,EAAMC,MAGtBC,EAAaJ,IAAOC,IAAV,KAIVI,EAAYL,IAAOC,IAAV,KAGX,SAAAC,GAAK,OAAIA,EAAMI,QACH,SAAAJ,GAAK,OAAEA,EAAMK,SAAW,WAC7B,SAAAL,GAAK,OAAEA,EAAMM,OAAS,WAK3BC,EAAiBT,IAAOU,MAAV,KAOdC,EAAMX,IAAOC,IAAV,KACL,SAAAC,GAAK,OAAIA,EAAMU,IAAM,MAEX,SAAAV,GAAK,OAAEA,EAAMK,SAAS,WAC1B,SAAAL,GAAK,OAAEA,EAAMM,OAAS,WAE1B,SAAAN,GAAK,OAAIA,EAAMW,IAAM,OAGrB,SAAAX,GAAK,OAAIA,EAAMW,IAAM,OAGrB,SAAAX,GAAK,OAAIA,EAAMU,IAAM,MAGrB,SAAAV,GAAK,OAAIA,EAAMY,IAAM,MAGrB,SAAAZ,GAAK,OAAIA,EAAMa,IAAM,MASrBC,EAAchB,IAAOiB,GAAV,IACXC,YAAS,gBAEJ,SAAAhB,GAAK,OAAEA,EAAMM,OAAS,WAM3BW,EAAanB,IAAOoB,EAAV,IAEVF,YAAS,iBAUTG,GANkBrB,IAAOC,IAAV,KAMCD,IAAOC,IAAV,IAKbiB,YAAS,gBAGHA,YAAS,iBASAA,YAAS,kBAUxBI,EAAmBtB,IAAOC,IAAV,M,wvCC5G7B,IAAMsB,EAAYC,YAAH,IAITC,IAAOC,MAIPD,IAAOE,QAGP,qBAAGC,UAECJ,YADU,QAMd,qBAAGK,aAEDL,YADW,QAOb,gBAAGM,EAAH,EAAGA,OAAH,OACEA,GACW,WAAXA,GACAN,YAFA,QAOL,gBAAGO,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,kBAAjB,OACMD,GAAgBC,IACjBR,YADC,IAG0BN,YAAS,qBAEtC,SAAChB,GAAD,MACuB,SAArBA,EAAM+B,MAAMC,MACZV,YADA,IAEaN,YAAS,qBAExBiB,IACAC,KAGOC,EAAgBrC,aACzB,cACIoB,EADJ,EAEIkB,GAFJ,EAGIC,GAHJ,EAIIC,EAJJ,EAKIC,GALJ,EAMIC,GANJ,EAOIC,GAPJ,EAQIX,kBARJ,EASIH,YATJ,EAUIC,OAVJ,IAWOc,EAXP,oGAYM,mCAASA,MAbU5C,CAAH,IAepBuB,GC7CSsB,IAvBmB,SAAC,GAO5B,IANHC,EAME,EANFA,SACAC,EAKE,EALFA,UACAC,EAIE,EAJFA,WACAC,EAGE,EAHFA,cACAzC,EAEE,EAFFA,MACG0C,EACD,6EACF,OACI,cAACb,EAAD,yBACIR,YAAamB,EACblB,OAAQtB,EACRoB,SAAUqB,EACVF,UAAWA,GACPG,GALR,aAOI,cAAC,IAAD,CAAWH,UAAU,YAAYI,GAAG,IAAIC,GAAG,IAA3C,SACKN,S,qMC3BV,IAAMO,E,OAAgCrD,EAAOC,IAAV,K,yBCiC3BqD,IArB0C,SAAC,GAIrD,IAHHC,EAGE,EAHFA,MACAC,EAEE,EAFFA,SAASC,EAEP,EAFOA,YACTC,EACE,EADFA,UAEMC,EAAUC,cAQd,OACI,eAACP,EAAD,WACI,cAAC,IAAD,UAAcE,IACd,cAAC,IAAD,CAAQM,QAAS,WATlBH,EACCC,EAAQG,KAAKJ,GAEbC,EAAQI,UAM2BC,GAAG,OAAOC,KAAK,SAASC,MAAOT,GAAe,SAAjF,SAA4FD,GAAsB,c,mrBC5B9H,IAAMW,EAAe,UAORC,EAAuBpE,IAAOqE,IAAV,IAMXF,GAITG,EAAoBtE,IAAOuE,OAAV,KAClB,SAAArE,GAAK,OAAIA,EAAMsE,QAAU,UAGfL,GAUTM,EAAezE,IAAOC,IAAV,IAEdkE,G,gBCnCX,SAASO,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAIoB,EAAcC,sBAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAaF,EAAKjC,MAClBA,OAAuB,IAAfmC,EAAwB,eAAiBA,EACjDC,EAAYH,EAAK7F,KACjBA,OAAqB,IAAdgG,EAAuB,GAAKA,EACnC1D,EAAO4C,EAAyBW,EAAM,CAAC,QAAS,SAEpD,OAAoBI,IAAMC,cAAc,MAAO9B,EAAS,CACtD0B,IAAKA,EACLK,MAAO,6BACPC,MAAOpG,EACPkE,OAAQlE,EACRqG,QAAS,YACTC,KAAM,OACNC,OAAQ3C,EACR4C,YAAa,IACbC,cAAe,QACfC,eAAgB,SACfpE,GAAoB2D,IAAMC,cAAc,WAAY,CACrDS,OAAQ,qBACOV,IAAMC,cAAc,OAAQ,CAC3CU,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OACWd,IAAMC,cAAc,OAAQ,CAC3Cc,EAAG,uDACYf,IAAMC,cAAc,WAAY,CAC/CS,OAAQ,yBAGZhB,EAAYsB,UAAY,CACtBrD,MAAOsD,IAAUC,OACjBnH,KAAMkH,IAAUE,UAAU,CAACF,IAAUC,OAAQD,IAAUG,UAEzD1B,EAAY2B,YAAc,cACX3B,QCbA4B,EAlBkB,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,SAASC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,UAI7C,OACI,eAAC1D,EAAD,CAAmBT,QAJL,WACdiE,EAASG,QAAQC,SAGwBjE,KAAK,SAA9C,UACI,cAAC,IAAD,CAAgBA,KAAK,OAAQkE,UAAU,EAAM/B,IAAK0B,EAAUM,OAAO,UAAUC,SAAU,SAACC,GAAD,OAASN,GAAU,SAACO,GAAD,4BAAqBA,GAArB,YAAkCD,EAAEzD,OAAO2D,cACrJ,eAAC,IAAD,WACI,cAAC,IAAD,CAAK5H,GAAG,MAAME,GAAG,MAAMC,GAAG,MAA1B,SACI,cAAC,EAAD,CAAaT,KAAM,GAAI4D,MAAM,cAEjC,cAAC,IAAD,CAAKtD,GAAG,MAAME,GAAG,MAAMC,GAAG,MAA1B,SACI,eAAC0D,EAAD,qBAAsBsD,EAAO,SAAU,sBC+J5CU,IAxKqB,SAAC,GAM9B,IAAD,cALFC,EAKE,EALFA,OACAC,EAIE,EAJFA,SACAC,EAGE,EAHFA,OACAZ,EAEE,EAFFA,UAGIa,EAAgBC,iBAAyB,MAE7C,OADAC,QAAQC,IAAIJ,GAER,eAAC,IAAD,WACQ,cAAC,IAAD,CAAK/H,GAAG,MAAMD,GAAG,MAAME,GAAG,MAAMC,GAAG,MAAnC,SACI,eAAC,IAAD,CAAWkI,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,OAAxC,0BAGA,cAAC,IAAD,aACIC,GAAG,OACHnF,KAAK,OACLoF,YAAY,qBACZC,aAAY,OAAEZ,QAAF,IAAEA,GAAF,UAAEA,EAAQxG,YAAV,aAAE,EAAcqH,QAC5BC,MACIC,YAAOf,EAAQ,QAAU,QAAU,UAEvCgB,YAAaD,YAAOf,EAAQ,SACxBC,EAAS,OAAQ,CACjBgB,SAAU,oCAM1B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWV,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,OAAxC,sBAGA,eAAC,IAAD,yBACIC,GAAG,WACHE,aAAY,OAAEZ,QAAF,IAAEA,GAAF,UAAEA,EAAQkB,gBAAV,aAAE,EAAkBL,QAChCC,MAAOC,YAAOf,EAAQ,YAAc,QAAU,UAC9CgB,YAAaD,YAAOf,EAAQ,aACxBC,EAAS,WAAY,CACrBgB,SAAU,kCANlB,cASI,wBAAQE,QAAQ,EAAMC,WAAOC,EAA7B,sBACA,wBAAQD,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,gCAIZ,cAAC,IAAD,CAAKjJ,GAAG,KAAKD,GAAG,KAAKE,GAAG,KAAKC,GAAG,KAAhC,SACI,eAAC,IAAD,CAAWkI,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,QAAxC,mBAGA,cAAC,IAAD,aACIC,GAAG,QACHnF,KAAK,SACLoF,YAAY,sBACZC,aAAY,OAAEZ,QAAF,IAAEA,GAAF,UAAEA,EAAQsB,aAAV,aAAE,EAAeT,QAC7BC,MACIC,YAAOf,EAAQ,SAAW,QAAU,UAExCgB,YAAaD,YAAOf,EAAQ,UACxBC,EAAS,QAAS,CAClBgB,SAAU,qCAK1B,cAAC,IAAD,CAAK9I,GAAG,KAAKD,GAAG,KAAKE,GAAG,KAAKC,GAAG,KAAhC,SACI,eAAC,IAAD,CAAWkI,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,iBAAxC,sBAGA,eAAC,IAAD,yBACIC,GAAG,iBACHE,aAAY,OAAEZ,QAAF,IAAEA,GAAF,UAAEA,EAAQuB,sBAAV,aAAE,EAAwBV,QACtCC,MAAOC,YAAOf,EAAQ,kBAAoB,QAAU,UACpDgB,YAAaD,YAAOf,EAAQ,mBACxBC,EAAS,iBAAkB,CAC3BgB,SAAU,0BANlB,cASI,wBAAQO,UAAU,EAAML,QAAQ,EAAMC,MAAM,GAA5C,sBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,gCAIZ,cAAC,IAAD,UACI,eAAC,IAAD,CAAWb,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,SAAxC,oBAGA,cAAC,IAAD,aACIC,GAAG,SACHnF,KAAK,SACLoF,YAAY,uBACZC,aAAY,OAAEZ,QAAF,IAAEA,GAAF,UAAEA,EAAQyB,cAAV,aAAE,EAAgBZ,QAC9BC,MACIC,YAAOf,EAAQ,UAAY,QAAU,UAEzCgB,YAAaD,YAAOf,EAAQ,WACxBC,EAAS,SAAU,CACnBgB,SAAU,sCAK1B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWV,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,SAAxC,oBAGA,cAAC,IAAD,aACIC,GAAG,SACHnF,KAAK,SACLoF,YAAY,uBACZC,aAAY,OAAEZ,QAAF,IAAEA,GAAF,UAAEA,EAAQ0B,cAAV,aAAE,EAAgBb,QAC9BC,MACIC,YAAOf,EAAQ,UAAY,QAAU,UAEzCgB,YAAaD,YAAOf,EAAQ,WACxBC,EAAS,SAAU,CACnBgB,SAAU,sCAK1B,cAAC,IAAD,CAAK9I,GAAG,MAAMD,GAAG,MAAME,GAAG,MAAMC,GAAG,MAAnC,SACI,eAAC,IAAD,CAAWkI,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,cAAxC,yBAGA,cAAC,IAAD,aACIC,GAAG,cACHE,aAAY,OAAEZ,QAAF,IAAEA,GAAF,UAAEA,EAAQ2B,mBAAV,aAAE,EAAqBd,QACnCC,MAAOC,YAAOf,EAAQ,eAAiB,QAAU,UACjDgB,YAAaD,YAAOf,EAAQ,gBACxBC,EAAS,cAAe,CACxBgB,SAAU,mCAK1B,cAAC,IAAD,CAAK9I,GAAG,MAAMD,GAAG,MAAME,GAAG,MAAMC,GAAG,MAAnC,SACI,eAAC,IAAD,CAAWkI,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,cAAxC,oBAIA,cAAC,EAAD,CAAUnB,UAAW,SAACM,GAAD,OAASN,EAAUM,IAAIR,SAAUe,EAAed,MAAM,IAC3E,cAAC,IAAD,UACKa,EAAO0B,KAAI,SAACC,GAAD,OAAW,cAAC,IAAD,CAAM1J,GAAG,KAAKD,GAAG,KAAKE,GAAG,IAAIC,GAAG,IAAhC,SACC,cAACqD,EAAD,CAAsBoG,IAAKC,IAAIC,gBAAgBH,sB,iJChHpFI,EAvCc,WAAM,IAC1BvB,EAAMwB,cAANxB,GADyB,EAELyB,mBAAc,IAFT,mBAEzBjC,EAFyB,KAElBZ,EAFkB,OAO1B8C,cAHAnC,EAJ0B,EAI1BA,SACAoC,EAL0B,EAK1BA,aACarC,EANa,EAM1BsC,UAAatC,OAOjB,OADAK,QAAQC,IAAI,MAAMI,GACX,eAAC,IAAD,WACH,cAAC9F,EAAA,EAAD,CACIC,MAAM,qBAEV,sBAAM0H,OAAO,IAAIC,SAAUH,GATd,SAACI,GACdpC,QAAQC,IAAIoC,KAAKC,UAAUF,EAAM,UAQkBG,YAAU,EAA7D,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKzK,GAAG,MAAMD,GAAG,MAAME,GAAG,MAAMC,GAAG,MAAnC,SACI,cAAC,IAAD,CACI2H,OAAQA,EACRC,SAAUA,EACVC,OAAQA,EACRZ,UAAW,SAACM,GAAD,OAASN,EAAUM,QAItC,cAAC,IAAD,CAAK9H,MAAM,WAAX,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQyD,KAAK,SAASC,MAAM,SAA5B,+BCtCTqH,UAXO,WAClB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,IACA,cAAC,IAAD,CAAUvI,YAAU,EAApB,SACI,cAAC,EAAD","file":"static/js/8.9872766b.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport styled, { themeGet } from \"@doar/shared/styled\";\r\n\r\ninterface RowProps{\r\n    md?:string | number,\r\n    sm?:string| number,\r\n    lg?:string| number,\r\n    xl?:string| number,\r\n    align?:string| number,\r\n    justify?:string| number,\r\n}\r\n\r\ninterface StyledWrap2Props{\r\n    pb?:string\r\n}\r\n\r\n\r\ninterface ContainerProps{\r\n    size?:number\r\n    justify?:string,\r\n    align?:string\r\n}\r\nexport const StyledWrap2 = styled.div<StyledWrap2Props>`\r\n    width: 100%;\r\n    padding-top: 20px;\r\n    padding-bottom: ${props=>props.pb};\r\n`;\r\n\r\nexport const StyledWrap = styled.div`\r\n    width: 100%;\r\n    padding-top: 20px;\r\n`;\r\nexport const Container = styled.div<ContainerProps>`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex:${props => props.size};\r\n    justify-content: ${props=>props.justify || 'unset'};\r\n    align-items:${props=>props.align || 'unset'} ;\r\n`;\r\n\r\n\r\n\r\nexport const InvisibleInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\n\r\n\r\n\r\nexport const Row = styled.div<RowProps>`\r\n  width: ${props => props.md || 50}%;\r\n  padding-right: 10px;\r\n  justify-content: ${props=>props.justify||'unset'};\r\n  align-items: ${props=>props.align || 'unset'};\r\n  @media screen and (max-width:576px){\r\n    width: ${props => props.sm || 100}%;\r\n  }\r\n  @media screen and (max-width:768px) and (min-width: 576px){\r\n    width: ${props => props.sm || 100}%;\r\n  }\r\n  @media screen and (max-width:992px) and (min-width: 768px){\r\n    width: ${props => props.md || 50}%;\r\n  }\r\n  @media screen and (max-width:1200px) and (min-width: 992px){\r\n    width: ${props => props.lg || 50}%;\r\n  }\r\n  @media screen and (min-width: 1200px){\r\n    width: ${props => props.xl || 50}%;\r\n  }\r\n  \r\n`;\r\n\r\n\r\ninterface StyledTitleProps{\r\n    align?:string\r\n}\r\nexport const StyledTitle = styled.h3<StyledTitleProps>`\r\n    color: ${themeGet(\"colors.text\")};\r\n    margin-bottom: 5px;\r\n    text-align: ${props=>props.align || 'unset'};\r\n`;\r\n\r\n\r\n\r\n\r\nexport const StyledDesc = styled.p`\r\n    font-size: 16px;\r\n    color: ${themeGet(\"colors.text3\")};\r\n    margin-bottom: 40px;\r\n`;\r\n\r\nexport const StyledLabelWrap = styled.div`\r\n    margin-bottom: 5px;\r\n    justify-content: space-between;\r\n    display: flex;\r\n`;\r\n\r\nexport const StyledDivider = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    text-transform: uppercase;\r\n    color: ${themeGet(\"colors.text3\")};\r\n    font-size: 10px;\r\n    font-weight: 500;\r\n    font-family: ${themeGet(\"fonts.interui\")};\r\n    letter-spacing: 0.5px;\r\n    margin: 15px 0;\r\n    &:after,\r\n    &:before {\r\n        content: \"\";\r\n        display: block;\r\n        flex: 1;\r\n        height: 1px;\r\n        background-color: ${themeGet(\"colors.light\")};\r\n    }\r\n    &:before {\r\n        margin-right: 10px;\r\n    }\r\n    &:after {\r\n        margin-left: 10px;\r\n    }\r\n`;\r\n\r\nexport const StyledBottomText = styled.div`\r\n    margin-top: 20px;\r\n    text-align: center;\r\n    font-size: 13px;\r\n`;\r\n","import styled, {\r\n    device,\r\n    space,\r\n    border as borderStyle,\r\n    SpaceProps,\r\n    BorderProps,\r\n    css,\r\n    themeGet,\r\n} from \"@doar/shared/styled\";\r\n\r\ninterface IProps extends SpaceProps, BorderProps {\r\n    $fullHeight?: boolean;\r\n    $align: \"top\" | \"center\" | \"bottom\";\r\n    $justify?:boolean\r\n}\r\n\r\nconst conentCSS = css<IProps>`\r\n    padding-left: 15px;\r\n    padding-right:8px;\r\n    padding-top: 15px;\r\n    ${device.large} {\r\n        padding: 25px;\r\n        margin-top: 60px;\r\n    }\r\n    ${device.xlarge} {\r\n        padding: 30px;\r\n    }\r\n    ${({ $justify }) =>\r\n            $justify &&\r\n          css`\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n        `}\r\n    ${({ $fullHeight }) =>\r\n        $fullHeight &&\r\n        css`\r\n            min-height: calc(100vh - 107px);\r\n            display: flex;\r\n            flex-direction: column;\r\n        `}\r\n\r\n    ${({ $align }) =>\r\n        $align &&\r\n        $align !== \"center\" &&\r\n        css`\r\n            & > .container {\r\n                flex: 1;\r\n            }\r\n        `}\r\n\t${({ borderBottom, borderBottomWidth }) =>\r\n        (borderBottom || borderBottomWidth) &&\r\n        css`\r\n            border-bottom-style: solid;\r\n            border-bottom-color: ${themeGet(\"colors.border\")};\r\n        `}\r\n    ${(props) =>\r\n        props.theme.name === \"dark\" &&\r\n        css`\r\n            color: ${themeGet(\"colors.gray500\")};\r\n        `}\r\n    ${space};\r\n    ${borderStyle};\r\n`;\r\n\r\nexport const StyledContent = styled(\r\n    ({\r\n        p,\r\n        px,\r\n        py,\r\n        m,\r\n        mx,\r\n        my,\r\n        mt,\r\n        borderBottomWidth,\r\n        $fullHeight,\r\n        $align,\r\n        ...rest\r\n    }) => <div {...rest} />\r\n)<IProps>`\r\n    ${conentCSS}\r\n`;\r\n","import React from \"react\";\r\nimport { SpaceProps, BorderProps } from \"@doar/shared/styled\";\r\nimport { Container } from \"@doar/components\";\r\nimport { StyledContent } from \"./style\";\r\n\r\ninterface IProps extends SpaceProps, BorderProps {\r\n    className?: string;\r\n    fullHeight?: boolean;\r\n    justifyCenter?:boolean\r\n    align?: \"top\" | \"center\" | \"bootom\";\r\n}\r\n\r\nconst Content: React.FC<IProps> = ({\r\n    children,\r\n    className,\r\n    fullHeight,\r\n    justifyCenter,\r\n    align,\r\n    ...restProps\r\n}) => {\r\n    return (\r\n        <StyledContent\r\n            $fullHeight={fullHeight}\r\n            $align={align}\r\n            $justify={justifyCenter}\r\n            className={className}\r\n            {...restProps}\r\n        >\r\n            <Container className=\"container\" pl=\"0\" pr=\"0\">\r\n                {children}\r\n            </Container>\r\n        </StyledContent>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","import styled from \"@doar/shared/dist/styled\";\r\n\r\nexport const StyledTitleComponentContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;","import {StyledTitleComponentContainer} from \"./style\";\r\nimport {FC} from \"react\";\r\nimport {StyledTitle} from \"../signup-form/style\";\r\nimport {Button} from \"@doar/components\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\ninterface StyledTitleComponentProps{\r\n    title:string,\r\n    backText?:any,\r\n    buttonColor?: \"white\" | \"danger\" | \"primary\" | \"secondary\" | \"success\" |\"warning\",\r\n    buttonUrl?:string\r\n}\r\n\r\n\r\nlet StyledTitleComponent:FC<StyledTitleComponentProps> = ({\r\n  title,\r\n  backText,buttonColor,\r\n  buttonUrl\r\n})=>{\r\n    let history = useHistory()\r\n    let handleBack = ()=>{\r\n        if(buttonUrl){\r\n            history.push(buttonUrl)\r\n        }else{\r\n            history.goBack()\r\n        }\r\n    }\r\n    return(\r\n        <StyledTitleComponentContainer>\r\n            <StyledTitle>{title}</StyledTitle>\r\n            <Button onClick={()=>handleBack()} mr='12px' type='button' color={buttonColor || 'danger'}>{backText ? backText : 'Back'}</Button>\r\n        </StyledTitleComponentContainer>\r\n    )\r\n}\r\n\r\nexport default StyledTitleComponent","import styled from \"@doar/shared/dist/styled\";\r\n\r\nconst defaultColor = '#c0ccda'\r\n\r\ninterface DropzoneContainerProps{\r\n    height?:string\r\n}\r\n\r\n\r\nexport const StyledDropzoneImages = styled.img`\r\n  margin-top: 5px;\r\n  margin-bottom:5px ;\r\n  width: 50px;\r\n  height: 70px;\r\n  border-style: dashed;\r\n  border: 1px solid ${defaultColor};\r\n`;\r\n\r\n\r\nexport const DropzoneContainer = styled.button<DropzoneContainerProps>`\r\n  height: ${props => props.height || '200px'};\r\n  width: 100%;\r\n  background-color: white;\r\n  border: 1px solid ${defaultColor};\r\n  border-style: dashed;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n`;\r\n\r\n\r\nexport const DropzoneText = styled.div`\r\n  width: 100%;\r\n  color: ${defaultColor};\r\n`;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar UploadCloud = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"16 16 12 12 8 16\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"12\",\n    x2: \"12\",\n    y2: \"21\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"16 16 12 12 8 16\"\n  }));\n});\nUploadCloud.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nUploadCloud.displayName = 'UploadCloud';\nexport default UploadCloud;","import {DropzoneContainer, DropzoneText} from \"./style\";\r\nimport {UploadCloud} from 'react-feather'\r\nimport {FC} from \"react\";\r\nimport {Container, InvisibleInput, Row} from \"../signup-form/style\";\r\n\r\n\r\ninterface DropZoneProps{\r\n    photoRef?:any,\r\n    many?:boolean,\r\n    setimages?:any\r\n}\r\n\r\n\r\nlet Dropzone:FC<DropZoneProps> = ({photoRef,many,setimages}) =>{\r\n    let handleClick = ()=>{\r\n        photoRef.current.click()\r\n    }\r\n    return(\r\n        <DropzoneContainer onClick={handleClick} type='button'>\r\n            <InvisibleInput type='file'  multiple={true} ref={photoRef} accept='image/*' onChange={(e:any)=>setimages((prevState:any)=>[...prevState,...e.target.files])} />\r\n            <Container>\r\n                <Row md='100' lg='100' xl='100'>\r\n                    <UploadCloud size={50} color='#c0ccda'/>\r\n                </Row>\r\n                <Row md='100' lg='100' xl='100'>\r\n                    <DropzoneText>Upload {many ? 'photos' :'a photo'}</DropzoneText>\r\n                </Row>\r\n            </Container>\r\n        </DropzoneContainer>\r\n    )\r\n}\r\nexport default Dropzone","import {FC, useRef} from \"react\";\r\nimport {Container, InvisibleInput, Row} from \"../signup-form/style\";\r\nimport {FormGroup, Input, Label, Select, Textarea} from \"@doar/components\";\r\nimport {hasKey} from \"@doar/shared/dist/methods/index\";\r\nimport Dropzone from \"../Dropzone\";\r\nimport {StyledDropzoneImages} from \"../Dropzone/style\";\r\n\r\ninterface OneProductFormProps{\r\n    errors:any,\r\n    register:any,\r\n    images:any,\r\n    setimages:any,\r\n\r\n}\r\n\r\n\r\nlet Form1:FC<OneProductFormProps> = ({\r\n    errors,\r\n    register,\r\n    images,\r\n    setimages,\r\n\r\n}) => {\r\n    let fileUploadRef = useRef<HTMLInputElement>(null)\r\n    console.log(images)\r\n    return(\r\n        <Container>\r\n                <Row sm='100' md='100' lg='100' xl='100'>\r\n                    <FormGroup mb='10px'>\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"name\">\r\n                            Product Name\r\n                        </Label>\r\n                        <Input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter product name\"\r\n                            feedbackText={errors?.name?.message}\r\n                            state={\r\n                                hasKey(errors, \"name\") ? \"error\" : \"success\"\r\n                            }\r\n                            showState={!!hasKey(errors, \"name\")}\r\n                            {...register(\"name\", {\r\n                                required: \"Product name is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <FormGroup mb='10px'>\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"name\">\r\n                            Category\r\n                        </Label>\r\n                        <Select\r\n                            id='category'\r\n                            feedbackText={errors?.category?.message}\r\n                            state={hasKey(errors, \"category\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"category\")}\r\n                            {...register(\"category\", {\r\n                                required: \"Category Options is required\",\r\n                            })}\r\n                        >\r\n                            <option hidden={true} value={undefined}>Category</option>\r\n                            <option value='category1' >Category1</option>\r\n                            <option value='category2' >Category2</option>\r\n                            <option value='category3' >Category3</option>\r\n                        </Select>\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row sm='60' md='30' lg='40' xl='40'>\r\n                    <FormGroup mb='10px'>\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"price\">\r\n                            Price\r\n                        </Label>\r\n                        <Input\r\n                            id=\"price\"\r\n                            type=\"number\"\r\n                            placeholder=\"Enter product price\"\r\n                            feedbackText={errors?.price?.message}\r\n                            state={\r\n                                hasKey(errors, \"price\") ? \"error\" : \"success\"\r\n                            }\r\n                            showState={!!hasKey(errors, \"price\")}\r\n                            {...register(\"price\", {\r\n                                required: \"Product price is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row sm='40' md='20' lg='10' xl='10'>\r\n                    <FormGroup mb='10px'>\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"price_currency\">\r\n                            Currency\r\n                        </Label>\r\n                        <Select\r\n                            id='price_currency'\r\n                            feedbackText={errors?.price_currency?.message}\r\n                            state={hasKey(errors, \"price_currency\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"price_currency\")}\r\n                            {...register(\"price_currency\", {\r\n                                required: \"currency is required\",\r\n                            })}\r\n                        >\r\n                            <option selected={true} hidden={true} value=''>Currency</option>\r\n                            <option value='currency1' >currency1</option>\r\n                            <option value='currency2' >currency2</option>\r\n                            <option value='currency3' >currency3</option>\r\n                        </Select>\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb='10px'>\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"weight\">\r\n                            Weight\r\n                        </Label>\r\n                        <Input\r\n                            id=\"weight\"\r\n                            type=\"number\"\r\n                            placeholder=\"Enter product weight\"\r\n                            feedbackText={errors?.weight?.message}\r\n                            state={\r\n                                hasKey(errors, \"weight\") ? \"error\" : \"success\"\r\n                            }\r\n                            showState={!!hasKey(errors, \"weight\")}\r\n                            {...register(\"weight\", {\r\n                                required: \"Product weight is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb='10px'>\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"amount\">\r\n                            Amount\r\n                        </Label>\r\n                        <Input\r\n                            id=\"amount\"\r\n                            type=\"number\"\r\n                            placeholder=\"Enter product amount\"\r\n                            feedbackText={errors?.amount?.message}\r\n                            state={\r\n                                hasKey(errors, \"amount\") ? \"error\" : \"success\"\r\n                            }\r\n                            showState={!!hasKey(errors, \"amount\")}\r\n                            {...register(\"amount\", {\r\n                                required: \"Product amount is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row sm=\"100\" md=\"100\" lg=\"100\" xl=\"100\">\r\n                    <FormGroup mb='10px'>\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"Description\">\r\n                                Description\r\n                        </Label>\r\n                        <Textarea\r\n                            id=\"description\"\r\n                            feedbackText={errors?.description?.message}\r\n                            state={hasKey(errors, \"description\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"description\")}\r\n                            {...register(\"description\", {\r\n                                required: \"description is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row sm=\"100\" md=\"100\" lg=\"100\" xl=\"100\">\r\n                    <FormGroup mb='20px'>\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"Description\">\r\n                            Images\r\n                        </Label>\r\n\r\n                        <Dropzone setimages={(e:any)=>setimages(e)} photoRef={fileUploadRef} many={true} />\r\n                        <Container>\r\n                            {images.map((one:any)=><Row  sm='10' md='10' lg='5' xl='5'>\r\n                                                    <StyledDropzoneImages src={URL.createObjectURL(one)} />\r\n                                                </Row>\r\n                            )}\r\n                        </Container>\r\n                    </FormGroup>\r\n                </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default Form1","import {useParams} from \"react-router-dom\";\r\nimport {Container, Row, StyledTitle, StyledWrap} from \"../signup-form/style\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {Button, FormGroup} from \"@doar/components\";\r\nimport Form1 from \"../product_forms/form1\";\r\nimport {useRef, useState} from \"react\";\r\nimport StyledTitleComponent from \"../StyledTitleComponent\";\r\n\r\ninterface ParamProps{\r\n    id:string\r\n}\r\n\r\n\r\ninterface IFormValues {\r\n    name: string;\r\n    category: string;\r\n    images: [];\r\n    desc: string;\r\n    price:string,\r\n    price_currency:string,\r\n    weight:number,\r\n    amount:number\r\n}\r\n\r\nlet CreateproductContainer = () =>{\r\n    let {id} = useParams<ParamProps>()\r\n    let [images,setimages] = useState<any>([])\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n    const onSubmit = (data: IFormValues) => {\r\n        console.log(JSON.stringify(data, null));\r\n    };\r\n\r\n    console.log('Id:',id)\r\n    return <StyledWrap>\r\n        <StyledTitleComponent\r\n            title='Create a product'\r\n        />\r\n        <form action=\"#\" onSubmit={handleSubmit(onSubmit)} noValidate>\r\n            <Container>\r\n                <Row sm=\"100\" md=\"100\" lg=\"100\" xl=\"100\">\r\n                    <Form1\r\n                        errors={errors}\r\n                        register={register}\r\n                        images={images}\r\n                        setimages={(e:any)=>setimages(e)}\r\n                    />\r\n\r\n                </Row>\r\n                <Row align='flex-end' >\r\n                    <FormGroup>\r\n                        <Button type=\"submit\" color=\"brand2\" >\r\n                            Save\r\n                        </Button>\r\n                    </FormGroup>\r\n                </Row>\r\n            </Container>\r\n        </form>\r\n    </StyledWrap>\r\n}\r\nexport default CreateproductContainer","import Layout from \"../../layouts\";\r\nimport SEO from \"../../components/seo\";\r\nimport Content from \"../../layouts/content\";\r\nimport CreateproductContainer from \"../../components/product_list/create\";\r\n\r\nconst CreateProduct = ()=>{\r\n    return(\r\n        <Layout>\r\n            <SEO/>\r\n            <Content  fullHeight>\r\n                <CreateproductContainer />\r\n            </Content>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default CreateProduct\r\n"],"sourceRoot":""}