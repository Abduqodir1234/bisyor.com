{"version":3,"sources":["layouts/content/style.tsx","layouts/content/index.tsx","../../shared/images/img15.png","components/signin-form/style.tsx","components/signin-form/index.tsx","containers/signin/style.tsx","containers/signin/index.tsx","pages/signin.tsx"],"names":["conentCSS","css","device","large","xlarge","$fullHeight","$align","borderBottom","borderBottomWidth","themeGet","props","theme","name","space","borderStyle","StyledContent","styled","p","px","py","m","mx","my","mt","rest","Content","children","className","fullHeight","align","restProps","pl","pr","StyledWrap","div","StyledTitle","h3","StyledDesc","StyledLabelWrap","StyledDivider","StyledBottomText","SigninForm","useForm","register","handleSubmit","errors","formState","action","onSubmit","data","alert","JSON","stringify","noValidate","mb","display","htmlFor","type","id","placeholder","feedbackText","email","message","state","hasKey","showState","required","pattern","value","path","fontSize","password","minLength","maxLength","color","fullwidth","variant","StyledMedia","StyledMediaBody","StyledImage","StyledImgText","StyledSignin","AuthContainer","src","loginImage","alt","href","target","rel","SignIn"],"mappings":"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","file":"static/js/38.914c2140.chunk.js","sourcesContent":["import styled, {\n    device,\n    space,\n    border as borderStyle,\n    SpaceProps,\n    BorderProps,\n    css,\n    themeGet,\n} from \"@doar/shared/styled\";\n\ninterface IProps extends SpaceProps, BorderProps {\n    $fullHeight?: boolean;\n    $align: \"top\" | \"center\" | \"bottom\";\n}\n\nconst conentCSS = css<IProps>`\n    padding: 20px;\n    ${device.large} {\n        padding: 25px;\n        margin-top: 60px;\n    }\n    ${device.xlarge} {\n        padding: 30px;\n    }\n    ${({ $fullHeight }) =>\n        $fullHeight &&\n        css`\n            min-height: calc(100vh - 107px);\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n        `}\n\n    ${({ $align }) =>\n        $align &&\n        $align !== \"center\" &&\n        css`\n            & > .container {\n                flex: 1;\n            }\n        `}\n\t${({ borderBottom, borderBottomWidth }) =>\n        (borderBottom || borderBottomWidth) &&\n        css`\n            border-bottom-style: solid;\n            border-bottom-color: ${themeGet(\"colors.border\")};\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            color: ${themeGet(\"colors.gray500\")};\n        `}\n    ${space};\n    ${borderStyle};\n`;\n\nexport const StyledContent = styled(\n    ({\n        p,\n        px,\n        py,\n        m,\n        mx,\n        my,\n        mt,\n        borderBottomWidth,\n        $fullHeight,\n        $align,\n        ...rest\n    }) => <div {...rest} />\n)<IProps>`\n    ${conentCSS}\n`;\n","import React from \"react\";\nimport { SpaceProps, BorderProps } from \"@doar/shared/styled\";\nimport { Container } from \"@doar/components\";\nimport { StyledContent } from \"./style\";\n\ninterface IProps extends SpaceProps, BorderProps {\n    className?: string;\n    fullHeight?: boolean;\n    align?: \"top\" | \"center\" | \"bootom\";\n}\n\nconst Content: React.FC<IProps> = ({\n    children,\n    className,\n    fullHeight,\n    align,\n    ...restProps\n}) => {\n    return (\n        <StyledContent\n            $fullHeight={fullHeight}\n            $align={align}\n            className={className}\n            {...restProps}\n        >\n            <Container className=\"container\" pl=\"0\" pr=\"0\">\n                {children}\n            </Container>\n        </StyledContent>\n    );\n};\n\nexport default Content;\n","export default __webpack_public_path__ + \"static/media/img15.bd1a68d0.png\";","import styled, { themeGet } from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled.div`\n    width: 100%;\n`;\n\nexport const StyledTitle = styled.h3`\n    color: ${themeGet(\"colors.text\")};\n    margin-bottom: 5px;\n`;\n\nexport const StyledDesc = styled.p`\n    font-size: 16px;\n    color: ${themeGet(\"colors.text3\")};\n    margin-bottom: 40px;\n`;\n\nexport const StyledLabelWrap = styled.div`\n    margin-bottom: 5px;\n    justify-content: space-between;\n    display: flex;\n`;\n\nexport const StyledDivider = styled.div`\n    position: relative;\n    display: flex;\n    align-items: center;\n    text-transform: uppercase;\n    color: ${themeGet(\"colors.text3\")};\n    font-size: 10px;\n    font-weight: 500;\n    font-family: ${themeGet(\"fonts.interui\")};\n    letter-spacing: 0.5px;\n    margin: 15px 0;\n    &:after,\n    &:before {\n        content: \"\";\n        display: block;\n        flex: 1;\n        height: 1px;\n        background-color: ${themeGet(\"colors.light\")};\n    }\n    &:before {\n        margin-right: 10px;\n    }\n    &:after {\n        margin-left: 10px;\n    }\n`;\n\nexport const StyledBottomText = styled.div`\n    margin-top: 20px;\n    text-align: center;\n    font-size: 13px;\n`;\n","import { FC } from \"react\";\nimport { FormGroup, Label, Input, Anchor, Button } from \"@doar/components\";\nimport { useForm } from \"react-hook-form\";\nimport { hasKey } from \"@doar/shared/methods\";\nimport {\n    StyledWrap,\n    StyledTitle,\n    StyledDesc,\n    StyledLabelWrap,\n    StyledDivider,\n    StyledBottomText,\n} from \"./style\";\n\ninterface IFormValues {\n    email: string;\n    password: string;\n}\n\nconst SigninForm: FC = () => {\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n\n    const onSubmit = (data: IFormValues) => {\n        alert(JSON.stringify(data, null));\n    };\n    return (\n        <StyledWrap>\n            <StyledTitle>Sign In</StyledTitle>\n            <StyledDesc>Welcome back! Please signin to continue.</StyledDesc>\n            <form action=\"#\" onSubmit={handleSubmit(onSubmit)} noValidate>\n                <FormGroup mb=\"20px\">\n                    <Label display=\"block\" mb=\"5px\" htmlFor=\"email\">\n                        Email address\n                    </Label>\n                    <Input\n                        type=\"email\"\n                        id=\"email\"\n                        placeholder=\"yourname@yourmail.com\"\n                        feedbackText={errors?.email?.message}\n                        state={hasKey(errors, \"email\") ? \"error\" : \"success\"}\n                        showState={!!hasKey(errors, \"email\")}\n                        {...register(\"email\", {\n                            required: \"Email is required\",\n                            pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                                message: \"invalid email address\",\n                            },\n                        })}\n                    />\n                </FormGroup>\n                <FormGroup mb=\"20px\">\n                    <StyledLabelWrap>\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"password\">\n                            Password\n                        </Label>\n                        <Anchor path=\"/forgot-password\" fontSize=\"13px\">\n                            Forgot password?\n                        </Anchor>\n                    </StyledLabelWrap>\n                    <Input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Enter your password\"\n                        feedbackText={errors?.password?.message}\n                        state={hasKey(errors, \"password\") ? \"error\" : \"success\"}\n                        showState={!!hasKey(errors, \"password\")}\n                        {...register(\"password\", {\n                            required: \"Password is required\",\n                            minLength: {\n                                value: 6,\n                                message: \"Minimum length is 6\",\n                            },\n                            maxLength: {\n                                value: 10,\n                                message: \"Minimum length is 10\",\n                            },\n                        })}\n                    />\n                </FormGroup>\n                <Button type=\"submit\" color=\"brand2\" fullwidth>\n                    Sign In\n                </Button>\n                <StyledDivider>or</StyledDivider>\n                <Button variant=\"outlined\" color=\"facebook\" fullwidth>\n                    Sign In With Facebook\n                </Button>\n                <Button\n                    variant=\"outlined\"\n                    color=\"twitter\"\n                    mt=\"0.5rem\"\n                    fullwidth\n                >\n                    Sign In With Twitter\n                </Button>\n                <StyledBottomText>\n                    Don&apos;t have an account?{\" \"}\n                    <Anchor path=\"/signup\">Create an Account</Anchor>\n                </StyledBottomText>\n            </form>\n        </StyledWrap>\n    );\n};\n\nexport default SigninForm;\n","import styled, { device } from \"@doar/shared/styled\";\nimport { Media, MediaBody } from \"@doar/components\";\n\nexport const StyledMedia = styled(({ ...rest }) => <Media {...rest} />)`\n    position: relative;\n    height: 100%;\n    align-items: stretch;\n    justify-content: center;\n`;\n\nexport const StyledMediaBody = styled(({ ...rest }) => <MediaBody {...rest} />)`\n    align-items: center;\n    display: none;\n    ${device.large} {\n        display: flex;\n    }\n`;\n\nexport const StyledImage = styled.div`\n    width: 600px;\n`;\n\nexport const StyledImgText = styled.div`\n    font-size: 12px;\n    text-align: center;\n    left: 0px;\n    bottom: -10px;\n    position: absolute;\n`;\n\nexport const StyledSignin = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 340px;\n    ${device.large} {\n        margin-left: 50px;\n    }\n    ${device.xlarge} {\n        margin-left: 60px;\n        width: 340px;\n    }\n`;\n","import { FC } from \"react\";\nimport loginImage from \"@doar/shared/images/img15.png\";\nimport SigninForm from \"../../components/signin-form\";\nimport {\n    StyledMedia,\n    StyledMediaBody,\n    StyledImage,\n    StyledImgText,\n    StyledSignin,\n} from \"./style\";\n\nconst AuthContainer: FC = () => {\n    return (\n        <StyledMedia>\n            <StyledMediaBody>\n                <StyledImage>\n                    <img src={loginImage} alt=\"Login\" />\n                </StyledImage>\n                <StyledImgText>\n                    Workspace design vector is created by{\" \"}\n                    <a\n                        href=\"https://www.freepik.com/pikisuperstar\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        pikisuperstar (freepik.com)\n                    </a>\n                </StyledImgText>\n            </StyledMediaBody>\n            <StyledSignin>\n                <SigninForm />\n            </StyledSignin>\n        </StyledMedia>\n    );\n};\n\nexport default AuthContainer;\n","import React from \"react\";\nimport Layout from \"../layouts\";\nimport Content from \"../layouts/content\";\nimport AuthContainer from \"../containers/signin\";\nimport SEO from \"../components/seo\";\n\nconst SignIn: React.FC = () => {\n    return (\n        <Layout>\n            <SEO />\n            <Content fullHeight>\n                <AuthContainer />\n            </Content>\n        </Layout>\n    );\n};\n\nexport default SignIn;\n"],"sourceRoot":""}