{"version":3,"sources":["components/signup-form/style.tsx","components/profile_forms/signup1.tsx","../../components/src/apps/contacts/modal-edit/style.tsx","components/apps/contacts/edit-photo-button/style.tsx","components/apps/contacts/edit-photo-button/index.tsx","components/profile_forms/businessInfoForm.tsx","containers/apps/contacts/wrapper/style.tsx","containers/apps/contacts/wrapper/index.tsx","components/scrollbar/style.tsx","components/scrollbar/index.tsx","containers/apps/contacts/main/style.tsx","components/profile_edit/profilePersonalInfoForm.tsx","components/profile_edit/businessInfoForm.tsx","components/profile_edit/styles.tsx","containers/apps/contacts/main/index.tsx","pages/profile/edit.tsx"],"names":["StyledWrap2","styled","div","props","pb","StyledWrap","Container","size","justify","align","InvisibleInput","input","Row","md","sm","lg","xl","StyledTitle","h3","themeGet","StyledDesc","p","StyledDivider","StyledBottomText","Signup1Form","errors","register","mb","display","htmlFor","id","type","placeholder","feedbackText","first_name","message","state","hasKey","showState","required","minLength","value","last_name","phone_number","pattern","email","password","maxLength","confirmation_password","rest","h5","device","small","StyledLeft","StyledAvatar","StyledEditPhoto","button","ContactEditPhoto","ref","onClick","BusinessInfoFormOnly","images","setimages","branch_address","setbranch_address","fileUploadRef","length","src","URL","createObjectURL","bg","fontWeight","current","click","onChange","e","target","files","accept","style","company_name","legal_name","director_name","pl","mt","label","name","description","company_address","website","bank_account","inn","identification_number","nds","oked","delivery_options","hidden","account_type","mfo_bank","map","one","ind","branch","country","handleCountryChange","city","handleCityChange","index","handleZIPChange","address","handleAddressChange","fullwidth","array","splice","removeBranchAddress","color","push","addBranchAddress","StyledWrapper","large","Wrapper","children","top","bottom","css","position","ScrollBar","ProfileEditContainer","xlarge","$showSidebar","$rightSidebar","theme","StyledBody","ProfilePersonalInfoForm","useForm","handleSubmit","formState","action","onSubmit","data","console","log","JSON","stringify","noValidate","ProfileBusinessInfoUpdate","handleChange","useRef","useState","ProfileEditFormsContainer","className","variation","as","pr","ml","profileEdit","hasSidebar","hideFooter","sidebarLayout"],"mappings":"2kFAsBO,IAAMA,EAAcC,IAAOC,IAAV,KAGF,SAAAC,GAAK,OAAEA,EAAMC,MAGtBC,EAAaJ,IAAOC,IAAV,KAIVI,EAAYL,IAAOC,IAAV,KAGX,SAAAC,GAAK,OAAIA,EAAMI,QACH,SAAAJ,GAAK,OAAEA,EAAMK,SAAW,WAC7B,SAAAL,GAAK,OAAEA,EAAMM,OAAS,WAK3BC,EAAiBT,IAAOU,MAAV,KAOdC,EAAMX,IAAOC,IAAV,KACL,SAAAC,GAAK,OAAIA,EAAMU,IAAM,MAEX,SAAAV,GAAK,OAAEA,EAAMK,SAAS,WAC1B,SAAAL,GAAK,OAAEA,EAAMM,OAAS,WAE1B,SAAAN,GAAK,OAAIA,EAAMW,IAAM,OAGrB,SAAAX,GAAK,OAAIA,EAAMW,IAAM,OAGrB,SAAAX,GAAK,OAAIA,EAAMU,IAAM,MAGrB,SAAAV,GAAK,OAAIA,EAAMY,IAAM,MAGrB,SAAAZ,GAAK,OAAIA,EAAMa,IAAM,MASrBC,EAAchB,IAAOiB,GAAV,IACXC,YAAS,gBAEJ,SAAAhB,GAAK,OAAEA,EAAMM,OAAS,WAM3BW,EAAanB,IAAOoB,EAAV,IAEVF,YAAS,iBAUTG,GANkBrB,IAAOC,IAAV,KAMCD,IAAOC,IAAV,IAKbiB,YAAS,gBAGHA,YAAS,iBASAA,YAAS,kBAUxBI,EAAmBtB,IAAOC,IAAV,M,6ECiCdsB,IAlJoB,SAAC,GAAqB,IAAD,YAAnBC,EAAmB,EAAnBA,OAAOC,EAAY,EAAZA,SACxC,OACI,mCACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAKZ,GAAI,IAAKD,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAlC,SACI,eAAC,IAAD,CAAWW,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,aAAxC,uBAGA,cAAC,IAAD,aACIC,GAAG,aACHC,KAAK,OACLC,YAAY,uBACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQS,kBAAV,aAAE,EAAoBC,QAClCC,MACIC,YAAOZ,EAAQ,cAAgB,QAAU,UAE7Ca,YAAaD,YAAOZ,EAAQ,eACxBC,EAAS,aAAc,CACvBa,SAAU,yBACVC,UAAW,CACPC,MAAO,EACPN,QAAS,gCAM7B,cAAC,IAAD,CAAKrB,GAAI,IAAKD,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAlC,SACI,eAAC,IAAD,CAAWW,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,YAAxC,sBAGA,cAAC,IAAD,aACIC,GAAG,YACHC,KAAK,OACLC,YAAY,sBACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQiB,iBAAV,aAAE,EAAmBP,QACjCC,MACIC,YAAOZ,EAAQ,aAAe,QAAU,UAE5Ca,YAAaD,YAAOZ,EAAQ,cACxBC,EAAS,YAAa,CACtBa,SAAU,wBACVC,UAAW,CACPC,MAAO,EACPN,QAAS,gCAM7B,cAAC,IAAD,CAAKrB,GAAI,IAAKD,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAlC,SACI,eAAC,IAAD,CAAWW,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,QAAxC,8BAGA,cAAC,IAAD,aACIC,GAAG,eACHC,KAAK,OACLC,YAAY,8BACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQkB,oBAAV,aAAE,EAAsBR,QACpCC,MAAOC,YAAOZ,EAAQ,gBAAkB,QAAU,UAClDa,YAAaD,YAAOZ,EAAQ,iBACxBC,EAAS,eAAgB,CACzBa,SAAU,+BACVK,QAAS,CACLH,MAAO,6BACPN,QAAS,iCAM7B,cAAC,IAAD,CAAMrB,GAAI,IAAKD,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAnC,SACI,eAAC,IAAD,CAAWW,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,WAAxC,2BAGA,cAAC,IAAD,aACIC,GAAG,QACHC,KAAK,OACLC,YAAY,2BACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQoB,aAAV,aAAE,EAAeV,QAC7BC,MAAOC,YAAOZ,EAAQ,SAAW,QAAU,UAC3Ca,YAAaD,YAAOZ,EAAQ,UACxBC,EAAS,QAAS,CAClBa,SAAU,oBACVK,QAAS,CACLH,MAAO,4CACPN,QAAS,kCAOjC,cAAC,IAAD,CAAKrB,GAAI,IAAKD,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAlC,SACI,eAAC,IAAD,CAAWW,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,QAAxC,sBAGA,cAAC,IAAD,aACIC,GAAG,WACHC,KAAK,WACLC,YAAY,sBACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQqB,gBAAV,aAAE,EAAkBX,QAChCC,MAAOC,YAAOZ,EAAQ,YAAc,QAAU,UAC9Ca,YAAaD,YAAOZ,EAAQ,aACxBC,EAAS,WAAY,CACrBa,SAAU,uBACVC,UAAW,CACPC,MAAO,EACPN,QAAS,uBAEbY,UAAW,CACPN,MAAO,GACPN,QAAS,iCAMzB,cAAC,IAAD,CAAKrB,GAAI,IAAKD,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAlC,SACI,eAAC,IAAD,CAAWW,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,WAAxC,mCAGA,cAAC,IAAD,aACIC,GAAG,wBACHC,KAAK,WACLC,YAAY,mCACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQuB,6BAAV,aAAE,EAA+Bb,QAC7CC,MAAOC,YAAOZ,EAAQ,yBAA2B,QAAU,UAC3Da,YAAaD,YAAOZ,EAAQ,0BACxBC,EAAS,wBAAyB,CAClCa,SAAU,uC,ikCChJXtC,aAAO,gBAAMgD,EAAN,2BAAiB,cAAC,IAAD,eAAgBA,MAAxChD,CAAH,KAMGA,IAAOiD,GAAV,IAGlBC,IAAOC,OAKanD,IAAOoB,EAAV,IAEVF,YAAS,iBAIIlB,IAAOC,IAAV,IACjBiD,IAAOC,OArBN,IA0BMC,EAAapD,IAAOC,IAAV,IACjBiD,IAAOC,OASAE,GAJcrD,IAAOC,IAAV,KAIID,IAAOC,IAAV,M,GAMED,IAAOC,IAAV,K,igBC3CjB,IAAMqD,EAAkBtD,IAAOuD,OAAV,IAUJrC,YAAS,gBACpBA,YAAS,iBCKPsC,EARqC,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,IAAIC,EAAkB,EAAlBA,QAAQ5B,EAAU,EAAVA,KAC9D,OACI,cAACwB,EAAD,CAAiBG,IAAKA,EAAKC,QAASA,EAAS5B,KAAMA,EAAnD,SACI,cAAC,IAAD,O,SCobG6B,IA7aiC,SAAC,GAQ5C,IAAD,4BAPCnC,EAOD,EAPCA,OACAC,EAMD,EANCA,SACAmC,EAKD,EALCA,OACAC,EAID,EAJCA,UACAC,EAGD,EAHCA,eACAC,EAED,EAFCA,kBACAC,EACD,EADCA,cAyCD,OACI,qCACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAACZ,EAAD,UACI,eAACC,EAAD,WACI,cAAC,IAAD,CAAQ/C,KAAK,MAAb,SACqB,IAAhBsD,EAAOK,OAAY,qBAAMC,IAAKC,IAAIC,gBAAgBR,KAC/C,cAAC,IAAD,CAAeS,GAAG,UAAUC,WAAY,IAAxC,iBAMR,cAAC,EAAD,CAAkBxC,KAAK,SAAU4B,QAjBjC,WAAK,IAAD,EACX,OAAbM,QAAa,IAAbA,GAAA,UAAAA,EAAeO,eAAf,SAAwBC,WAiBJ,uBAAOf,IAAKO,EAAeS,SAAU,SAACC,GAAD,OAASb,EAAUa,EAAEC,OAAOC,MAAM,KAAKC,OAAO,UAAU/C,KAAK,OAAOgD,MAAO,CAACnD,QAAQ,mBAKzI,eAAC,IAAD,WACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAWD,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,eAAxC,2BAGA,cAAC,IAAD,aACIC,GAAG,eACHC,KAAK,OACLC,YAAY,0BACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQuD,oBAAV,aAAE,EAAsB7C,QACpCC,MACIC,YAAOZ,EAAQ,gBAAkB,QAAU,UAE/Ca,YAAaD,YAAOZ,EAAQ,iBACxBC,EAAS,eAAgB,CACzBa,SAAU,oCAK1B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWZ,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,aAAxC,wBAGA,cAAC,IAAD,aACIC,GAAG,aACHC,KAAK,OACLC,YAAY,wBACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQwD,kBAAV,aAAE,EAAoB9C,QAClCC,MACIC,YAAOZ,EAAQ,cAAgB,QAAU,UAE7Ca,YAAaD,YAAOZ,EAAQ,eACxBC,EAAS,aAAc,CACvBa,SAAU,kCAK1B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWZ,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,gBAAxC,0CAGA,cAAC,IAAD,aACIC,GAAG,gBACHC,KAAK,OACLC,YAAY,qCACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQyD,qBAAV,aAAE,EAAuB/C,QACrCC,MAAOC,YAAOZ,EAAQ,iBAAmB,QAAU,UACnDa,YAAaD,YAAOZ,EAAQ,kBACxBC,EAAS,gBAAiB,CAC1Ba,SAAU,qCAK1B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWZ,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,OAAOE,QAAQ,gBAAzC,2BAGA,eAAC,IAAD,WACI,cAAC,IAAD,UAAK,cAAC,IAAD,CAAOY,MAAM,aAAa0C,GAAG,OAAOC,GAAG,MAAMC,MAAM,aAAavD,GAAG,aAAawD,KAAK,oBAC1F,cAAC,IAAD,UAAK,cAAC,IAAD,CAAO7C,MAAM,QAAQ4C,MAAM,QAAQD,GAAG,MAAMtD,GAAG,QAAQwD,KAAK,4BAI7E,cAAC,IAAD,CAAKxE,GAAG,MAAMD,GAAG,MAAME,GAAG,MAAMC,GAAG,MAAnC,SACI,eAAC,IAAD,CAAWW,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,cAAxC,yBAGA,cAAC,IAAD,aACIC,GAAG,cACHG,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQ8D,mBAAV,aAAE,EAAqBpD,QACnCC,MAAOC,YAAOZ,EAAQ,eAAiB,QAAU,UACjDa,YAAaD,YAAOZ,EAAQ,gBACxBC,EAAS,cAAe,CACxBa,SAAU,mCAK1B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWZ,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,kBAAxC,6BAGA,cAAC,IAAD,aACIC,GAAG,kBACHC,KAAK,OACLC,YAAY,6BACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQ+D,uBAAV,aAAE,EAAyBrD,QACvCC,MAAOC,YAAOZ,EAAQ,mBAAqB,QAAU,UACrDa,YAAaD,YAAOZ,EAAQ,oBACxBC,EAAS,kBAAmB,CAC5Ba,SAAU,uCAK1B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWZ,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,WAAxC,qBAGA,cAAC,IAAD,aACIC,GAAG,UACHC,KAAK,OACLC,YAAY,qBACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQgE,eAAV,aAAE,EAAiBtD,QAC/BC,MAAOC,YAAOZ,EAAQ,WAAa,QAAU,UAC7Ca,YAAaD,YAAOZ,EAAQ,YACxBC,EAAS,UAAW,CACpBkB,QAAS,CACLH,MAAO,kGACPN,QAAS,wBAM7B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWR,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,eAAxC,0BAGA,cAAC,IAAD,aACIC,GAAG,eACHC,KAAK,OACLC,YAAY,0BACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQiE,oBAAV,aAAE,EAAsBvD,QACpCC,MAAOC,YAAOZ,EAAQ,gBAAkB,QAAU,UAClDa,YAAaD,YAAOZ,EAAQ,iBACxBC,EAAS,eAAgB,CACzBa,SAAU,oCAK1B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWZ,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,MAAxC,iBAGA,cAAC,IAAD,aACIC,GAAG,MACHC,KAAK,OACLC,YAAY,iBACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQkE,WAAV,aAAE,EAAaxD,QAC3BC,MAAOC,YAAOZ,EAAQ,OAAS,QAAU,UACzCa,YAAaD,YAAOZ,EAAQ,QACxBC,EAAS,MAAO,CAChBa,SAAU,2BAK1B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWZ,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,wBAAxC,mCAGA,cAAC,IAAD,aACIC,GAAG,wBACHC,KAAK,OACLC,YAAY,mCACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQmE,6BAAV,aAAE,EAA+BzD,QAC7CC,MAAOC,YAAOZ,EAAQ,yBAA2B,QAAU,UAC3Da,YAAaD,YAAOZ,EAAQ,0BACxBC,EAAS,wBAAyB,CAClCa,SAAU,6CAK1B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWZ,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,MAAxC,iBAGA,cAAC,IAAD,aACIC,GAAG,MACHC,KAAK,OACLC,YAAY,iBACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQoE,WAAV,aAAE,EAAa1D,QAC3BC,MAAOC,YAAOZ,EAAQ,OAAS,QAAU,UACzCa,YAAaD,YAAOZ,EAAQ,QACxBC,EAAS,MAAO,CAChBa,SAAU,2BAM1B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWZ,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,OAAxC,kBAGA,cAAC,IAAD,aACIC,GAAG,OACHC,KAAK,OACLC,YAAY,kBACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQqE,YAAV,aAAE,EAAc3D,QAC5BC,MAAOC,YAAOZ,EAAQ,QAAU,QAAU,UAC1Ca,YAAaD,YAAOZ,EAAQ,SACxBC,EAAS,OAAQ,CACjBa,SAAU,4BAK1B,cAAC,IAAD,UACI,eAAC,IAAD,CAAWZ,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,mBAAxC,8BAGA,cAAC,IAAD,yBACIC,GAAG,mBACHG,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQsE,wBAAV,aAAE,EAA0B5D,QACxCC,MAAOC,YAAOZ,EAAQ,oBAAsB,QAAU,UACtDa,YAAaD,YAAOZ,EAAQ,qBACxBC,EAAS,mBAAoB,CAC7Ba,SAAU,kCANlB,aASI,wBAAQyD,QAAQ,EAAMvD,MAAM,yCAMxC,cAAC,IAAD,UACI,eAAC,IAAD,CAAWd,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,eAAxC,0BAGA,cAAC,IAAD,yBACIC,GAAG,eACHG,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQwE,oBAAV,aAAE,EAAsB9D,QACpCC,MAAOC,YAAOZ,EAAQ,gBAAkB,QAAU,UAClDa,YAAaD,YAAOZ,EAAQ,iBACxBC,EAAS,eAAgB,CACzBa,SAAU,8BANlB,aASI,wBAAQyD,QAAQ,EAAMvD,MAAM,qCAKxC,cAAC,IAAD,UACI,eAAC,IAAD,CAAWd,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,WAAxC,sBAIA,cAAC,IAAD,aACIC,GAAG,WACHC,KAAK,OACLC,YAAY,sBACZC,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQyE,gBAAV,aAAE,EAAkB/D,QAChCC,MAAOC,YAAOZ,EAAQ,YAAc,QAAU,UAC9Ca,YAAaD,YAAOZ,EAAQ,aACxBC,EAAS,WAAY,CACrBa,SAAU,mCAO9B,cAAC,IAAD,6BAECwB,EAAeoC,KAAI,SAACC,EAAQC,GAAT,iBAChB,eAAC,IAAD,WACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAW1E,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,UAAxC,qBAGA,cAAC,IAAD,CACIyD,KAAK,UACLxD,GAAG,UACH4C,SAAU,SAACC,GAAD,OAjVZ,SAACA,EAAM0B,GAC7B,IAAIC,EAAU,YAAOvC,GACrBuC,EAAOD,GAAKE,QAAU5B,EAAEC,OAAOnC,MAC/BuB,EAAkBsC,GA8UqBE,CAAoB7B,EAAE0B,IACrCpE,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQ8E,eAAV,aAAE,EAAiBpE,QAC/BC,MAAOC,YAAOZ,EAAQ,WAAa,QAAU,UAC7Ca,YAAaD,YAAOZ,EAAQ,WANhC,SAQI,wBAAQuE,QAAQ,EAAMvD,MAAM,+BAIxC,cAAC,IAAD,UACI,eAAC,IAAD,CAAWd,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,OAAxC,kBAGA,cAAC,IAAD,CACIyD,KAAK,OACLxD,GAAG,OACH4C,SAAU,SAACC,GAAD,OA7Vf,SAACA,EAAM0B,GAC1B,IAAIC,EAAU,YAAOvC,GACrBuC,EAAOD,GAAKI,KAAO9B,EAAEC,OAAOnC,MAC5BuB,EAAkBsC,GA0VqBI,CAAiB/B,EAAE0B,IAClCpE,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQgF,YAAV,aAAE,EAActE,QAC5BC,MAAOC,YAAOZ,EAAQ,QAAU,QAAU,UAC1Ca,YAAaD,YAAOZ,EAAQ,QANhC,SAQI,wBAAQuE,QAAQ,EAAMvD,MAAM,4BAIxC,cAAC,IAAD,CAAO3B,GAAG,KAAKD,GAAG,KAAKE,GAAG,KAAKC,GAAG,KAAlC,SACI,eAAC,IAAD,CAAWW,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,MAAxC,sBAGA,cAAC,IAAD,CACIyD,KAAK,MACLxD,GAAG,MACHC,KAAK,OACLC,YAAY,sBACZ0C,SAAU,SAACC,GAAD,OAtWhB,SAACA,EAAM0B,GACzB,IAAIC,EAAU,YAAOvC,GACrBuC,EAAOD,GAAKM,MAAQhC,EAAEC,OAAOnC,MAC7BuB,EAAkBsC,GAmWqBM,CAAgBjC,EAAE0B,IACjCpE,aAAY,OAAER,QAAF,IAAEA,GAAF,UAAEA,EAAQkF,aAAV,aAAE,EAAexE,eAIzC,cAAC,IAAD,CAAKrB,GAAG,KAAKD,GAAG,KAAKE,GAAG,KAAKC,GAAG,KAAhC,SACI,eAAC,IAAD,CAAWW,GAAG,OAAd,UACI,cAAC,IAAD,CAAOC,QAAQ,QAAQD,GAAG,MAAME,QAAQ,UAAxC,qBAGA,cAAC,IAAD,CACIyD,KAAK,UACLxD,GAAG,UACHC,KAAK,OACLC,YAAY,qBACZ0C,SAAU,SAACC,GAAD,OA1XZ,SAACA,EAAM0B,GAC7B,IAAIC,EAAU,YAAOvC,GACrBuC,EAAOD,GAAKQ,QAAUlC,EAAEC,OAAOnC,MAC/BuB,EAAkBsC,GAuXqBQ,CAAoBnC,EAAE0B,WAIjD,cAAC,IAAD,CAAK5F,MAAM,MAAMD,QAAQ,gBAAgBM,GAAG,KAAKD,GAAG,KAAKE,GAAG,IAAIC,GAAG,IAAnE,SACI,cAAC,IAAD,CAAQ+F,WAAS,EAACpD,QAAS,kBArXrB,SAAC0C,GACvB,IAAIW,EAAK,YAAOjD,GAChBiD,EAAMC,OAAOZ,EAAI,EAAE,GACnBrC,EAAkBgD,GAkX6BE,CAAoBb,IAAOc,MAAM,SAAS/B,GAAG,OAA5E,6BAIZ,eAAC,IAAD,WACI,cAAC,IAAD,CAAKtE,GAAG,MAAMD,GAAG,MAAME,GAAG,MAAMC,GAAG,MAAnC,SACI,cAAC,IAAD,CAASe,KAAK,SAAS4B,QAAS,kBAzZzB,WACnB,IAAIqD,EAAK,YAAOjD,GAChBiD,EAAMI,KAAK,CACPb,QAAQ,GACRE,KAAK,GACLE,MAAM,GACNE,QAAQ,KAEZ7C,EAAkBgD,GAiZ8BK,IAAoBF,MAAM,SAASJ,WAAS,EAAhF,mBAIJ,cAAC,IAAD,CAAKjG,GAAG,MAAMD,GAAG,MAAME,GAAG,MAAMC,GAAG,MAAnC,SACI,iC,0QCzbb,IAAMsG,EAAgBrH,IAAOC,IAAV,IAMpBiD,IAAOoE,OCDEC,EAJK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,cAACH,EAAD,UAAgBG,K,09CCFpB,IAAMpH,EAAaJ,aAAO,cAAGyH,IAAH,EAAQC,OAAR,IAAmB1E,EAAnB,uCAC7B,mCAASA,MADahD,CAAH,KAKjB,gBAAG0H,EAAH,EAAGA,OAAH,QACIA,GACFC,YADA,IAE0BD,KAqDxBE,KCjDKC,EARsB,SAAC,GAA2B,IAAzBL,EAAwB,EAAxBA,SAAaxE,EAAW,4BAC5D,OACI,cAAC5C,EAAD,2BAAgB4C,GAAhB,aACI,cAAC,IAAD,UAAmBwE,Q,uuJCDxB,IAAMM,EAAuB9H,IAAOC,IAAV,IAQ3BiD,IAAOoE,MAGPpE,IAAO6E,QAEP,qBAAGC,cAELL,YADY,QAOV,qBAAGM,eAELN,YADa,QAOX,SAACzH,GAAD,MACmB,SAArBA,EAAMgI,MAAM7C,MACZsC,YADA,IAE4BzG,YAAS,0BA8C5BiH,GA1CanI,IAAOC,IAAV,IAQjBiD,IAAOoE,MAIPpE,IAAO6E,QAGP,qBAAGC,cAEDL,YADY,QAOd,qBAAGM,eAEDN,YADa,QAOf,SAACzH,GAAD,MACuB,SAArBA,EAAMgI,MAAM7C,MACZsC,YADA,IAEwBzG,YAAS,0BAQflB,IAAOC,IAAV,KAOjB,SAACC,GAAD,MACuB,SAArBA,EAAMgI,MAAM7C,MACZsC,YADA,IAEwBzG,YAAS,0BAQ3B,SAAChB,GAAD,MACuB,SAArBA,EAAMgI,MAAM7C,MACZsC,YADA,IAEwBzG,YAAS,yBAI5BA,YAAS,gBAQLA,YAAS,mBAUpB,SAAChB,GAAD,MACuB,SAArBA,EAAMgI,MAAM7C,MACZsC,YADA,OAOFzE,IAAO6E,OAUP7E,IAAOoE,MAIHpE,IAAO6E,QAIX,SAAC7H,GAAD,MACuB,SAArBA,EAAMgI,MAAM7C,MACZsC,YADA,IAKqBzG,YAAS,kBAGLA,YAAS,uB,GASrBlB,IAAOC,IAAV,IAMGiB,YAAS,iBAGhCgC,IAAO6E,QAIP,SAAC7H,GAAD,MACuB,SAArBA,EAAMgI,MAAM7C,MACZsC,YADA,IAEwBzG,YAAS,sBACpBA,YAAS,sBAIElB,IAAOuD,OAAV,IAKhBrC,YAAS,kBAChBgC,IAAO6E,OAKI7G,YAAS,sB,0BC5IXkH,EAjCkC,WAAO,IAAD,EAK/CC,cAHA5G,EAF+C,EAE/CA,SACA6G,EAH+C,EAG/CA,aACa9G,EAJkC,EAI/C+G,UAAa/G,OAOjB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,wCACA,cAAC,IAAD,IAGA,uBAAMgH,OAAO,IAAIC,SAAUH,GAVlB,SAACI,GACdC,QAAQC,IAAIC,KAAKC,UAAUJ,EAAM,UASsBK,YAAU,EAA7D,UACI,cAAC,IAAD,CAAatH,SAAUA,EAAUD,OAAQA,IACzC,cAAC,IAAD,UACI,cAAC,IAAD,CAAKX,GAAG,MAAMD,GAAG,MAAME,GAAG,MAAMC,GAAG,MAAnC,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAQe,KAAK,SAASoF,MAAM,SAASJ,WAAS,EAA9C,iC,wBC6DbkC,EAhD0C,SAAC,GAAiB,EAAhBC,aAAiB,IACpEjF,EAAgBkF,iBAAyB,MAD0B,EAE9CC,mBAAc,IAFgC,mBAElEvF,EAFkE,KAE3DC,EAF2D,OAOnEwE,cAHA5G,EAJmE,EAInEA,SACA6G,EALmE,EAKnEA,aACa9G,EANsD,EAMnE+G,UAAa/G,OANsD,EAQ9B2H,mBAAS,CAAC,CAC/C7C,QAAQ,GACRE,KAAK,GACLE,MAAM,GACNE,QAAQ,MAZ2D,mBAQlE9C,EARkE,KAQnDC,EARmD,KAoBvE,OACI,eAAC,IAAD,WACI,cAAC,IAAD,sCAEA,uBAAMyE,OAAO,IAAIC,SAAUH,GARlB,SAACI,GACdC,QAAQC,IAAIF,MAO2CK,YAAU,EAA7D,UACI,cAAC,IAAD,CACIvH,OAAQA,EACRC,SAAUA,EACVmC,OAAQA,EACRC,UAAW,SAACa,GAAD,OAASb,EAAUa,IAC9BZ,eAAgBA,EAChBC,kBAAmB,SAACW,GAAD,OAASX,EAAkBW,IAC9CV,cAAeA,IAEnB,cAAC,IAAD,UAEI,cAAC,IAAD,CAAKnD,GAAG,MAAMD,GAAG,MAAME,GAAG,MAAMC,GAAG,MAAnC,SACI,cAAC,IAAD,CAAQe,KAAK,SAASoF,MAAM,SAASJ,WAAS,EAA9C,+B,qWCtGjB,IAAMsC,E,OAA4BpJ,EAAOC,IAAV,KC8EvBsH,EA1DK,WAChB,OACI,cAACO,EAAD,CACIuB,UAAU,eACVrB,cAAc,EACdC,eAAe,EAHnB,SAKI,cAACE,EAAD,UACI,eAAC,IAAD,CAASmB,UAAU,OAAnB,UACI,eAAC,IAAD,WACI,eAAC,IAAD,0BAEI,cAAC,IAAD,CACIC,GAAG,OACH5H,QAAS,CAAC,OAAQ,UAClB6H,GAAG,MAHP,wBAWJ,eAAC,IAAD,sBAEI,cAAC,IAAD,CACID,GAAG,OACH5H,QAAS,CAAC,OAAQ,UAClB6H,GAAG,MACHC,GAAG,MAJP,wBAYR,cAAC,IAAD,UACI,eAAC,EAAD,CAAWhC,IAAI,IAAf,UACI,cAAC,IAAD,UACI,cAAC2B,EAAD,UACI,cAAC,EAAD,QAGR,cAAC,IAAD,UACI,cAACA,EAAD,UACI,cAAC,EAAD,qB,SClDrBM,UAXS,WACpB,OACI,eAAC,IAAD,CAASC,YAAU,EAACC,YAAU,EAACC,cAAe,EAA9C,UACI,cAAC,IAAD,IACA,cAAC,EAAD,UACI,cAAC,EAAD","file":"static/js/12.288858e4.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport styled, { themeGet } from \"@doar/shared/styled\";\r\n\r\ninterface RowProps{\r\n    md?:string | number,\r\n    sm?:string| number,\r\n    lg?:string| number,\r\n    xl?:string| number,\r\n    align?:string| number,\r\n    justify?:string| number,\r\n}\r\n\r\ninterface StyledWrap2Props{\r\n    pb?:string\r\n}\r\n\r\n\r\ninterface ContainerProps{\r\n    size?:number\r\n    justify?:string,\r\n    align?:string\r\n}\r\nexport const StyledWrap2 = styled.div<StyledWrap2Props>`\r\n    width: 100%;\r\n    padding-top: 20px;\r\n    padding-bottom: ${props=>props.pb};\r\n`;\r\n\r\nexport const StyledWrap = styled.div`\r\n    width: 100%;\r\n    padding-top: 20px;\r\n`;\r\nexport const Container = styled.div<ContainerProps>`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    flex:${props => props.size};\r\n    justify-content: ${props=>props.justify || 'unset'};\r\n    align-items:${props=>props.align || 'unset'} ;\r\n`;\r\n\r\n\r\n\r\nexport const InvisibleInput = styled.input`\r\n  display: none;\r\n`;\r\n\r\n\r\n\r\n\r\nexport const Row = styled.div<RowProps>`\r\n  width: ${props => props.md || 50}%;\r\n  padding-right: 10px;\r\n  justify-content: ${props=>props.justify||'unset'};\r\n  align-items: ${props=>props.align || 'unset'};\r\n  @media screen and (max-width:576px){\r\n    width: ${props => props.sm || 100}%;\r\n  }\r\n  @media screen and (max-width:768px) and (min-width: 576px){\r\n    width: ${props => props.sm || 100}%;\r\n  }\r\n  @media screen and (max-width:992px) and (min-width: 768px){\r\n    width: ${props => props.md || 50}%;\r\n  }\r\n  @media screen and (max-width:1200px) and (min-width: 992px){\r\n    width: ${props => props.lg || 50}%;\r\n  }\r\n  @media screen and (min-width: 1200px){\r\n    width: ${props => props.xl || 50}%;\r\n  }\r\n  \r\n`;\r\n\r\n\r\ninterface StyledTitleProps{\r\n    align?:string\r\n}\r\nexport const StyledTitle = styled.h3<StyledTitleProps>`\r\n    color: ${themeGet(\"colors.text\")};\r\n    margin-bottom: 5px;\r\n    text-align: ${props=>props.align || 'unset'};\r\n`;\r\n\r\n\r\n\r\n\r\nexport const StyledDesc = styled.p`\r\n    font-size: 16px;\r\n    color: ${themeGet(\"colors.text3\")};\r\n    margin-bottom: 40px;\r\n`;\r\n\r\nexport const StyledLabelWrap = styled.div`\r\n    margin-bottom: 5px;\r\n    justify-content: space-between;\r\n    display: flex;\r\n`;\r\n\r\nexport const StyledDivider = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    text-transform: uppercase;\r\n    color: ${themeGet(\"colors.text3\")};\r\n    font-size: 10px;\r\n    font-weight: 500;\r\n    font-family: ${themeGet(\"fonts.interui\")};\r\n    letter-spacing: 0.5px;\r\n    margin: 15px 0;\r\n    &:after,\r\n    &:before {\r\n        content: \"\";\r\n        display: block;\r\n        flex: 1;\r\n        height: 1px;\r\n        background-color: ${themeGet(\"colors.light\")};\r\n    }\r\n    &:before {\r\n        margin-right: 10px;\r\n    }\r\n    &:after {\r\n        margin-left: 10px;\r\n    }\r\n`;\r\n\r\nexport const StyledBottomText = styled.div`\r\n    margin-top: 20px;\r\n    text-align: center;\r\n    font-size: 13px;\r\n`;\r\n","import {Container, Row} from \"../signup-form/style\";\r\nimport {FormGroup, Input, Label} from \"@doar/components\";\r\nimport {hasKey} from \"@doar/shared/dist/methods\";\r\nimport {FC} from \"react\";\r\ninterface Signup1Props{\r\n    errors?:any,\r\n    register?:any\r\n}\r\n\r\n\r\n\r\nlet Signup1Form:FC<Signup1Props> = ({errors,register})=>{\r\n    return(\r\n        <>\r\n        <Container>\r\n            <Row sm={100} md={50} lg={50} xl={50} >\r\n                <FormGroup mb=\"20px\">\r\n                    <Label display=\"block\" mb=\"5px\" htmlFor=\"first_name\">\r\n                        Firstname\r\n                    </Label>\r\n                    <Input\r\n                        id=\"first_name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your firstname\"\r\n                        feedbackText={errors?.first_name?.message}\r\n                        state={\r\n                            hasKey(errors, \"first_name\") ? \"error\" : \"success\"\r\n                        }\r\n                        showState={!!hasKey(errors, \"first_name\")}\r\n                        {...register(\"first_name\", {\r\n                            required: \"First Name is required\",\r\n                            minLength: {\r\n                                value: 2,\r\n                                message: \"Minimum length is 2\",\r\n                            },\r\n                        })}\r\n                    />\r\n                </FormGroup>\r\n            </Row>\r\n            <Row sm={100} md={50} lg={50} xl={50}>\r\n                <FormGroup mb=\"20px\">\r\n                    <Label display=\"block\" mb=\"5px\" htmlFor=\"last_name\">\r\n                        Lastname\r\n                    </Label>\r\n                    <Input\r\n                        id=\"last_name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your Lastname\"\r\n                        feedbackText={errors?.last_name?.message}\r\n                        state={\r\n                            hasKey(errors, \"last_name\") ? \"error\" : \"success\"\r\n                        }\r\n                        showState={!!hasKey(errors, \"last_name\")}\r\n                        {...register(\"last_name\", {\r\n                            required: \"Last Name is required\",\r\n                            minLength: {\r\n                                value: 2,\r\n                                message: \"Minimum length is 2\",\r\n                            },\r\n                        })}\r\n                    />\r\n                </FormGroup>\r\n            </Row>\r\n            <Row sm={100} md={50} lg={50} xl={50}>\r\n                <FormGroup mb=\"20px\" >\r\n                    <Label display=\"block\" mb=\"5px\" htmlFor=\"email\">\r\n                        Telephone Number\r\n                    </Label>\r\n                    <Input\r\n                        id=\"phone_number\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your telephone number\"\r\n                        feedbackText={errors?.phone_number?.message}\r\n                        state={hasKey(errors, \"phone_number\") ? \"error\" : \"success\"}\r\n                        showState={!!hasKey(errors, \"phone_number\")}\r\n                        {...register(\"phone_number\", {\r\n                            required: \"Telephone number is required\",\r\n                            pattern: {\r\n                                value: /[+998]{3}[0-9]{2}[0-9]{8}/i,\r\n                                message: \"invalid phone number\",\r\n                            },\r\n                        })}\r\n                    />\r\n                </FormGroup>\r\n            </Row>\r\n            <Row  sm={100} md={50} lg={50} xl={50}>\r\n                <FormGroup mb=\"20px\">\r\n                    <Label display=\"block\" mb=\"5px\" htmlFor=\"password\">\r\n                        Company Email\r\n                    </Label>\r\n                    <Input\r\n                        id=\"email\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter your email address\"\r\n                        feedbackText={errors?.email?.message}\r\n                        state={hasKey(errors, \"email\") ? \"error\" : \"success\"}\r\n                        showState={!!hasKey(errors, \"email\")}\r\n                        {...register(\"email\", {\r\n                            required: \"Email is required\",\r\n                            pattern: {\r\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                message: \"invalid email address\",\r\n                            },\r\n                        })}\r\n                    />\r\n                </FormGroup>\r\n\r\n        </Row>\r\n        <Row sm={100} md={50} lg={50} xl={50}>\r\n            <FormGroup mb=\"20px\" >\r\n                <Label display=\"block\" mb=\"5px\" htmlFor=\"email\">\r\n                    Password\r\n                </Label>\r\n                <Input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    feedbackText={errors?.password?.message}\r\n                    state={hasKey(errors, \"password\") ? \"error\" : \"success\"}\r\n                    showState={!!hasKey(errors, \"password\")}\r\n                    {...register(\"password\", {\r\n                        required: \"Password is required\",\r\n                        minLength: {\r\n                            value: 6,\r\n                            message: \"Minimum length is 6\",\r\n                        },\r\n                        maxLength: {\r\n                            value: 10,\r\n                            message: \"Minimum length is 10\",\r\n                        },\r\n                    })}\r\n                />\r\n            </FormGroup>\r\n            </Row>\r\n            <Row sm={100} md={50} lg={50} xl={50}>\r\n                <FormGroup mb=\"20px\">\r\n                    <Label display=\"block\" mb=\"5px\" htmlFor=\"password\">\r\n                        Confirmation Password\r\n                    </Label>\r\n                    <Input\r\n                        id=\"confirmation_password\"\r\n                        type=\"password\"\r\n                        placeholder=\"Enter your confirmation_password\"\r\n                        feedbackText={errors?.confirmation_password?.message}\r\n                        state={hasKey(errors, \"confirmation_password\") ? \"error\" : \"success\"}\r\n                        showState={!!hasKey(errors, \"confirmation_password\")}\r\n                        {...register(\"confirmation_password\", {\r\n                            required: \"Password is required\",\r\n                        })}\r\n                    />\r\n                </FormGroup>\r\n            </Row>\r\n        </Container>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Signup1Form;","import styled, { device, themeGet } from \"@doar/shared/styled\";\nimport { ModalClose } from \"@doar/components\";\n\nexport const StyledClose = styled(({ ...rest }) => <ModalClose {...rest} />)`\n    position: absolute;\n    top: 15px;\n    right: 20px;\n`;\n\nexport const StyledTitle = styled.h5`\n    font-size: 18px;\n    margin-bottom: 20px;\n    ${device.small} {\n        font-size: 20px;\n    }\n`;\n\nexport const StyledDesc = styled.p`\n    font-size: 13px;\n    color: ${themeGet(\"colros.text3\")};\n    margin-bottom: 30px;\n`;\n\nexport const StyledWrap = styled.div`\n    ${device.small} {\n        display: flex;\n    }\n`;\n\nexport const StyledLeft = styled.div`\n    ${device.small} {\n        margin-right: 30px;\n    }\n`;\n\nexport const StyledRight = styled.div`\n    flex: 1 1 auto;\n`;\n\nexport const StyledAvatar = styled.div`\n    position: relative;\n    margin-bottom: 20px;\n    display: inline-block;\n`;\n\nexport const StyledGroup = styled.div`\n    margin-bottom: 10px;\n`;\n","import styled, { themeGet } from \"@doar/shared/styled\";\n\nexport const StyledEditPhoto = styled.button`\n    background-color: transparent;\n    border: none;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-shrink: 0;\n    width: 24px;\n    height: 24px;\n    background-color: ${themeGet(\"colors.light\")};\n    color: ${themeGet(\"colors.text3\")};\n    border-radius: 100%;\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    box-shadow: 0 0 0 3px #fff;\n    svg {\n        width: 12px;\n        stroke-width: 3px;\n    }\n`;\n","import { FC } from \"react\";\nimport { Edit2 } from \"react-feather\";\nimport { StyledEditPhoto } from \"./style\";\n\ninterface ContactEditPhotoProps{\n    ref?:any\n    onClick?:any,\n    type?:'button' |'submit'| 'reset'\n}\n\nconst ContactEditPhoto: FC<ContactEditPhotoProps> = ({ref,onClick,type}) => {\n    return (\n        <StyledEditPhoto ref={ref} onClick={onClick} type={type}>\n            <Edit2 />\n        </StyledEditPhoto>\n    );\n};\n\nexport default ContactEditPhoto;\n","import {Container, Row, StyledDivider} from \"../signup-form/style\";\r\nimport {StyledAvatar, StyledLeft} from \"@doar/components/src/apps/contacts/modal-edit/style\";\r\nimport {Avatar, AvatarInitial, Button, FormGroup, Input, Label, Radio, Select, Textarea} from \"@doar/components\";\r\nimport ContactEditPhoto from \"../apps/contacts/edit-photo-button\";\r\nimport {hasKey} from \"@doar/shared/dist/methods/index\";\r\nimport {FC} from \"react\";\r\n\r\n\r\ninterface BusinessInfoForm{\r\n    errors:any,\r\n    register:any,\r\n    images:any,\r\n    setimages:any,\r\n    branch_address:any,\r\n    setbranch_address:any,\r\n    fileUploadRef:any\r\n\r\n}\r\n\r\n\r\nlet BusinessInfoFormOnly:FC<BusinessInfoForm> = ({\r\n     errors,\r\n     register,\r\n     images,\r\n     setimages,\r\n     branch_address,\r\n     setbranch_address,\r\n     fileUploadRef\r\n})=>{\r\n    let addBranchAddress = ()=>{\r\n        let array = [...branch_address]\r\n        array.push({\r\n            country:\"\",\r\n            city:\"\",\r\n            index:\"\",\r\n            address:\"\"\r\n        })\r\n        setbranch_address(array)\r\n    }\r\n    let handleCountryChange = (e:any,ind:any)=>{\r\n        let branch:any = [...branch_address]\r\n        branch[ind].country = e.target.value\r\n        setbranch_address(branch)\r\n    }\r\n    let handleCityChange = (e:any,ind:any)=>{\r\n        let branch:any = [...branch_address]\r\n        branch[ind].city = e.target.value\r\n        setbranch_address(branch)\r\n    }\r\n    let handleAddressChange = (e:any,ind:any)=>{\r\n        let branch:any = [...branch_address]\r\n        branch[ind].address = e.target.value\r\n        setbranch_address(branch)\r\n    }\r\n    let handleZIPChange = (e:any,ind:any)=>{\r\n        let branch:any = [...branch_address]\r\n        branch[ind].index = e.target.value\r\n        setbranch_address(branch)\r\n    }\r\n    let removeBranchAddress = (ind:number)=>{\r\n        let array = [...branch_address]\r\n        array.splice(ind-1,1)\r\n        setbranch_address(array)\r\n    }\r\n\r\n    let handleButtonClick = ()=>{\r\n        fileUploadRef?.current?.click()\r\n    }\r\n    return(\r\n        <>\r\n            <Container>\r\n                <Row>\r\n                    <StyledLeft>\r\n                        <StyledAvatar>\r\n                            <Avatar size='xxl'>\r\n                                {images.length!==0 ?<img  src={URL.createObjectURL(images)}/>:\r\n                                    <AvatarInitial bg=\"gray700\" fontWeight={400}>\r\n                                        A\r\n                                    </AvatarInitial>\r\n                                }\r\n                            </Avatar>\r\n\r\n                            <ContactEditPhoto type='button'  onClick={handleButtonClick} />\r\n                            <input ref={fileUploadRef} onChange={(e:any)=>setimages(e.target.files[0])} accept='image/*' type='file' style={{display:'none'}}/>\r\n                        </StyledAvatar>\r\n                    </StyledLeft>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    <FormGroup mb=\"20px\">\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"company_name\">\r\n                            Business name\r\n                        </Label>\r\n                        <Input\r\n                            id=\"company_name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your company name\"\r\n                            feedbackText={errors?.company_name?.message}\r\n                            state={\r\n                                hasKey(errors, \"company_name\") ? \"error\" : \"success\"\r\n                            }\r\n                            showState={!!hasKey(errors, \"company_name\")}\r\n                            {...register(\"company_name\", {\r\n                                required: \"Company Name is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb=\"20px\">\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"legal_name\">\r\n                            Legal name\r\n                        </Label>\r\n                        <Input\r\n                            id=\"legal_name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your legal name\"\r\n                            feedbackText={errors?.legal_name?.message}\r\n                            state={\r\n                                hasKey(errors, \"legal_name\") ? \"error\" : \"success\"\r\n                            }\r\n                            showState={!!hasKey(errors, \"legal_name\")}\r\n                            {...register(\"legal_name\", {\r\n                                required: \"Legal Name is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb=\"20px\" >\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"director_name\">\r\n                            Name of chairman of business\r\n                        </Label>\r\n                        <Input\r\n                            id=\"director_name\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter name of chairman of business\"\r\n                            feedbackText={errors?.director_name?.message}\r\n                            state={hasKey(errors, \"director_name\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"director_name\")}\r\n                            {...register(\"director_name\", {\r\n                                required: \"director name is required\"\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb=\"15px\">\r\n                        <Label display=\"block\" mb=\"20px\" htmlFor=\"business_type\">\r\n                            Business type\r\n                        </Label>\r\n                        <Container>\r\n                            <Row><Radio value='Individual' pl='1rem' mt=\"8px\" label='Individual' id='Individual' name='business_type'/></Row>\r\n                            <Row><Radio value='Other' label='Other' mt=\"8px\" id='Other' name='business_type'/></Row>\r\n                        </Container>\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row sm=\"100\" md=\"100\" lg=\"100\" xl=\"100\">\r\n                    <FormGroup mb='20px'>\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"description\">\r\n                            Description\r\n                        </Label>\r\n                        <Textarea\r\n                            id=\"description\"\r\n                            feedbackText={errors?.description?.message}\r\n                            state={hasKey(errors, \"description\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"description\")}\r\n                            {...register(\"description\", {\r\n                                required: \"description is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb=\"20px\" >\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"company_address\">\r\n                            Company Address\r\n                        </Label>\r\n                        <Input\r\n                            id=\"company_address\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your company address\"\r\n                            feedbackText={errors?.company_address?.message}\r\n                            state={hasKey(errors, \"company_address\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"company_address\")}\r\n                            {...register(\"company_address\", {\r\n                                required: \"company address is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb=\"20px\">\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"password\">\r\n                            Website\r\n                        </Label>\r\n                        <Input\r\n                            id=\"website\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your website\"\r\n                            feedbackText={errors?.website?.message}\r\n                            state={hasKey(errors, \"website\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"website\")}\r\n                            {...register(\"website\", {\r\n                                pattern: {\r\n                                    value: /[(http(s)?):\\/\\/(www\\.)?a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/i,\r\n                                    message: \"invalid url\",\r\n                                },\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb=\"20px\" >\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"bank_account\">\r\n                            Bank account\r\n                        </Label>\r\n                        <Input\r\n                            id=\"bank_account\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your bank account\"\r\n                            feedbackText={errors?.bank_account?.message}\r\n                            state={hasKey(errors, \"bank_account\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"bank_account\")}\r\n                            {...register(\"bank_account\", {\r\n                                required: \"bank account is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb=\"20px\" >\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"inn\">\r\n                            INN\r\n                        </Label>\r\n                        <Input\r\n                            id=\"inn\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your INN\"\r\n                            feedbackText={errors?.inn?.message}\r\n                            state={hasKey(errors, \"inn\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"inn\")}\r\n                            {...register(\"inn\", {\r\n                                required: \"INN is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb=\"20px\" >\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"identification_number\">\r\n                            Identification number\r\n                        </Label>\r\n                        <Input\r\n                            id=\"identification_number\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your Identification number\"\r\n                            feedbackText={errors?.identification_number?.message}\r\n                            state={hasKey(errors, \"identification_number\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"identification_number\")}\r\n                            {...register(\"identification_number\", {\r\n                                required: \"Identification number is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb=\"20px\" >\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"nds\">\r\n                            NDS\r\n                        </Label>\r\n                        <Input\r\n                            id=\"nds\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your NDS\"\r\n                            feedbackText={errors?.nds?.message}\r\n                            state={hasKey(errors, \"nds\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"nds\")}\r\n                            {...register(\"nds\", {\r\n                                required: \"NDS is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <FormGroup mb=\"20px\" >\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"oked\">\r\n                            OKED\r\n                        </Label>\r\n                        <Input\r\n                            id=\"oked\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your OKED\"\r\n                            feedbackText={errors?.oked?.message}\r\n                            state={hasKey(errors, \"oked\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"oked\")}\r\n                            {...register(\"oked\", {\r\n                                required: \"OKED is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb=\"20px\" >\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"delivery_options\">\r\n                            Delivery Options\r\n                        </Label>\r\n                        <Select\r\n                            id='delivery_options'\r\n                            feedbackText={errors?.delivery_options?.message}\r\n                            state={hasKey(errors, \"delivery_options\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"delivery_options\")}\r\n                            {...register(\"delivery_options\", {\r\n                                required: \"Delivery Options is required\",\r\n                            })}\r\n                        >\r\n                            <option hidden={true} value='Delivery Options is required'></option>\r\n                        </Select>\r\n\r\n                    </FormGroup>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <FormGroup mb=\"20px\" >\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"account_type\">\r\n                            Account type\r\n                        </Label>\r\n                        <Select\r\n                            id='account_type'\r\n                            feedbackText={errors?.account_type?.message}\r\n                            state={hasKey(errors, \"account_type\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"account_type\")}\r\n                            {...register(\"account_type\", {\r\n                                required: \"account_type is required\",\r\n                            })}\r\n                        >\r\n                            <option hidden={true} value='account_type is required'></option>\r\n                        </Select>\r\n\r\n                    </FormGroup>\r\n                </Row>\r\n                <Row>\r\n                    <FormGroup mb=\"20px\" >\r\n                        <Label display=\"block\" mb=\"5px\" htmlFor=\"mfo_bank\">\r\n                            MFO bank\r\n\r\n                        </Label>\r\n                        <Input\r\n                            id=\"mfo_bank\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter your MFO bank\"\r\n                            feedbackText={errors?.mfo_bank?.message}\r\n                            state={hasKey(errors, \"mfo_bank\") ? \"error\" : \"success\"}\r\n                            showState={!!hasKey(errors, \"mfo_bank\")}\r\n                            {...register(\"mfo_bank\", {\r\n                                required: \"MFO bank is required\",\r\n                            })}\r\n                        />\r\n                    </FormGroup>\r\n                </Row>\r\n\r\n            </Container>\r\n            <StyledDivider>Branch Address</StyledDivider>\r\n\r\n            {branch_address.map((one:any,ind:any)=>(\r\n                <Container>\r\n                    <Row>\r\n                        <FormGroup mb=\"20px\" >\r\n                            <Label display=\"block\" mb=\"5px\" htmlFor=\"country\">\r\n                                Country\r\n                            </Label>\r\n                            <Select\r\n                                name='country'\r\n                                id='country'\r\n                                onChange={(e)=>handleCountryChange(e,ind)}\r\n                                feedbackText={errors?.country?.message}\r\n                                state={hasKey(errors, \"country\") ? \"error\" : \"success\"}\r\n                                showState={!!hasKey(errors, \"country\")}\r\n                            >\r\n                                <option hidden={true} value='country is required'></option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Row>\r\n                    <Row>\r\n                        <FormGroup mb=\"20px\" >\r\n                            <Label display=\"block\" mb=\"5px\" htmlFor=\"city\">\r\n                                City\r\n                            </Label>\r\n                            <Select\r\n                                name='city'\r\n                                id='city'\r\n                                onChange={(e)=>handleCityChange(e,ind)}\r\n                                feedbackText={errors?.city?.message}\r\n                                state={hasKey(errors, \"city\") ? \"error\" : \"success\"}\r\n                                showState={!!hasKey(errors, \"city\")}\r\n                            >\r\n                                <option hidden={true} value='city is required'></option>\r\n                            </Select>\r\n                        </FormGroup>\r\n                    </Row>\r\n                    <Row   sm=\"40\" md=\"45\" lg=\"46\" xl=\"46\">\r\n                        <FormGroup mb=\"20px\" >\r\n                            <Label display=\"block\" mb=\"5px\" htmlFor=\"zip\">\r\n                                ZIP code\r\n                            </Label>\r\n                            <Input\r\n                                name=\"zip\"\r\n                                id=\"zip\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter your ZIP code\"\r\n                                onChange={(e)=>handleZIPChange(e,ind)}\r\n                                feedbackText={errors?.index?.message}\r\n                            />\r\n                        </FormGroup>\r\n                    </Row>\r\n                    <Row sm=\"40\" md=\"45\" lg=\"46\" xl=\"46\">\r\n                        <FormGroup mb=\"20px\" >\r\n                            <Label display=\"block\" mb=\"5px\" htmlFor=\"address\">\r\n                                Address\r\n                            </Label>\r\n                            <Input\r\n                                name=\"address\"\r\n                                id=\"address\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter your address\"\r\n                                onChange={(e)=>handleAddressChange(e,ind)}\r\n                            />\r\n                        </FormGroup>\r\n                    </Row>\r\n                    <Row align='end' justify='space-between' sm=\"20\" md=\"10\" lg=\"8\" xl=\"8\" >\r\n                        <Button fullwidth onClick={()=>removeBranchAddress(ind)}  color='danger' mt=\"20px\" > Delete</Button>\r\n                    </Row>\r\n                </Container>\r\n            ))}\r\n            <Container>\r\n                <Row sm=\"100\" md=\"100\" lg=\"100\" xl=\"100\">\r\n                    <Button  type=\"button\" onClick={()=>addBranchAddress()} color=\"danger\" fullwidth>\r\n                        Add\r\n                    </Button>\r\n                </Row>\r\n                <Row sm=\"100\" md=\"100\" lg=\"100\" xl=\"100\">\r\n                    <hr/>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default BusinessInfoFormOnly","import styled, { device } from \"@doar/shared/styled\";\n\nexport const StyledWrapper = styled.div`\n    position: fixed;\n    top: 55px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    ${device.large} {\n        top: 60px;\n    }\n`;\n","import { FC } from \"react\";\nimport { StyledWrapper } from \"./style\";\n\nconst Wrapper: FC = ({ children }) => {\n    return <StyledWrapper>{children}</StyledWrapper>;\n};\n\nexport default Wrapper;\n","import styled, { PositionProps, position, css } from \"@doar/shared/styled\";\n\nexport const StyledWrap = styled(({ top, bottom, ...rest }) => (\n    <div {...rest} />\n))<PositionProps>`\n    height: 100%;\n    position: relative;\n    ${({ bottom }) =>\n        !!bottom &&\n        css`\n            height: calc(100% - ${bottom});\n        `}\n    .ps {\n        overflow: hidden;\n    }\n    .ps > .ps__rail-y {\n        width: 3px;\n        background-color: rgba(72, 83, 114, 0.06);\n        z-index: 10;\n        position: absolute;\n        left: auto !important;\n        right: 0;\n        opacity: 0;\n        margin: 1px;\n        transition: opacity 0.2s;\n    }\n    @media (prefers-reduced-motion: reduce) {\n        .ps > .ps__rail-y {\n            transition: none;\n        }\n    }\n    .ps > .ps__rail-y > .ps__thumb-y {\n        position: absolute;\n        border-radius: 0;\n        width: 3px;\n        left: 0;\n        background-color: #97a3b9;\n    }\n    .ps.ps--active-y:hover > .ps__rail-y,\n    .ps.ps--active-y:focus > .ps__rail-y {\n        opacity: 1;\n    }\n\n    .scrollbar-sm > .ps__rail-y {\n        width: 1px;\n    }\n    .scrollbar-sm > .ps__rail-y > .ps__thumb-y {\n        width: 1px;\n    }\n\n    .scrollbar-lg > .ps__rail-y {\n        width: 6px;\n    }\n    .scrollbar-lg > .ps__rail-y > .ps__thumb-y {\n        width: 6px;\n    }\n    .scrollbar-container {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        height: auto;\n        ${position};\n    }\n`;\n","import { FC } from \"react\";\nimport { PositionProps } from \"@doar/shared/styled\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { StyledWrap } from \"./style\";\n\nconst ScrollBar: FC<PositionProps> = ({ children, ...rest }) => {\n    return (\n        <StyledWrap {...rest}>\n            <PerfectScrollbar>{children}</PerfectScrollbar>\n        </StyledWrap>\n    );\n};\n\nexport default ScrollBar;\n","import styled, { device, css, themeGet } from \"@doar/shared/styled\";\n\ninterface IProps {\n    $showSidebar: boolean;\n    $rightSidebar: boolean;\n}\n\n\nexport const ProfileEditContainer = styled.div<IProps>`\n    background-color: #fff;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    transition: all 0.3s;\n    ${device.large} {\n        transform: none;\n    }\n    ${device.xlarge} {\n    }\n    ${({ $showSidebar }) =>\n    $showSidebar &&\n    css`\n            transform: translateX(100vw);\n            @media (max-width: 991.98px) {\n                transform: translateX(304px);\n            }\n        `}\n    ${({ $rightSidebar }) =>\n    $rightSidebar &&\n    css`\n            transform: translateX(-260px);\n            @media (max-width: 1199.98px) {\n                transform: translateX(-260px);\n            }\n        `}\n    ${(props) =>\n    props.theme.name === \"dark\" &&\n    css`\n            background-color: ${themeGet(\"colors.darkdarken5\")};\n        `}\n`;\n\nexport const StyledMain = styled.div<IProps>`\n    background-color: #fff;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    transition: all 0.3s;\n    ${device.large} {\n        left: 325px;\n        transform: none;\n    }\n    ${device.xlarge} {\n        left: 340px;\n    }\n    ${({ $showSidebar }) =>\n        $showSidebar &&\n        css`\n            transform: translateX(100vw);\n            @media (max-width: 991.98px) {\n                transform: translateX(304px);\n            }\n        `}\n    ${({ $rightSidebar }) =>\n        $rightSidebar &&\n        css`\n            transform: translateX(-260px);\n            @media (max-width: 1199.98px) {\n                transform: translateX(-260px);\n            }\n        `}\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken5\")};\n        `}\n`;\n\n\n\n\n\nexport const StyledBody = styled.div`\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n  \n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken5\")};\n        `}\n    .react-tabs {\n        height: 100%;\n        &__tab-list {\n            padding: 0 25px;\n            border-bottom-width: 1px;\n            background-color: #fff;\n            ${(props) =>\n                props.theme.name === \"dark\" &&\n                css`\n                    background-color: ${themeGet(\"colors.darkdarken3\")};\n                `}\n        }\n        &__tab {\n            color: ${themeGet(\"colors.text3\")};\n            font-size: 11px;\n            font-weight: 500;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n            padding: 0;\n            height: 55px;\n            &--selected {\n                color: ${themeGet(\"colors.primary\")};\n                font-weight: 600;\n                &:after {\n                    height: 1px;\n                    bottom: 0px;\n                }\n            }\n            &:not(:first-of-type) {\n                margin-left: 30px;\n            }\n            ${(props) =>\n                props.theme.name === \"dark\" &&\n                css`\n                    background-color: transparent;\n                `}\n        }\n        &__tab-panel {\n            padding: 20px;\n            ${device.xlarge} {\n                padding: 25px;\n            }\n        }\n        &__content {\n            position: relative;\n            height: 100%;\n            margin-top: 0;\n            padding: 0px;\n            padding-bottom: 60px;\n            ${device.large} {\n                padding-bottom: 30px;\n            }\n            [data-name=\"row\"] {\n                ${device.xlarge} {\n                    max-width: 800px;\n                }\n            }\n            ${(props) =>\n                props.theme.name === \"dark\" &&\n                css`\n                    color: rgba(255, 255, 255, 0.8);\n                    .nav-social {\n                        a {\n                            color: ${themeGet(\"colors.gray300\")};\n                            &:hover,\n                            &:focus {\n                                color: ${themeGet(\"colors.primary\")};\n                            }\n                        }\n                    }\n                `}\n        }\n    }\n`;\n\nexport const StyledSidebar = styled.div`\n    background-color: #fff;\n    position: absolute;\n    top: 0;\n    right: -260px;\n    bottom: 0;\n    border-left: 1px solid ${themeGet(\"colors.border\")};\n    width: 260px;\n    height: 100%;\n    ${device.xlarge} {\n        width: 290px;\n        right: 0;\n    }\n    ${(props) =>\n        props.theme.name === \"dark\" &&\n        css`\n            background-color: ${themeGet(\"colors.darkdarken3\")};\n            color: ${themeGet(\"colors.gray300\")};\n        `}\n`;\n\nexport const StyledOptionsBtn = styled.button`\n    border: none;\n    background-color: transparent;\n    padding: 0;\n    margin-left: auto;\n    color: ${themeGet(\"colors.gray600\")};\n    ${device.xlarge} {\n        display: none;\n    }\n    &:hover,\n    &:focus {\n        color: ${themeGet(\"colors.cornflower\")};\n    }\n`;\n","import { FC } from \"react\";\r\nimport {\r\n    FormGroup,\r\n    Anchor,\r\n    Button,\r\n    Text,\r\n} from \"@doar/components\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n    StyledWrap,\r\n    StyledTitle,\r\n    StyledDesc,\r\n    StyledBottomText,\r\n    Container,\r\n    Row\r\n} from \"../signup-form/style\";\r\nimport Signup1Form from \"../profile_forms/signup1\";\r\n\r\n\r\n\r\ninterface SignUpProps{\r\n    handleChange?:any\r\n}\r\n\r\n\r\ninterface IFormValues {\r\n    email: string;\r\n    password: string;\r\n    first_name: string;\r\n    last_name: string;\r\n}\r\n\r\nconst ProfilePersonalInfoForm: FC<SignUpProps> = () => {\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const onSubmit = (data: IFormValues) => {\r\n        console.log(JSON.stringify(data, null));\r\n    };\r\n\r\n    return (\r\n        <StyledWrap>\r\n            <StyledTitle>Update your account infos</StyledTitle>\r\n            <StyledDesc>\r\n                {/*It&apos;s free to signup and only takes a minute.*/}\r\n            </StyledDesc>\r\n            <form action=\"#\" onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <Signup1Form register={register} errors={errors} />\r\n                <Container>\r\n                    <Row sm=\"100\" md=\"100\" lg=\"100\" xl=\"100\">\r\n                        <FormGroup>\r\n                            <Button type=\"submit\" color=\"brand2\" fullwidth>\r\n                                Update\r\n                            </Button>\r\n                        </FormGroup>\r\n                    </Row>\r\n                </Container>\r\n            </form>\r\n        </StyledWrap>\r\n    );\r\n};\r\n\r\nexport default ProfilePersonalInfoForm;\r\n\r\n\r\n","import {FC, useRef, useState} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    StyledBottomText,\r\n    StyledDesc,\r\n    StyledDivider,\r\n    StyledTitle,\r\n    StyledWrap\r\n} from \"../signup-form/style\";\r\nimport {\r\n    Anchor,\r\n    Button,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Text,\r\n    Radio, Textarea, Select\r\n} from \"@doar/components\";\r\nimport {hasKey} from \"@doar/shared/dist/methods\";\r\nimport {\r\n    Avatar,\r\n    AvatarInitial\r\n} from '@doar/components'\r\nimport {\r\n    StyledLeft,\r\n    StyledAvatar\r\n} from '@doar/components/src/apps/contacts/modal-edit/style'\r\nimport ContactEditPhoto from \"../apps/contacts/edit-photo-button\";\r\nimport BusinessInfoFormOnly from \"../profile_forms/businessInfoForm\";\r\n\r\n\r\n\r\n\r\ninterface BusinessInfoFormProps{\r\n    handleChange?:any\r\n}\r\n\r\n\r\ninterface IFormValues {\r\n    main_image: string;\r\n    company_name: string;\r\n    legal_name: string;\r\n    business_name: string;\r\n    type_business:boolean;\r\n    description:string;\r\n    address:string;\r\n    director_full_name:string;\r\n    bank_account:string;\r\n    inn:string;\r\n    identification_number:string;\r\n    nds:string;\r\n    oked:string;\r\n    account_type:string;\r\n    mfo_bank:string;\r\n    delivery_type:string;\r\n    website:string;\r\n    branch:[{\r\n        country:string;\r\n        city:string;\r\n        index:number;\r\n        address:string;\r\n    }]\r\n\r\n}\r\n\r\nlet ProfileBusinessInfoUpdate:FC<BusinessInfoFormProps>= ({handleChange})=>{\r\n    let fileUploadRef = useRef<HTMLInputElement>(null)\r\n    let [images,setimages] = useState<any>([])\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n    let [branch_address,setbranch_address] = useState([{\r\n        country:\"\",\r\n        city:\"\",\r\n        index:\"\",\r\n        address:\"\",\r\n    }])\r\n\r\n\r\n    const onSubmit = (data: IFormValues) => {\r\n        console.log(data)\r\n    };\r\n\r\n    return (\r\n        <StyledWrap>\r\n            <StyledTitle>Update business account</StyledTitle>\r\n\r\n            <form action=\"#\" onSubmit={handleSubmit(onSubmit)} noValidate>\r\n                <BusinessInfoFormOnly\r\n                    errors={errors}\r\n                    register={register}\r\n                    images={images}\r\n                    setimages={(e:any)=>setimages(e)}\r\n                    branch_address={branch_address}\r\n                    setbranch_address={(e:any)=>setbranch_address(e)}\r\n                    fileUploadRef={fileUploadRef}\r\n                />\r\n                <Container>\r\n\r\n                    <Row sm=\"100\" md=\"100\" lg=\"100\" xl=\"100\">\r\n                        <Button type=\"submit\" color=\"brand2\" fullwidth>\r\n                            Update\r\n                        </Button>\r\n                    </Row>\r\n\r\n                </Container>\r\n\r\n            </form>\r\n        </StyledWrap>\r\n    );\r\n}\r\nexport default ProfileBusinessInfoUpdate","import styled from \"@doar/shared/dist/styled\";\r\n\r\nexport const ProfileEditFormsContainer = styled.div`\r\n  width: 50%;\r\n  margin: auto;\r\n  @media only screen and (max-width: 600px){\r\n    width: 100%;\r\n  }\r\n  @media only screen and (min-width: 600px) and (max-width: 1000px){\r\n    width: 69%;\r\n  }\r\n  @media only screen and (min-width: 1000px) and (max-width: 1500px){\r\n    width: 69%;\r\n  }\r\n`;","import { FC, useState, useEffect } from \"react\";\nimport { MoreHorizontal } from \"react-feather\";\nimport {\n    TabWrap,\n    TabList,\n    Tab,\n    TabContent,\n    TabPanel,\n    Text,\n} from \"@doar/components\";\nimport { useWindowSize } from \"@doar/shared/hooks\";\nimport { useAppSelector, useAppDispatch } from \"../../../../redux/hooks\";\nimport { toggleSidebar } from \"../../../../redux/slices/ui\";\nimport Scrollbar from \"../../../../components/scrollbar\";\nimport {\n    StyledBody,\n    StyledOptionsBtn, ProfileEditContainer,\n} from \"./style\";\nimport ProfilePersonalInfoForm from \"../../../../components/profile_edit/profilePersonalInfoForm\";\nimport ProfileBusinessInfoUpdate from \"../../../../components/profile_edit/businessInfoForm\";\nimport {ProfileEditFormsContainer} from \"../../../../components/profile_edit/styles\";\n\nconst Wrapper: FC = () => {\n    return (\n        <ProfileEditContainer\n            className=\"main-content\"\n            $showSidebar={false}\n            $rightSidebar={false}\n        >\n            <StyledBody>\n                <TabWrap variation=\"line\">\n                    <TabList>\n                        <Tab>\n                            Contact Info\n                            <Text\n                                as=\"span\"\n                                display={[\"none\", \"inline\"]}\n                                pr=\"3px\"\n                            >\n                                 rmation\n                            </Text>\n\n\n\n                        </Tab>\n                        <Tab>\n                            Business\n                            <Text\n                                as=\"span\"\n                                display={[\"none\", \"inline\"]}\n                                pr=\"3px\"\n                                ml='5px'\n                            >\n                               Info\n                            </Text>\n\n\n                        </Tab>\n                    </TabList>\n                    <TabContent>\n                        <Scrollbar top=\"0\">\n                            <TabPanel>\n                                <ProfileEditFormsContainer>\n                                    <ProfilePersonalInfoForm/>\n                                </ProfileEditFormsContainer>\n                            </TabPanel>\n                            <TabPanel>\n                                <ProfileEditFormsContainer>\n                                    <ProfileBusinessInfoUpdate />\n                                </ProfileEditFormsContainer>\n                            </TabPanel>\n                        </Scrollbar>\n                    </TabContent>\n                </TabWrap>\n            </StyledBody>\n\n        </ProfileEditContainer>\n    );\n};\n\nexport default Wrapper;\n","import { FC } from \"react\";\r\nimport Layout from \"../../layouts\";\r\nimport Wrapper from \"../../containers/apps/contacts/wrapper\";\r\nimport Sidebar from \"../../containers/apps/contacts/sidebar\";\r\nimport Main from \"../../containers/apps/contacts/main\";\r\nimport SEO from \"../../components/seo\";\r\n\r\nconst profileEdit: FC = () => {\r\n    return (\r\n        <Layout  hasSidebar hideFooter sidebarLayout={2}>\r\n            <SEO />\r\n            <Wrapper>\r\n                <Main />\r\n            </Wrapper>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default profileEdit;\r\n"],"sourceRoot":""}